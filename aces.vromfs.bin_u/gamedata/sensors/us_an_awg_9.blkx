{
  "type": "radar",
  "name": "AN/AWG-9",
  "showMissileLaunchZone": true,
  "transivers": {
    "pulse": {
      "sideLobesAttenuation": -20.0,
      "power": 2000.0,
      "band": 8,
      "rcs": 5.0,
      "range": 110000.0,
      "rangeMax": 150000.0,
      "antenna": {
        "angleHalfSens": 2.8,
        "sideLobesSensitivity": -34.0
      }
    },
    "pulseDopplerVelocitySearch": {
      "sideLobesAttenuation": -20.0,
      "power": 2000.0,
      "band": 8,
      "rcs": 5.0,
      "range": 203000.0,
      "rangeMax": 250000.0,
      "antenna": {
        "angleHalfSens": 2.8,
        "sideLobesSensitivity": -34.0
      }
    },
    "pulseDoppler": {
      "sideLobesAttenuation": -20.0,
      "power": 2000.0,
      "band": 8,
      "rcs": 5.0,
      "range": 167000.0,
      "rangeMax": 200000.0,
      "antenna": {
        "angleHalfSens": 2.8,
        "sideLobesSensitivity": -34.0
      }
    }
  },
  "scanPatterns": {
    "searchNarrow": {
      "type": "pyramide",
      "azimuthLimits": [
        -65.0,
        65.0
      ],
      "elevationLimits": [
        -65.0,
        65.0
      ],
      "rollStabLimit": 70.0,
      "period": 0.25,
      "width": 10.0,
      "barHeight": 1.8,
      "barsCount": 2,
      "rowMajor": true
    },
    "searchMedium": {
      "type": "pyramide",
      "azimuthLimits": [
        -65.0,
        65.0
      ],
      "elevationLimits": [
        -65.0,
        65.0
      ],
      "rollStabLimit": 70.0,
      "period": 1.0,
      "width": 40.0,
      "barHeight": 1.6,
      "barsCount": 4,
      "rowMajor": true
    },
    "searchWide": {
      "type": "pyramide",
      "azimuthLimits": [
        -65.0,
        65.0
      ],
      "elevationLimits": [
        -65.0,
        65.0
      ],
      "rollStabLimit": 70.0,
      "period": 1.6,
      "width": 65.0,
      "barHeight": 1.6,
      "barsCount": 4,
      "rowMajor": true
    },
    "twsNarrow": {
      "type": "pyramide",
      "azimuthLimits": [
        -65.0,
        65.0
      ],
      "elevationLimits": [
        -65.0,
        65.0
      ],
      "rollStabLimit": 70.0,
      "period": 0.5,
      "width": 10.0,
      "barHeight": 1.6,
      "barsCount": 5,
      "rowMajor": true,
      "preciseMinor": true
    },
    "twsMedium": {
      "type": "pyramide",
      "azimuthLimits": [
        -65.0,
        65.0
      ],
      "elevationLimits": [
        -65.0,
        65.0
      ],
      "rollStabLimit": 70.0,
      "period": 0.5,
      "width": 40.0,
      "barHeight": 1.8,
      "barsCount": 2,
      "rowMajor": true,
      "preciseMinor": true
    },
    "verticalLockLow": {
      "type": "pyramide",
      "azimuthLimits": [
        -65.0,
        65.0
      ],
      "elevationLimits": [
        -65.0,
        65.0
      ],
      "period": 0.5,
      "width": 20.0,
      "barHeight": 2.5,
      "barsCount": 2,
      "rowMajor": false,
      "centerElevation": 5.0,
      "indicate": true
    },
    "verticalLockHigh": {
      "type": "pyramide",
      "azimuthLimits": [
        -65.0,
        65.0
      ],
      "elevationLimits": [
        -65.0,
        65.0
      ],
      "period": 0.5,
      "width": 20.0,
      "barHeight": 2.5,
      "barsCount": 2,
      "rowMajor": false,
      "centerElevation": 35.0,
      "indicate": true
    },
    "boresightLock": {
      "type": "cone",
      "azimuthLimits": [
        -65.0,
        65.0
      ],
      "elevationLimits": [
        -65.0,
        65.0
      ],
      "period": 0.5,
      "width": 1.25,
      "indicate": true
    },
    "designationLockTws": {
      "type": "pyramide",
      "azimuthLimits": [
        -65.0,
        65.0
      ],
      "elevationLimits": [
        -65.0,
        65.0
      ],
      "rollStabLimit": 70.0,
      "period": 0.25,
      "width": 2.5,
      "barHeight": 1.5,
      "barsCount": 2,
      "rowMajor": true,
      "indicate": true
    },
    "designationLockSearch": {
      "type": "pyramide",
      "azimuthLimits": [
        -65.0,
        65.0
      ],
      "elevationLimits": [
        -65.0,
        65.0
      ],
      "rollStabLimit": 70.0,
      "period": 0.5,
      "width": 10.0,
      "barHeight": 1.5,
      "barsCount": 2,
      "rowMajor": false,
      "indicate": true
    },
    "track": {
      "type": "no",
      "azimuthLimits": [
        -65.0,
        65.0
      ],
      "elevationLimits": [
        -65.0,
        65.0
      ]
    }
  },
  "signals": {
    "pulseSearch": {
      "dynamicRange": [
        40.0,
        15.0
      ],
      "groundClutter": true,
      "aircraftAsTarget": true,
      "friendFoeId": true,
      "distance": {
        "presents": true,
        "minValue": 500.0,
        "maxValue": 370000.0,
        "width": 500.0
      }
    },
    "pulseDopplerVelocitySearch": {
      "rangeFinder": false,
      "dopplerSpeedFinder": true,
      "dynamicRange": [
        40.0,
        15.0
      ],
      "groundClutter": true,
      "aircraftAsTarget": true,
      "friendFoeId": false,
      "absDopplerSpeed": false,
      "mainBeamDopplerSpeed": false,
      "dopplerSpeed": {
        "presents": true,
        "minValue": -410.0,
        "maxValue": 2050.0,
        "signalWidthMin": 5.0,
        "width": 120.0
      }
    },
    "pulseDopplerSearch": {
      "dynamicRange": [
        40.0,
        15.0
      ],
      "groundClutter": true,
      "aircraftAsTarget": true,
      "friendFoeId": true,
      "absDopplerSpeed": false,
      "mainBeamDopplerSpeed": false,
      "distance": {
        "presents": true,
        "minValue": 500.0,
        "maxValue": 370000.0,
        "width": 500.0
      },
      "dopplerSpeed": {
        "presents": true,
        "minValue": -410.0,
        "maxValue": 2050.0,
        "signalWidthMin": 5.0,
        "width": 120.0
      }
    },
    "pulseTrack": {
      "dynamicRange": [
        40.0,
        15.0
      ],
      "groundClutter": true,
      "aircraftAsTarget": true,
      "angularAccuracy": 0.05,
      "distanceAccuracy": 12.0,
      "track": true,
      "distance": {
        "presents": true,
        "minValue": 250.0,
        "maxValue": 185000.0,
        "width": 200.0
      }
    },
    "pulseDopplerTrack": {
      "rangeFinder": true,
      "dopplerSpeedFinder": true,
      "dynamicRange": [
        40.0,
        15.0
      ],
      "groundClutter": true,
      "aircraftAsTarget": true,
      "angularAccuracy": 0.05,
      "distanceAccuracy": 12.0,
      "absDopplerSpeed": false,
      "mainBeamDopplerSpeed": false,
      "track": true,
      "distance": {
        "presents": true,
        "minValue": 200.0,
        "maxValue": 185000.0,
        "width": 150.0
      },
      "dopplerSpeed": {
        "presents": true,
        "minValue": -410.0,
        "maxValue": 2050.0,
        "signalWidthMin": 2.0,
        "width": 120.0
      }
    }
  },
  "scanPatternSets": {
    "search": {
      "scanPattern1": "searchMedium",
      "scanPattern2": "searchNarrow",
      "scanPattern3": "searchWide"
    },
    "tws": {
      "scanPattern1": "twsMedium",
      "scanPattern2": "twsNarrow"
    },
    "boresightLock": {
      "scanPattern1": "boresightLock"
    },
    "verticalLock": {
      "scanPattern1": "verticalLockLow",
      "scanPattern2": "verticalLockHigh"
    }
  },
  "scopeRangeSets": {
    "common": {
      "range1": 37000.0,
      "range2": 92500.0,
      "range3": 185000.0,
      "range4": 370000.0,
      "range5": 9520.0,
      "range6": 18500.0
    },
    "acm": {
      "range1": 9250.0
    }
  },
  "fsms": {
    "main": {
      "stateInit": "init",
      "actionsTemplates": {
        "init": {
          "setEnabled": {
            "value": false
          },
          "setTransiver": {
            "transiver": "pulse"
          },
          "setSignal": {
            "signal": "pulseSearch"
          },
          "setTargetDesignationRange": {
            "azimuthRange": [
              -65.0,
              65.0
            ],
            "azmithWidth": 1.5,
            "distanceRange": [
              0.0,
              185000.0
            ],
            "distanceWidth": 1000.0,
            "distanceRelWidthMin": 0.05,
            "dopplerSpeedRange": [
              -410.0,
              2050.0
            ],
            "dopplerSpeedWidth": 60.0,
            "dopplerSpeedRelWidthMin": 0.05
          }
        },
        "setStandbySearchTwsModeCommon": {
          "setCenterAzimuth": {
            "source": "constant",
            "value": 0.0
          },
          "setCenterElevation": {
            "source": "constant",
            "value": 0.0
          },
          "setScopeRangeSet": {
            "scopeRangeSet": "common"
          },
          "setIllumination": {
            "illumination": false
          }
        },
        "setStandbyModeCommon": {
          "setStandbySearchTwsModeCommon": {},
          "clearTargets": {},
          "clearTargetsOfInterest": {},
          "setEnabled": {
            "value": false
          }
        },
        "setSearchStandbyModeCommon": {
          "setStandbyModeCommon": {},
          "setScanPatternSet": {
            "scanPatternSet": "search"
          }
        },
        "setTwsStandbyModeCommon": {
          "setStandbyModeCommon": {},
          "setScanPatternSet": {
            "scanPatternSet": "tws"
          }
        },
        "setPulseStandbyMode": {
          "setSearchStandbyModeCommon": {},
          "setTransiver": {
            "transiver": "pulse"
          },
          "setSignal": {
            "signal": "pulseSearch"
          },
          "setModeName": {
            "name": "standby"
          }
        },
        "setPulseDopplerVelocityStandbyMode": {
          "setSearchStandbyModeCommon": {},
          "setScanPatternSet": {
            "scanPatternSet": "search"
          },
          "setTransiver": {
            "transiver": "pulseDopplerVelocitySearch"
          },
          "setSignal": {
            "signal": "pulseDopplerVelocitySearch"
          },
          "setModeName": {
            "name": "PD VS standby"
          }
        },
        "setPulseDopplerStandbyMode": {
          "setSearchStandbyModeCommon": {},
          "setScanPatternSet": {
            "scanPatternSet": "search"
          },
          "setTransiver": {
            "transiver": "pulseDoppler"
          },
          "setSignal": {
            "signal": "pulseDopplerSearch"
          },
          "setModeName": {
            "name": "PD standby"
          }
        },
        "setTwsStandbyMode": {
          "setTwsStandbyModeCommon": {},
          "setTransiver": {
            "transiver": "pulseDoppler"
          },
          "setSignal": {
            "signal": "pulseDopplerSearch"
          },
          "setModeName": {
            "name": "TWS standby"
          }
        },
        "setSearchTwsModeCommon": {
          "setStandbySearchTwsModeCommon": {},
          "setEnabled": {
            "value": true
          }
        },
        "setSearchModeCommon": {
          "setSearchTwsModeCommon": {},
          "setCueEnabled": {
            "value": true,
            "updateActiveTargetUnderCue": false
          },
          "setScanPatternSet": {
            "scanPatternSet": "search"
          },
          "setFsmActive": {
            "fsm": "search",
            "active": true
          }
        },
        "setTwsSearchModeCommon": {
          "setSearchTwsModeCommon": {},
          "setCueEnabled": {
            "value": true,
            "updateActiveTargetUnderCue": true
          },
          "setScanPatternSet": {
            "scanPatternSet": "tws"
          },
          "setFsmActive": {
            "fsm": "tws",
            "active": true
          }
        },
        "setPulseSearchMode": {
          "setSearchModeCommon": {},
          "setTransiver": {
            "transiver": "pulse"
          },
          "setSignal": {
            "signal": "pulseSearch"
          },
          "setModeName": {
            "name": "search"
          }
        },
        "setPulseDopplerVelocitySearchMode": {
          "setSearchModeCommon": {},
          "setTransiver": {
            "transiver": "pulseDopplerVelocitySearch"
          },
          "setSignal": {
            "signal": "pulseDopplerVelocitySearch"
          },
          "setModeName": {
            "name": "PD VS search"
          }
        },
        "setPulseDopplerSearchMode": {
          "setSearchModeCommon": {},
          "setTransiver": {
            "transiver": "pulseDoppler"
          },
          "setSignal": {
            "signal": "pulseDopplerSearch"
          },
          "setModeName": {
            "name": "PD search"
          }
        },
        "setTwsSearchMode": {
          "setTwsSearchModeCommon": {},
          "setTransiver": {
            "transiver": "pulseDoppler"
          },
          "setSignal": {
            "signal": "pulseDopplerSearch"
          },
          "setModeName": {
            "name": "TWS search"
          }
        },
        "resetSearchMode": {
          "setFsmActive": {
            "fsm": "search",
            "active": false
          },
          "setCueEnabled": {
            "value": false
          }
        },
        "resetTwsMode": {
          "clearTargetsOfInterest": {},
          "setFsmActive": {
            "fsm": "tws",
            "active": false
          },
          "setCueEnabled": {
            "value": false
          }
        },
        "setDesignationLockModeCommon": {
          "setEnabled": {
            "value": true
          },
          "setScanPatternSet": {},
          "resetScanPhase": {},
          "setCenterAzimuth": {
            "source": "targetDesignation"
          },
          "setCenterElevation": {
            "source": "targetDesignation"
          },
          "setFsmActive": {
            "fsm": "lock",
            "active": true
          },
          "setIllumination": {
            "illumination": false
          }
        },
        "setPulseDesignationLockMode": {
          "setDesignationLockModeCommon": {},
          "setDistGatePos": {
            "source": "targetDesignation",
            "width": 1000.0
          },
          "setScanPattern": {
            "scanPattern": "designationLockSearch"
          },
          "setTransiver": {
            "transiver": "pulse"
          },
          "setSignal": {
            "signal": "pulseTrack"
          },
          "setModeName": {
            "name": "acquisition"
          }
        },
        "setPulseDopplerVelocityDesignationLockMode": {
          "setDesignationLockModeCommon": {},
          "setRelSpeedGatePos": {
            "source": "targetDesignation",
            "width": 30.0
          },
          "setScanPattern": {
            "scanPattern": "designationLockSearch"
          },
          "setTransiver": {
            "transiver": "pulseDoppler"
          },
          "setSignal": {
            "signal": "pulseDopplerVelocitySearch"
          },
          "setModeName": {
            "name": "PD VS acquisition"
          }
        },
        "setPulseDopplerDesignationLockMode": {
          "setDesignationLockModeCommon": {},
          "setDistGatePos": {
            "source": "targetDesignation",
            "width": 1000.0
          },
          "setRelSpeedGatePos": {
            "source": "constRange",
            "pos": 820.0,
            "width": 2460.0
          },
          "setScanPattern": {
            "scanPattern": "designationLockSearch"
          },
          "setTransiver": {
            "transiver": "pulseDoppler"
          },
          "setSignal": {
            "signal": "pulseDopplerTrack"
          },
          "setModeName": {
            "name": "PD acquisition"
          }
        },
        "setTwsDesignationLockMode": {
          "setDesignationLockModeCommon": {},
          "setDistGatePos": {
            "source": "targetDesignation",
            "width": 300.0
          },
          "setRelSpeedGatePos": {
            "source": "targetDesignation",
            "width": 20.0
          },
          "setScanPattern": {
            "scanPattern": "designationLockTws"
          },
          "setTransiver": {
            "transiver": "pulseDoppler"
          },
          "setSignal": {
            "signal": "pulseDopplerTrack"
          },
          "setModeName": {
            "name": "TWS acquisition"
          }
        },
        "setAcmLockModeCommon": {
          "setEnabled": {
            "value": true
          },
          "clearTargets": {},
          "clearTargetsOfInterest": {},
          "resetScanPhase": {},
          "setCenterAzimuth": {
            "source": "constant",
            "value": 0.0
          },
          "setCenterElevation": {
            "source": "constant",
            "value": 0.0
          },
          "setFsmActive": {
            "fsm": "lock",
            "active": true
          },
          "setScopeRangeSet": {
            "scopeRangeSet": "acm"
          },
          "setIllumination": {
            "illumination": false
          }
        },
        "setBoresightLockModeCommon": {
          "setAcmLockModeCommon": {},
          "setScanPatternSet": {
            "scanPatternSet": "boresightLock"
          },
          "setDistGatePos": {
            "source": "constRange",
            "pos": 4625.0,
            "width": 9250.0
          },
          "setRelSpeedGatePos": {
            "source": "constRange",
            "pos": 820.0,
            "width": 2460.0
          }
        },
        "setPulseBoresightLockMode": {
          "setBoresightLockModeCommon": {},
          "setTransiver": {
            "transiver": "pulse"
          },
          "setSignal": {
            "signal": "pulseSearch"
          },
          "setModeName": {
            "name": "BST"
          }
        },
        "setPulseDopplerVelocityBoresightLockMode": {
          "setBoresightLockModeCommon": {},
          "setTransiver": {
            "transiver": "pulseDoppler"
          },
          "setSignal": {
            "signal": "pulseDopplerTrack"
          },
          "setModeName": {
            "name": "PD VS BST"
          }
        },
        "setPulseDopplerBoresightLockMode": {
          "setBoresightLockModeCommon": {},
          "setTransiver": {
            "transiver": "pulseDoppler"
          },
          "setSignal": {
            "signal": "pulseDopplerTrack"
          },
          "setModeName": {
            "name": "PD BST"
          }
        },
        "setTwsBoresightLockMode": {
          "setBoresightLockModeCommon": {},
          "setTransiver": {
            "transiver": "pulseDoppler"
          },
          "setSignal": {
            "signal": "pulseDopplerTrack"
          },
          "setModeName": {
            "name": "TWS BST"
          }
        },
        "setVerticalLockModeCommon": {
          "setAcmLockModeCommon": {},
          "setScanPatternSet": {
            "scanPatternSet": "verticalLock"
          },
          "setDistGatePos": {
            "source": "constRange",
            "pos": 4625.0,
            "width": 9250.0
          },
          "setRelSpeedGatePos": {
            "source": "constRange",
            "pos": 820.0,
            "width": 2460.0
          }
        },
        "setPulseVerticalLockMode": {
          "setVerticalLockModeCommon": {},
          "setTransiver": {
            "transiver": "pulse"
          },
          "setSignal": {
            "signal": "pulseSearch"
          },
          "setModeName": {
            "name": "VSL"
          }
        },
        "setPulseDopplerVelocityVerticalLockMode": {
          "setVerticalLockModeCommon": {},
          "setTransiver": {
            "transiver": "pulseDoppler"
          },
          "setSignal": {
            "signal": "pulseDopplerTrack"
          },
          "setModeName": {
            "name": "PD VS VSL"
          }
        },
        "setPulseDopplerVerticalLockMode": {
          "setVerticalLockModeCommon": {},
          "setTransiver": {
            "transiver": "pulseDoppler"
          },
          "setSignal": {
            "signal": "pulseDopplerTrack"
          },
          "setModeName": {
            "name": "PD VSL"
          }
        },
        "setTwsVerticalLockMode": {
          "setVerticalLockModeCommon": {},
          "setTransiver": {
            "transiver": "pulseDoppler"
          },
          "setSignal": {
            "signal": "pulseDopplerTrack"
          },
          "setModeName": {
            "name": "TWS VSL"
          }
        },
        "setTrackModeCommon": {
          "setEnabled": {
            "value": true
          },
          "setScanPatternSet": {},
          "setScanPattern": {
            "scanPattern": "track"
          },
          "clearTargets": {},
          "clearTargetsOfInterest": {},
          "addTargetOfInterest": {},
          "setLastTargetOfInterestActive": {},
          "updateActiveTargetOfInterest": {},
          "setCenterAzimuth": {
            "source": "activeTargetOfInterest"
          },
          "setCenterElevation": {
            "source": "activeTargetOfInterest"
          },
          "setDistGatePos": {
            "source": "activeTargetOfInterest",
            "width": 0.0
          },
          "setRelSpeedGatePos": {
            "source": "activeTargetOfInterest",
            "width": 0.0
          },
          "setFsmActive": {
            "fsm": "track",
            "active": true
          },
          "setIllumination": {
            "illumination": true
          }
        },
        "resetTrackMode": {
          "clearTargetsOfInterest": {},
          "setFsmActive": {
            "fsm": "track",
            "active": false
          }
        },
        "setPulseTrackMode": {
          "setTrackModeCommon": {},
          "setTransiver": {
            "transiver": "pulse"
          },
          "setSignal": {
            "signal": "pulseSearch"
          },
          "setModeName": {
            "name": "track"
          }
        },
        "setPulseDopplerVelocityTrackMode": {
          "setTrackModeCommon": {},
          "setTransiver": {
            "transiver": "pulseDoppler"
          },
          "setSignal": {
            "signal": "pulseDopplerTrack"
          },
          "setModeName": {
            "name": "PD track"
          }
        },
        "setPulseDopplerTrackMode": {
          "setTrackModeCommon": {},
          "setTransiver": {
            "transiver": "pulseDoppler"
          },
          "setSignal": {
            "signal": "pulseDopplerTrack"
          },
          "setModeName": {
            "name": "PD track"
          }
        },
        "setTwsTrackMode": {
          "setTrackModeCommon": {},
          "setTransiver": {
            "transiver": "pulseDoppler"
          },
          "setSignal": {
            "signal": "pulseDopplerTrack"
          },
          "setModeName": {
            "name": "TWS track"
          }
        }
      },
      "transitions": {
        "init": {
          "stateFrom": "init",
          "event": "init",
          "stateTo": "pulseDopplerStandby",
          "actions": {
            "init": {},
            "setPulseDopplerStandbyMode": {}
          }
        },
        "pulseSwitchOn": {
          "stateFrom": [
            "pulseStandby",
            "pulseVerticalStandby"
          ],
          "command": "switch",
          "event": "enable",
          "stateTo": "pulseSearch",
          "actions": {
            "setPulseSearchMode": {}
          }
        },
        "pulseDopplerVelocitySwitchOn": {
          "stateFrom": [
            "pulseDopplerVelocityStandby",
            "pulseDopplerVelocityVerticalStandby"
          ],
          "command": "switch",
          "event": "enable",
          "stateTo": "pulseDopplerVelocitySearch",
          "actions": {
            "setPulseDopplerVelocitySearchMode": {}
          }
        },
        "pulseDopplerSwitchOn": {
          "stateFrom": [
            "pulseDopplerStandby",
            "pulseDopplerVerticalStandby"
          ],
          "command": "switch",
          "event": "enable",
          "stateTo": "pulseDopplerSearch",
          "actions": {
            "setPulseDopplerSearchMode": {}
          }
        },
        "twsSwitchOn": {
          "stateFrom": [
            "twsStandby",
            "twsVerticalStandby"
          ],
          "command": "switch",
          "event": "enable",
          "stateTo": "twsSearch",
          "actions": {
            "setTwsSearchMode": {}
          }
        },
        "pulseSwitchOff": {
          "stateFrom": "pulseSearch",
          "command": "switch",
          "event": "disable",
          "stateTo": "pulseStandby",
          "actions": {
            "resetSearchMode": {},
            "setPulseStandbyMode": {}
          }
        },
        "pulseDopplerVelocitySwitchOff": {
          "stateFrom": "pulseDopplerVelocitySearch",
          "command": "switch",
          "event": "disable",
          "stateTo": "pulseDopplerVelocityStandby",
          "actions": {
            "resetSearchMode": {},
            "setPulseDopplerVelocityStandbyMode": {}
          }
        },
        "pulseDopplerSwitchOff": {
          "stateFrom": "pulseDopplerSearch",
          "command": "switch",
          "event": "disable",
          "stateTo": "pulseDopplerStandby",
          "actions": {
            "resetSearchMode": {},
            "setPulseDopplerStandbyMode": {}
          }
        },
        "twsSwitchOff": {
          "stateFrom": "twsSearch",
          "command": "switch",
          "event": "disable",
          "stateTo": "twsStandby",
          "actions": {
            "resetTwsMode": {},
            "setTwsStandbyMode": {}
          }
        },
        "pulseToPulseDopplerVelocityStandby": {
          "stateFrom": "pulseStandby",
          "command": "modeSwitch",
          "stateTo": "pulseDopplerVelocityStandby",
          "actions": {
            "setPulseDopplerVelocityStandbyMode": {}
          }
        },
        "pulseDopplerVelocityToPulseDopplerStandby": {
          "stateFrom": "pulseDopplerVelocityStandby",
          "command": "modeSwitch",
          "stateTo": "pulseDopplerStandby",
          "actions": {
            "setPulseDopplerStandbyMode": {}
          }
        },
        "pulseDopplerToTwsStandby": {
          "stateFrom": "pulseDopplerStandby",
          "command": "modeSwitch",
          "stateTo": "twsStandby",
          "actions": {
            "setPulseStandbyMode": {}
          }
        },
        "twsToPulseStandby": {
          "stateFrom": "twsStandby",
          "command": "modeSwitch",
          "stateTo": "pulseStandby",
          "actions": {
            "setTwsStandbyMode": {}
          }
        },
        "pulseToPulseDopplerVelocityVerticalStandby": {
          "stateFrom": "pulseVerticalStandby",
          "command": "modeSwitch",
          "stateTo": "pulseDopplerVelocityVerticalStandby",
          "actions": {
            "setPulseDopplerVelocityStandbyMode": {}
          }
        },
        "pulseDopplerVelocityToPulseDopplerVerticalStandby": {
          "stateFrom": "pulseDopplerVelocityVerticalStandby",
          "command": "modeSwitch",
          "stateTo": "pulseDopplerVerticalStandby",
          "actions": {
            "setPulseDopplerStandbyMode": {}
          }
        },
        "pulseDopplerToTwsVerticalStandby": {
          "stateFrom": "pulseDopplerVerticalStandby",
          "command": "modeSwitch",
          "stateTo": "twsVerticalStandby",
          "actions": {
            "setPulseStandbyMode": {}
          }
        },
        "twsToPulseVerticalStandby": {
          "stateFrom": "twsVerticalStandby",
          "command": "modeSwitch",
          "stateTo": "pulseVerticalStandby",
          "actions": {
            "setTwsStandbyMode": {}
          }
        },
        "pulseToPulseDopplerVelocitySearch": {
          "stateFrom": "pulseSearch",
          "command": "modeSwitch",
          "stateTo": "pulseDopplerVelocitySearch",
          "actions": {
            "setPulseDopplerVelocitySearchMode": {}
          }
        },
        "pulseDopplerVelocityToPulseDopplerSearch": {
          "stateFrom": "pulseDopplerVelocitySearch",
          "command": "modeSwitch",
          "stateTo": "pulseDopplerSearch",
          "actions": {
            "setPulseDopplerSearchMode": {}
          }
        },
        "pulseDopplerToTwsSearch": {
          "stateFrom": "pulseDopplerSearch",
          "command": "modeSwitch",
          "stateTo": "twsSearch",
          "actions": {
            "resetSearchMode": {},
            "setTwsSearchMode": {}
          }
        },
        "twsToPulseSearch": {
          "stateFrom": "twsSearch",
          "command": "modeSwitch",
          "stateTo": "pulseSearch",
          "actions": {
            "resetTwsMode": {},
            "setPulseSearchMode": {}
          }
        },
        "pulseToPulseDopplerVelocityBoresightLock": {
          "stateFrom": "pulseBoresightLock",
          "command": "modeSwitch",
          "stateTo": "pulseDopplerVelocityBoresightLock",
          "actions": {
            "setPulseDopplerVelocityBoresightLockMode": {}
          }
        },
        "pulseDopplerVelocityToPulseDopplerBoresightLock": {
          "stateFrom": "pulseDopplerVelocityBoresightLock",
          "command": "modeSwitch",
          "stateTo": "pulseDopplerBoresightLock",
          "actions": {
            "setPulseDopplerBoresightLockMode": {}
          }
        },
        "pulseDopplerToTwsBoresightLock": {
          "stateFrom": "pulseDopplerBoresightLock",
          "command": "modeSwitch",
          "stateTo": "twsBoresightLock",
          "actions": {
            "setTwsBoresightLockMode": {}
          }
        },
        "twsToPulseBoresightLock": {
          "stateFrom": "twsBoresightLock",
          "command": "modeSwitch",
          "stateTo": "pulseBoresightLock",
          "actions": {
            "setPulseBoresightLockMode": {}
          }
        },
        "pulseToPulseDopplerVelocityVerticalLock": {
          "stateFrom": "pulseVerticalLock",
          "command": "modeSwitch",
          "stateTo": "pulseDopplerVelocityVerticalLock",
          "actions": {
            "setPulseDopplerVelocityVerticalLockMode": {}
          }
        },
        "pulseDopplerVelocityToPulseDopplerVerticalLock": {
          "stateFrom": "pulseDopplerVelocityVerticalLock",
          "command": "modeSwitch",
          "stateTo": "pulseDopplerVerticalLock",
          "actions": {
            "setPulseDopplerVerticalLockMode": {}
          }
        },
        "pulseDopplerToTwsVerticalLock": {
          "stateFrom": "pulseDopplerVerticalLock",
          "command": "modeSwitch",
          "stateTo": "twsVerticalLock",
          "actions": {
            "setTwsVerticalLockMode": {}
          }
        },
        "twsToPulseVerticalLock": {
          "stateFrom": "twsVerticalLock",
          "command": "modeSwitch",
          "stateTo": "pulseVerticalLock",
          "actions": {
            "setPulseVerticalLockMode": {}
          }
        },
        "pulseDesignationLock": {
          "stateFrom": "pulseSearch",
          "command": "selectTarget",
          "actions": {
            "designateActiveDetectedTarget": {
              "type": 0,
              "self": true,
              "sensorIndex": 0
            },
            "designateTargetUnderCue": {
              "type": 0,
              "self": true,
              "sensorIndex": 0
            }
          }
        },
        "checkPulseDesignationType0": {
          "stateFrom": "pulseSearch",
          "command": "designateTarget",
          "stateTo": "checkPulseDesignationType0",
          "actions": {
            "checkDesignationTypeEquals": {
              "value": 0
            }
          }
        },
        "pulseDesignationLockResponce": {
          "stateFrom": "checkPulseDesignationType0",
          "event": "designationTypeEquals",
          "stateTo": "pulseDesignationLock",
          "actions": {
            "resetSearchMode": {},
            "setPulseDesignationLockMode": {}
          }
        },
        "returnToPulseSearchMode": {
          "stateFrom": "checkPulseDesignationType0",
          "event": "designationTypeNotEquals",
          "stateTo": "pulseSearch"
        },
        "pulseDesignationTrack": {
          "stateFrom": "pulseDesignationLock",
          "event": "targetDetected",
          "stateTo": "pulseDesignationTrack",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setPulseTrackMode": {}
          }
        },
        "failedPulseDesignationLock": {
          "stateFrom": "pulseDesignationLock",
          "event": "scanFinished",
          "stateTo": "pulseSearch",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setPulseSearchMode": {}
          }
        },
        "finishedDesignationTrack": [
          {
            "stateFrom": "pulseDesignationTrack",
            "event": "targetsOfInterestCleanup",
            "command": "selectTarget",
            "stateTo": "pulseSearch",
            "actions": {
              "resetTrackMode": {},
              "setPulseSearchMode": {}
            }
          },
          {
            "stateFrom": "twsDesignationTrack",
            "event": "targetsOfInterestCleanup",
            "command": "selectTarget",
            "stateTo": "twsSearch",
            "actions": {
              "resetTrackMode": {},
              "setTwsSearchMode": {}
            }
          }
        ],
        "pulseDopplerVelocityDesignationLock": {
          "stateFrom": "pulseDopplerVelocitySearch",
          "command": "selectTarget",
          "actions": {
            "designateActiveDetectedTarget": {
              "type": 0,
              "self": true,
              "sensorIndex": 0
            },
            "designateTargetUnderCue": {
              "type": 0,
              "self": true,
              "sensorIndex": 0
            }
          }
        },
        "checkPulseDopplerVelocityDesignationType0": {
          "stateFrom": "pulseDopplerVelocitySearch",
          "command": "designateTarget",
          "stateTo": "checkPulseDopplerVelocityDesignationType0",
          "actions": {
            "checkDesignationTypeEquals": {
              "value": 0
            }
          }
        },
        "pulseDopplerVelocityDesignationLockResponce": {
          "stateFrom": "checkPulseDopplerVelocityDesignationType0",
          "event": "designationTypeEquals",
          "stateTo": "pulseDopplerVelocityDesignationLock",
          "actions": {
            "resetSearchMode": {},
            "setPulseDopplerVelocityDesignationLockMode": {}
          }
        },
        "returnToPulseDopplerVelocitySearchMode": {
          "stateFrom": "checkPulseDopplerVelocityDesignationType0",
          "event": "designationTypeNotEquals",
          "stateTo": "pulseDopplerVelocitySearch"
        },
        "pulseDopplerVelocityDesignationTrack": {
          "stateFrom": "pulseDopplerVelocityDesignationLock",
          "event": "targetDetected",
          "stateTo": "pulseDopplerVelocityDesignationTrack",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setPulseDopplerVelocityTrackMode": {}
          }
        },
        "failedPulseDopplerVelocityDesignationLock": {
          "stateFrom": "pulseDopplerVelocityDesignationLock",
          "event": "scanFinished",
          "stateTo": "pulseDopplerVelocitySearch",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setPulseDopplerVelocitySearchMode": {}
          }
        },
        "finishedPulseDopplerVelocityDesignationTrack": {
          "stateFrom": "pulseDopplerVelocityDesignationTrack",
          "event": "targetsOfInterestCleanup",
          "command": "selectTarget",
          "stateTo": "pulseDopplerVelocitySearch",
          "actions": {
            "resetTrackMode": {},
            "setPulseDopplerVelocitySearchMode": {}
          }
        },
        "pulseDopplerDesignationLock": {
          "stateFrom": "pulseDopplerSearch",
          "command": "selectTarget",
          "actions": {
            "designateActiveDetectedTarget": {
              "type": 0,
              "self": true,
              "sensorIndex": 0
            },
            "designateTargetUnderCue": {
              "type": 0,
              "self": true,
              "sensorIndex": 0
            }
          }
        },
        "checkPulseDopplerDesignationType0": {
          "stateFrom": "pulseDopplerSearch",
          "command": "designateTarget",
          "stateTo": "checkPulseDopplerDesignationType0",
          "actions": {
            "checkDesignationTypeEquals": {
              "value": 0
            }
          }
        },
        "pulseDopplerDesignationLockResponce": {
          "stateFrom": "checkPulseDopplerDesignationType0",
          "event": "designationTypeEquals",
          "stateTo": "pulseDopplerDesignationLock",
          "actions": {
            "resetSearchMode": {},
            "setPulseDopplerDesignationLockMode": {}
          }
        },
        "returnToPulseDopplerSearchMode": {
          "stateFrom": "checkPulseDopplerDesignationType0",
          "event": "designationTypeNotEquals",
          "stateTo": "pulseDopplerSearch"
        },
        "pulseDopplerDesignationTrack": {
          "stateFrom": "pulseDopplerDesignationLock",
          "event": "targetDetected",
          "stateTo": "pulseDopplerDesignationTrack",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setPulseDopplerTrackMode": {}
          }
        },
        "failedPulseDopplerDesignationLock": {
          "stateFrom": "pulseDopplerDesignationLock",
          "event": "scanFinished",
          "stateTo": "pulseDopplerSearch",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setPulseDopplerSearchMode": {}
          }
        },
        "finishedPulseDopplerDesignationTrack": {
          "stateFrom": "pulseDopplerDesignationTrack",
          "event": "targetsOfInterestCleanup",
          "command": "selectTarget",
          "stateTo": "pulseDopplerSearch",
          "actions": {
            "resetTrackMode": {},
            "setPulseDopplerSearchMode": {}
          }
        },
        "twsDesignationLock": {
          "stateFrom": "twsSearch",
          "command": "selectTarget",
          "actions": {
            "designateActiveDetectedTarget": {
              "type": 0,
              "self": true,
              "sensorIndex": 0
            }
          }
        },
        "checkTwsDesignationType0": {
          "stateFrom": "twsSearch",
          "command": "designateTarget",
          "stateTo": "checkTwsDesignationType0",
          "actions": {
            "checkDesignationTypeEquals": {
              "value": 0
            }
          }
        },
        "twsDesignationLockResponce": {
          "stateFrom": "checkTwsDesignationType0",
          "event": "designationTypeEquals",
          "stateTo": "twsDesignationLock",
          "actions": {
            "resetTwsMode": {},
            "setTwsDesignationLockMode": {}
          }
        },
        "returnToTwsSearchMode": {
          "stateFrom": "checkTwsDesignationType0",
          "event": "designationTypeNotEquals",
          "stateTo": "twsSearch"
        },
        "twsDesignationTrack": {
          "stateFrom": "twsDesignationLock",
          "event": "targetDetected",
          "stateTo": "twsDesignationTrack",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setTwsTrackMode": {}
          }
        },
        "failedTwsDesignationLock": {
          "stateFrom": "twsDesignationLock",
          "event": "scanFinished",
          "stateTo": "twsSearch",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setTwsSearchMode": {}
          }
        },
        "pulseBoresightLockFromPulseSearch": {
          "stateFrom": "pulseSearch",
          "command": "acmSwitch",
          "stateTo": "pulseBoresightLock",
          "actions": {
            "resetSearchMode": {},
            "setPulseBoresightLockMode": {}
          }
        },
        "pulseBoresightLockFromPulseStandby": {
          "stateFrom": "pulseStandby",
          "command": [
            "selectTarget",
            "acmSwitch"
          ],
          "stateTo": "pulseBoresightLock",
          "actions": {
            "resetSearchMode": {},
            "setPulseBoresightLockMode": {}
          }
        },
        "pulseVerticalLockFromPulseStandby": {
          "stateFrom": "pulseVerticalStandby",
          "command": [
            "selectTarget",
            "acmSwitch"
          ],
          "stateTo": "pulseVerticalLock",
          "actions": {
            "resetSearchMode": {},
            "setPulseVerticalLockMode": {}
          }
        },
        "pulseBoresightTrack": {
          "stateFrom": "pulseBoresightLock",
          "event": "targetDetected",
          "stateTo": "pulseBoresightTrack",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setPulseTrackMode": {}
          }
        },
        "pulseBoresightLockToPulseSearch": {
          "stateFrom": "pulseBoresightLock",
          "command": "selectTarget",
          "stateTo": "pulseStandby",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setPulseStandbyMode": {}
          }
        },
        "pulseBoresightLockToPulseVerticalLock": {
          "stateFrom": "pulseBoresightLock",
          "command": "acmSwitch",
          "stateTo": "pulseVerticalLock",
          "actions": {
            "setPulseVerticalLockMode": {}
          }
        },
        "brokenPulseBoresightTrack": {
          "stateFrom": "pulseBoresightTrack",
          "event": "targetsOfInterestCleanup",
          "stateTo": "pulseBoresightLock",
          "actions": {
            "resetTrackMode": {},
            "setPulseBoresightLockMode": {}
          }
        },
        "pulseBoresightTrackToPulseStandby": {
          "stateFrom": "pulseBoresightTrack",
          "command": "selectTarget",
          "stateTo": "pulseStandby",
          "actions": {
            "resetTrackMode": {},
            "setPulseStandbyMode": {}
          }
        },
        "pulseBoresightTrackToPulseVerticalTrack": {
          "stateFrom": "pulseBoresightTrack",
          "command": "acmSwitch",
          "stateTo": "pulseVerticalTrack"
        },
        "pulseDopplerVelocityBoresightLockFromPulseDopplerVelocitySearch": {
          "stateFrom": "pulseDopplerVelocitySearch",
          "command": "acmSwitch",
          "stateTo": "pulseDopplerVelocityBoresightLock",
          "actions": {
            "resetSearchMode": {},
            "setPulseDopplerVelocityBoresightLockMode": {}
          }
        },
        "pulseDopplerVelocityBoresightLockFromPulseDopplerVelocityStandby": {
          "stateFrom": "pulseDopplerVelocityStandby",
          "command": [
            "selectTarget",
            "acmSwitch"
          ],
          "stateTo": "pulseDopplerVelocityBoresightLock",
          "actions": {
            "resetSearchMode": {},
            "setPulseDopplerVelocityBoresightLockMode": {}
          }
        },
        "pulseDopplerVelocityVerticalLockFromPulseDopplerVelocityStandby": {
          "stateFrom": "pulseDopplerVelocityVerticalStandby",
          "command": [
            "selectTarget",
            "acmSwitch"
          ],
          "stateTo": "pulseDopplerVelocityVerticalLock",
          "actions": {
            "resetSearchMode": {},
            "setPulseDopplerVelocityVerticalLockMode": {}
          }
        },
        "pulseDopplerVelocityBoresightLockToPulseDopplerVelocityVerticalLock": [
          {
            "stateFrom": "pulseDopplerVelocityBoresightLock",
            "command": "acmSwitch",
            "stateTo": "pulseDopplerVelocityVerticalLock",
            "actions": {
              "setPulseDopplerVelocityVerticalLockMode": {}
            }
          },
          {
            "stateFrom": "pulseDopplerVelocityBoresightLock",
            "command": "acmSwitch",
            "stateTo": "pulseDopplerVelocityVerticalLock",
            "actions": {
              "setPulseDopplerVelocityVerticalLockMode": {}
            }
          }
        ],
        "pulseDopplerVelocityBoresightTrack": {
          "stateFrom": "pulseDopplerVelocityBoresightLock",
          "event": "targetDetected",
          "stateTo": "pulseDopplerVelocityBoresightTrack",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setPulseDopplerVelocityTrackMode": {}
          }
        },
        "pulseDopplerVelocityBoresightLockToPulseDopplerVelocityStandby": {
          "stateFrom": "pulseDopplerVelocityBoresightLock",
          "command": "selectTarget",
          "stateTo": "pulseDopplerVelocityStandby",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setPulseDopplerVelocityStandbyMode": {}
          }
        },
        "brokenPulseDopplerVelocityBoresightTrack": {
          "stateFrom": "pulseDopplerVelocityBoresightTrack",
          "event": "targetsOfInterestCleanup",
          "stateTo": "pulseDopplerVelocityBoresightLock",
          "actions": {
            "resetTrackMode": {},
            "setPulseDopplerVelocityBoresightLockMode": {}
          }
        },
        "pulseDopplerVelocityBoresightTrackToPulseDopplerVelocityStandby": {
          "stateFrom": "pulseDopplerVelocityBoresightTrack",
          "command": "selectTarget",
          "stateTo": "pulseDopplerVelocityStandby",
          "actions": {
            "resetTrackMode": {},
            "setPulseDopplerVelocityStandbyMode": {}
          }
        },
        "pulseDopplerVelocityBoresightTrackToPulseDopplerVelocityVerticalTrack": {
          "stateFrom": "pulseDopplerVelocityBoresightTrack",
          "command": "acmSwitch",
          "stateTo": "pulseDopplerVelocityVerticalTrack"
        },
        "pulseDopplerBoresightLockFromPulseDopplerSearch": {
          "stateFrom": "pulseDopplerSearch",
          "command": "acmSwitch",
          "stateTo": "pulseDopplerBoresightLock",
          "actions": {
            "resetSearchMode": {},
            "setPulseDopplerBoresightLockMode": {}
          }
        },
        "pulseDopplerBoresightLockFromPulseDopplerStandby": {
          "stateFrom": "pulseDopplerStandby",
          "command": "selectTarget",
          "stateTo": "pulseDopplerBoresightLock",
          "actions": {
            "resetSearchMode": {},
            "setPulseDopplerBoresightLockMode": {}
          }
        },
        "pulseDopplerBoresightLockFromPulseDopplerVerticalStandby": {
          "stateFrom": "pulseDopplerVerticalStandby",
          "command": "selectTarget",
          "stateTo": "pulseDopplerVerticalLock",
          "actions": {
            "resetSearchMode": {},
            "setPulseDopplerVerticalLockMode": {}
          }
        },
        "pulseDopplerBoresightLockToPulseDopplerVerticalLock": [
          {
            "stateFrom": "pulseDopplerBoresightLock",
            "command": "acmSwitch",
            "stateTo": "pulseDopplerVerticalLock",
            "actions": {
              "setPulseDopplerVerticalLockMode": {}
            }
          },
          {
            "stateFrom": "pulseDopplerBoresightLock",
            "command": "acmSwitch",
            "stateTo": "pulseDopplerVerticalLock",
            "actions": {
              "setPulseDopplerVerticalLockMode": {}
            }
          }
        ],
        "pulseDopplerBoresightTrack": {
          "stateFrom": "pulseDopplerBoresightLock",
          "event": "targetDetected",
          "stateTo": "pulseDopplerBoresightTrack",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setPulseDopplerTrackMode": {}
          }
        },
        "pulseDopplerBoresightLockToPulseDopplerStandby": {
          "stateFrom": "pulseDopplerBoresightLock",
          "command": "selectTarget",
          "stateTo": "pulseDopplerStandby",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setPulseDopplerStandbyMode": {}
          }
        },
        "brokenPulseDopplerBoresightTrack": {
          "stateFrom": "pulseDopplerBoresightTrack",
          "event": "targetsOfInterestCleanup",
          "stateTo": "pulseDopplerBoresightLock",
          "actions": {
            "resetTrackMode": {},
            "setPulseDopplerBoresightLockMode": {}
          }
        },
        "pulseDopplerBoresightTrackToPulseDopplerStandby": {
          "stateFrom": "pulseDopplerBoresightTrack",
          "command": "selectTarget",
          "stateTo": "pulseDopplerStandby",
          "actions": {
            "resetTrackMode": {},
            "setPulseDopplerStandbyMode": {}
          }
        },
        "pulseDopplerBoresightTrackToPulseDopplerVerticalTrack": {
          "stateFrom": "pulseDopplerBoresightTrack",
          "command": "acmSwitch",
          "stateTo": "pulseDopplerVerticalTrack"
        },
        "twsBoresightLockFromPulseSearch": {
          "stateFrom": "twsSearch",
          "command": "acmSwitch",
          "stateTo": "twsBoresightLock",
          "actions": {
            "resetTwsMode": {},
            "setTwsBoresightLockMode": {}
          }
        },
        "twsBoresightLockFromTwsStandby": {
          "stateFrom": "twsStandby",
          "command": [
            "selectTarget",
            "acmSwitch"
          ],
          "stateTo": "twsBoresightLock",
          "actions": {
            "resetTwsMode": {},
            "setTwsBoresightLockMode": {}
          }
        },
        "twsBoresightLockFromTwsVerticalStandby": {
          "stateFrom": "twsVerticalStandby",
          "command": [
            "selectTarget",
            "acmSwitch"
          ],
          "stateTo": "twsVerticalLock",
          "actions": {
            "resetTwsMode": {},
            "setTwsVerticalLockMode": {}
          }
        },
        "twsBoresightTrack": {
          "stateFrom": "twsBoresightLock",
          "event": "targetDetected",
          "stateTo": "twsBoresightTrack",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setTwsTrackMode": {}
          }
        },
        "twsBoresightLockToTwsSearch": {
          "stateFrom": "twsBoresightLock",
          "command": "selectTarget",
          "stateTo": "twsStandby",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setTwsStandbyMode": {}
          }
        },
        "twsBoresightLockToTwsVerticalLock": {
          "stateFrom": "twsBoresightLock",
          "command": "acmSwitch",
          "stateTo": "twsVerticalLock",
          "actions": {
            "setTwsVerticalLockMode": {}
          }
        },
        "brokenTwsBoresightTrack": {
          "stateFrom": "twsBoresightTrack",
          "event": "targetsOfInterestCleanup",
          "stateTo": "twsBoresightLock",
          "actions": {
            "resetTrackMode": {},
            "setTwsBoresightLockMode": {}
          }
        },
        "twsBoresightTrackToTwsStandby": {
          "stateFrom": "twsBoresightTrack",
          "command": "selectTarget",
          "stateTo": "twsStandby",
          "actions": {
            "resetTrackMode": {},
            "setTwsStandbyMode": {}
          }
        },
        "twsBoresightTrackToTwsVerticalTrack": {
          "stateFrom": "twsBoresightTrack",
          "command": "acmSwitch",
          "stateTo": "twsVerticalTrack"
        },
        "pulseVerticalTrack": {
          "stateFrom": "pulseVerticalLock",
          "event": "targetDetected",
          "stateTo": "pulseVerticalTrack",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setPulseTrackMode": {}
          }
        },
        "pulseVerticalLockToPulseStandby": {
          "stateFrom": "pulseVerticalLock",
          "command": "selectTarget",
          "stateTo": "pulseVerticalStandby",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setPulseStandbyMode": {}
          }
        },
        "pulseVerticalLockToPulseSearch": {
          "stateFrom": "pulseVerticalLock",
          "command": [
            "selectTarget",
            "acmSwitch"
          ],
          "stateTo": "pulseSearch",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setPulseSearchMode": {}
          }
        },
        "brokenPulseVerticalTrack": {
          "stateFrom": "pulseVerticalTrack",
          "event": "targetsOfInterestCleanup",
          "stateTo": "pulseVerticalLock",
          "actions": {
            "resetTrackMode": {},
            "setPulseVerticalLockMode": {}
          }
        },
        "pulseVerticalTrackToPulseStandby": {
          "stateFrom": "pulseVerticalTrack",
          "command": "selectTarget",
          "stateTo": "pulseStandby",
          "actions": {
            "resetTrackMode": {},
            "setPulseStandbyMode": {}
          }
        },
        "pulseVerticalTrackToPulseSearch": {
          "stateFrom": "pulseVerticalTrack",
          "command": "acmSwitch",
          "stateTo": "pulseSearch",
          "actions": {
            "resetTrackMode": {},
            "setPulseSearchMode": {}
          }
        },
        "pulseDopplerVelocityVerticalTrack": {
          "stateFrom": "pulseDopplerVelocityVerticalLock",
          "event": "targetDetected",
          "stateTo": "pulseDopplerVelocityVerticalTrack",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setPulseDopplerVelocityTrackMode": {}
          }
        },
        "pulseDopplerVelocityVerticalLockToPulseDopplerVelocityStandby": {
          "stateFrom": "pulseDopplerVelocityVerticalLock",
          "command": "selectTarget",
          "stateTo": "pulseDopplerVelocityVerticalStandby",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setPulseDopplerVelocityStandbyMode": {}
          }
        },
        "pulseDopplerVelocityVerticalLockToPulseDopplerVelocitySearch": {
          "stateFrom": "pulseDopplerVelocityVerticalLock",
          "command": "acmSwitch",
          "stateTo": "pulseDopplerVelocitySearch",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setPulseDopplerVelocitySearchMode": {}
          }
        },
        "brokenPulseDopplerVelocityVerticalTrack": {
          "stateFrom": "pulseDopplerVelocityVerticalTrack",
          "event": "targetsOfInterestCleanup",
          "stateTo": "pulseDopplerVelocityVerticalLock",
          "actions": {
            "resetTrackMode": {},
            "setPulseDopplerVelocityVerticalLockMode": {}
          }
        },
        "pulseDopplerVelocityVerticalTrackToPulseDopplerVelocityStandby": {
          "stateFrom": "pulseDopplerVelocityVerticalTrack",
          "command": "selectTarget",
          "stateTo": "pulseDopplerVelocityStandby",
          "actions": {
            "resetTrackMode": {},
            "setPulseDopplerVelocityStandbyMode": {}
          }
        },
        "pulseDopplerVelocityVerticalTrackToPulseDopplerVelocitySearch": {
          "stateFrom": "pulseDopplerVelocityVerticalTrack",
          "command": "acmSwitch",
          "stateTo": "pulseDopplerVelocitySearch",
          "actions": {
            "resetTrackMode": {},
            "setPulseDopplerVelocitySearchMode": {}
          }
        },
        "pulseDopplerVerticalTrack": {
          "stateFrom": "pulseDopplerVerticalLock",
          "event": "targetDetected",
          "stateTo": "pulseDopplerVerticalTrack",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setPulseDopplerTrackMode": {}
          }
        },
        "pulseDopplerVerticalLockToPulseDopplerStandby": {
          "stateFrom": "pulseDopplerVerticalLock",
          "command": "selectTarget",
          "stateTo": "pulseDopplerVerticalStandby",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setPulseDopplerStandbyMode": {}
          }
        },
        "pulseDopplerVerticalLockToPulseDopplerSearch": {
          "stateFrom": "pulseDopplerVerticalLock",
          "command": "acmSwitch",
          "stateTo": "pulseDopplerSearch",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setPulseDopplerSearchMode": {}
          }
        },
        "brokenPulseDopplerVerticalTrack": {
          "stateFrom": "pulseDopplerVerticalTrack",
          "event": "targetsOfInterestCleanup",
          "stateTo": "pulseDopplerVerticalLock",
          "actions": {
            "resetTrackMode": {},
            "setPulseDopplerVerticalLockMode": {}
          }
        },
        "pulseDopplerVerticalTrackToPulseDopplerStandby": {
          "stateFrom": "pulseDopplerVerticalTrack",
          "command": "selectTarget",
          "stateTo": "pulseDopplerStandby",
          "actions": {
            "resetTrackMode": {},
            "setPulseDopplerStandbyMode": {}
          }
        },
        "pulseDopplerVerticalTrackToPulseDopplerSearch": {
          "stateFrom": "pulseDopplerVerticalTrack",
          "command": "acmSwitch",
          "stateTo": "pulseDopplerSearch",
          "actions": {
            "resetTrackMode": {},
            "setPulseDopplerSearchMode": {}
          }
        },
        "twsVerticalTrack": {
          "stateFrom": "twsVerticalLock",
          "event": "targetDetected",
          "stateTo": "twsVerticalTrack",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setTwsTrackMode": {}
          }
        },
        "twsVerticalLockToTwsStandby": {
          "stateFrom": "twsVerticalLock",
          "command": "selectTarget",
          "stateTo": "twsVerticalStandby",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setTwsStandbyMode": {}
          }
        },
        "twsVerticalLockToTwsSearch": {
          "stateFrom": "twsVerticalLock",
          "command": [
            "selectTarget",
            "acmSwitch"
          ],
          "stateTo": "twsSearch",
          "actions": {
            "setFsmActive": {
              "fsm": "lock",
              "active": false
            },
            "setTwsSearchMode": {}
          }
        },
        "brokenTwsVerticalTrack": {
          "stateFrom": "twsVerticalTrack",
          "event": "targetsOfInterestCleanup",
          "stateTo": "twsVerticalLock",
          "actions": {
            "resetTrackMode": {},
            "setTwsVerticalLockMode": {}
          }
        },
        "twsVerticalTrackToTwsStandby": {
          "stateFrom": "twsVerticalTrack",
          "command": "selectTarget",
          "stateTo": "twsStandby",
          "actions": {
            "resetTrackMode": {},
            "setTwsStandbyMode": {}
          }
        },
        "twsVerticalTrackToTwsSearch": {
          "stateFrom": "twsVerticalTrack",
          "command": "acmSwitch",
          "stateTo": "twsSearch",
          "actions": {
            "resetTrackMode": {},
            "setTwsSearchMode": {}
          }
        },
        "switchScanPattern": {
          "stateFrom": [
            "pulseStandby",
            "pulseDopplerStandby",
            "pulseDopplerVelocityStandby",
            "twsStandby",
            "pulseVerticalStandby",
            "pulseDopplerVerticalStandby",
            "pulseDopplerVelocityVerticalStandby",
            "twsVerticalStandby",
            "pulseSearch",
            "pulseDopplerSearch",
            "pulseDopplerVelocitySearch",
            "twsSearch",
            "pulseVerticalLock",
            "pulseDopplerVerticalLock",
            "pulseDopplerVelocityVerticalLock",
            "twsVerticalLock"
          ],
          "command": "scanPatternSwitch",
          "actions": {
            "setNextScanPattern": {}
          }
        },
        "switchScopeRange": {
          "command": "rangeSwitch",
          "actions": {
            "setNextScopeRange": {}
          }
        }
      }
    },
    "search": {
      "stateInit": "search",
      "transitions": {
        "scan": {
          "event": "update",
          "actions": {
            "scan": {}
          }
        },
        "detect": {
          "event": "targetInSight",
          "actions": {
            "setDistGatePos": {
              "source": "continuousScale",
              "width": 0.0
            },
            "setRelSpeedGatePos": {
              "source": "continuousScale",
              "width": 0.0
            },
            "detectTarget": {}
          }
        },
        "addTarget": {
          "event": "targetDetected",
          "actions": {
            "addTarget": {},
            "updateActiveDetectedTarget": {}
          }
        },
        "switchSelectedTarget": {
          "command": "switchTarget",
          "actions": {
            "setNextDetectedTargetActive": {}
          }
        },
        "setCueAzimuth": {
          "command": "cueAxisX",
          "actions": {
            "setCueAzimuth": {}
          }
        },
        "setCueDist": {
          "command": "cueAxisY",
          "actions": {
            "setCueDist": {},
            "setCueDopplerSpeed": {}
          }
        },
        "setSelectedTarget": {
          "command": "switchToTarget",
          "actions": {
            "setDetectedTargetActive": {}
          }
        }
      }
    },
    "tws": {
      "stateInit": "search",
      "transitions": {
        "scan": {
          "event": "update",
          "actions": {
            "scan": {},
            "extrapolateTargetsOfInterest": {},
            "clearTargetsOfInterest": {
              "timeOut": 8.0
            }
          }
        },
        "detect": {
          "event": "targetInSight",
          "actions": {
            "setDistGatePos": {
              "source": "continuousScale",
              "width": 0.0
            },
            "setRelSpeedGatePos": {
              "source": "continuousScale",
              "width": 0.0
            },
            "detectTarget": {}
          }
        },
        "addTarget": {
          "event": "targetDetected",
          "actions": {
            "updateTargetOfInterest": {
              "limit": 24,
              "timeOut": 2.0,
              "radius": 1000.0,
              "blend": 0.5
            },
            "updateActiveDetectedTarget": {}
          }
        },
        "switchSelectedTarget": {
          "command": "switchTarget",
          "actions": {
            "setNextDetectedTargetActive": {}
          }
        },
        "setCueAzimuth": {
          "command": "cueAxisX",
          "actions": {
            "setCueAzimuth": {}
          }
        },
        "setCueDist": {
          "command": "cueAxisY",
          "actions": {
            "setCueDist": {},
            "setCueDopplerSpeed": {}
          }
        },
        "setSelectedTarget": {
          "command": "switchToTarget",
          "actions": {
            "setDetectedTargetActive": {}
          }
        },
        "designateTarget": {
          "command": "selectTarget",
          "actions": {
            "designateActiveDetectedTarget": {
              "type": 0,
              "sensorIndex": 1
            },
            "designateTargetUnderCue": {
              "type": 0,
              "sensorIndex": 1
            }
          }
        }
      }
    },
    "lock": {
      "stateInit": "lock",
      "transitions": {
        "scan": {
          "event": "update",
          "actions": {
            "scan": {}
          }
        },
        "detect": {
          "event": "targetInSight",
          "actions": {
            "detectTarget": {}
          }
        }
      }
    },
    "track": {
      "stateInit": "track",
      "transitions": {
        "detect": {
          "event": "update",
          "actions": {
            "detectTarget": {}
          }
        },
        "track": {
          "event": "targetDetected",
          "actions": {
            "updateActiveTargetOfInterest": {},
            "setCenterAzimuth": {
              "source": "activeTargetOfInterest"
            },
            "setCenterElevation": {
              "source": "activeTargetOfInterest"
            },
            "setDistGatePos": {
              "source": "activeTargetOfInterest",
              "width": 0.0
            },
            "setRelSpeedGatePos": {
              "source": "activeTargetOfInterest",
              "width": 0.0
            }
          }
        },
        "extrapolate": {
          "event": "targetNotDetected",
          "actions": {
            "extrapolateTargetsOfInterest": {},
            "clearTargetsOfInterest": {
              "timeOut": 1.0
            },
            "setCenterAzimuth": {
              "source": "activeTargetOfInterest"
            },
            "setCenterElevation": {
              "source": "activeTargetOfInterest"
            },
            "setDistGatePos": {
              "source": "activeTargetOfInterest",
              "width": 0.0
            },
            "setRelSpeedGatePos": {
              "source": "activeTargetOfInterest",
              "width": 0.0
            }
          }
        }
      }
    }
  }
}