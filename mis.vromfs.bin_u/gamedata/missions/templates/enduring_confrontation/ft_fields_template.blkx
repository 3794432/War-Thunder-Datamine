{
  "selected_tag": "",
  "bin_dump_file": "",
  "mission_settings": {
    "player": {
      "army": 1,
      "wing": "armada_01"
    },
    "player_teamB": {
      "army": 2
    },
    "mission": {
      "level": "levels/water.bin",
      "type": "singleMission",
      "environment": "Day",
      "weather": "clear",
      "restoreType": "attempts",
      "optionalTakeOff": false
    },
    "spectator_points": []
  },
  "imports": [],
  "triggers": {
    "isCategory": true,
    "is_enabled": true,
    "ft_init": {
      "is_enabled": true,
      "comments": "",
      "props": {
        "actionsType": "PERFORM_ONE_BY_ONE",
        "conditionsType": "ALL",
        "enableAfterComplete": true
      },
      "events": {
        "initMission": []
      },
      "conditions": [],
      "actions": [
        {
          "comment": {
            "value": "свойства зениток"
          }
        },
        {
          "comment": {
            "value": "запускаем проверку разрешена ли разведка аэродромов"
          }
        },
        {
          "comment": {
            "value": "запускаем генерацию аэродромов"
          }
        },
        {
          "comment": {
            "value": "создаем бэкап респаун зоны и запрещаем там спавн"
          }
        },
        {
          "comment": {
            "value": ""
          }
        },
        {
          "unitSetProperties": [
            {
              "object_marking": 0
            },
            {
              "object_var_name": ""
            },
            {
              "object_var_comp_op": "equal"
            },
            {
              "object_var_value": 0
            },
            {
              "targetChangeProf": 0.25
            },
            {
              "object": "ft_t1_medium_aaa_squad"
            },
            {
              "object": "ft_t2_medium_aaa_squad"
            },
            {
              "accuracy": 0.7
            },
            {
              "effShootingRate": 0.7
            },
            {
              "airEffShootingRate": 0.7
            },
            {
              "useSearchRadar": true
            },
            {
              "fireRandom": true
            },
            {
              "targetChangeInterval": 5.0
            },
            {
              "targetChangeProb": 0.25
            }
          ]
        },
        {
          "unitSetProperties": [
            {
              "object_marking": 0
            },
            {
              "object_var_name": ""
            },
            {
              "object_var_comp_op": "equal"
            },
            {
              "object_var_value": 0
            },
            {
              "targetChangeProf": 0.25
            },
            {
              "object": "ft_t1_big_aaa_squad"
            },
            {
              "object": "ft_t2_big_aaa_squad"
            },
            {
              "accuracy": 0.7
            },
            {
              "effShootingRate": 0.7
            },
            {
              "airEffShootingRate": 0.7
            },
            {
              "useSearchRadar": true
            },
            {
              "fireRandom": true
            },
            {
              "targetChangeInterval": 5.0
            },
            {
              "targetChangeProb": 0.25
            }
          ]
        },
        {
          "missionGetBalanceLevel": {
            "input_var": "ft_balance_level"
          }
        },
        {
          "triggerEnable": [
            {
              "target": "ft_matching_0_3_check"
            },
            {
              "target": "ft_matching_4_7_check"
            },
            {
              "target": "ft_matching_8_11_check"
            },
            {
              "target": "ft_matching_12_16_check"
            },
            {
              "target": "ft_matching_17_20_check"
            },
            {
              "target": "ft_matching_21_50_check"
            }
          ]
        },
        {
          "triggerEnable": {
            "target": "ft_is_detect_alowed"
          }
        },
        {
          "triggerEnable": {
            "target": "ft_airfields_generate_start"
          }
        },
        {
          "unitPutToSleep": [
            {
              "target": "ft_t1_airfields_squad"
            },
            {
              "target": "ft_t2_airfields_squad"
            },
            {
              "target": "ft_t1_aaa_squad"
            },
            {
              "target": "ft_t2_aaa_squad"
            }
          ]
        },
        {
          "missionMarkAsRespawnPoint": {
            "loc_name": "missions/t1_backup_zone",
            "spawnEffect": false,
            "isStrictSpawn": false,
            "resetStrictSpawnIndex": false,
            "isAirfield": false,
            "isUnit": false,
            "forceCreate": false,
            "useExisting": false,
            "isIndividual": false,
            "onlyOnePlayerPerSpawnPoint": false,
            "removeAreas": false,
            "replaceAreas": false,
            "canSpawnOnNeutral": false,
            "showOnMap": true,
            "radius": -1.0,
            "ignoreTeamsOnReuse": false,
            "target": "ft_t1_backup_air_zone_01",
            "team": "A",
            "tags": {
              "none_can_spawn": true
            }
          }
        },
        {
          "missionMarkAsRespawnPoint": {
            "loc_name": "missions/t2_backup_zone",
            "spawnEffect": false,
            "isStrictSpawn": false,
            "resetStrictSpawnIndex": false,
            "isAirfield": false,
            "isUnit": false,
            "forceCreate": false,
            "useExisting": false,
            "isIndividual": false,
            "onlyOnePlayerPerSpawnPoint": false,
            "removeAreas": false,
            "replaceAreas": false,
            "canSpawnOnNeutral": false,
            "showOnMap": true,
            "radius": -1.0,
            "ignoreTeamsOnReuse": false,
            "target": "ft_t2_backup_air_zone_01",
            "team": "B",
            "tags": {
              "none_can_spawn": true
            }
          }
        },
        {
          "varSetInt": [
            {
              "value": 0
            },
            {
              "var": "ft_t1_cur_near_airfields_count"
            },
            {
              "var": "ft_t2_cur_near_airfields_count"
            },
            {
              "var": "ft_t1_cur_mid_airfields_count"
            },
            {
              "var": "ft_t2_cur_mid_airfields_count"
            },
            {
              "var": "ft_t1_cur_far_airfields_count"
            },
            {
              "var": "ft_t2_cur_far_airfields_count"
            }
          ]
        }
      ],
      "else_actions": []
    },
    "ft_airfields_generate_start": {
      "is_enabled": false,
      "comments": "",
      "props": {
        "actionsType": "PERFORM_ONE_BY_ONE",
        "conditionsType": "ALL",
        "enableAfterComplete": false
      },
      "events": {
        "initMission": []
      },
      "conditions": [],
      "actions": [
        {
          "unitSetProperties": {
            "object_marking": 0,
            "object_var_name": "",
            "object_var_comp_op": "equal",
            "object_var_value": 0,
            "object": "all_bomb_targets_squad",
            "targetableByAi": false,
            "isImmortal": true,
            "stealthRadius": 0.0,
            "calmDetection": true
          }
        },
        {
          "comment": {
            "value": "задаем количество обнаруженных аэродромов"
          }
        },
        {
          "comment": {
            "value": "говорим что аэродромы не уничтожены"
          }
        },
        {
          "comment": {
            "value": "запускаем генерацию аэродромов"
          }
        },
        {
          "comment": {
            "value": "ждем окончания генерации"
          }
        },
        {
          "comment": {
            "value": "запускаем ротатор проверки обнаружения аэродромов"
          }
        },
        {
          "comment": {
            "value": "запускаем ротатор проверки уничтожения  аэродромов"
          }
        },
        {
          "comment": {
            "value": "запускаем ротатор проверки повреждения аэродромов"
          }
        },
        {
          "comment": {
            "value": "запускаем ротатор проверки захвата аэродрома"
          }
        },
        {
          "comment": {
            "value": "starting checkin does aaa was killed by teammate"
          }
        },
        {
          "varSetInt": {
            "value": 0,
            "var": "ft_t1_num_airfields_detected"
          }
        },
        {
          "varSetInt": {
            "value": 0,
            "var": "ft_t2_num_airfields_detected"
          }
        },
        {
          "varSetInt": [
            {
              "value": 0
            },
            {
              "var": "ft_t1_num_destroyed_fields"
            },
            {
              "var": "ft_t2_num_destroyed_fields"
            }
          ]
        },
        {
          "varSetBool": [
            {
              "value": false
            },
            {
              "var": "ft_t1_airfield_01_destroyed"
            },
            {
              "var": "ft_t1_airfield_02_destroyed"
            },
            {
              "var": "ft_t1_airfield_03_destroyed"
            },
            {
              "var": "ft_t2_airfield_01_destroyed"
            },
            {
              "var": "ft_t2_airfield_02_destroyed"
            },
            {
              "var": "ft_t2_airfield_03_destroyed"
            }
          ]
        },
        {
          "triggerEnable": [
            {
              "target": "ft_generate_t1_airfield_start"
            },
            {
              "target": "ft_generate_t2_airfield_start"
            }
          ]
        },
        {
          "triggerEnable": [
            {
              "target": "ft_detect_t1_rotator"
            },
            {
              "target": "ft_detect_t2_rotator"
            }
          ]
        },
        {
          "triggerEnable": [
            {
              "target": "ft_destroy_t1_rotator"
            },
            {
              "target": "ft_destroy_t2_rotator"
            }
          ]
        },
        {
          "triggerEnable": [
            {
              "target": "ft_damage_t1_rotator"
            },
            {
              "target": "ft_damage_t2_rotator"
            }
          ]
        },
        {
          "triggerEnable": [
            {
              "target": "ft_capture_t1_start"
            },
            {
              "target": "ft_capture_t2_start"
            }
          ]
        },
        {
          "triggerEnable": {
            "target": "ft_aaa_teamate_destroy_check_start"
          }
        },
        {
          "wait": {
            "time": 90.0
          }
        }
      ],
      "else_actions": []
    },
    "ft_is_detect_alowed": {
      "is_enabled": false,
      "comments": "",
      "props": {
        "actionsType": "PERFORM_ONE_BY_ONE",
        "conditionsType": "ALL",
        "enableAfterComplete": false
      },
      "events": {
        "periodicEvent": {
          "time": 1.0
        }
      },
      "conditions": {
        "varCompareBool": {
          "var_value": "ft_is_detect_on",
          "value": true,
          "comparasion_func": "equal"
        }
      },
      "actions": [
        {
          "comment": {
            "value": "запускаем первый раз квест принудительно чтобы пофикисть программерский баг"
          }
        },
        {
          "__moAddMissionObjective": {
            "target": "ft_t1_find_enemy_airfield",
            "object_var_comp_op": "equal",
            "object_var_name": "",
            "object_type": "isAlive"
          }
        },
        {
          "__moAddMissionObjective": {
            "target": "ft_t2_find_enemy_airfield",
            "object_var_comp_op": "equal",
            "object_var_name": "",
            "object_type": "isAlive"
          }
        }
      ],
      "else_actions": {
        "comment": {
          "value": "ничего не делаем. скрипт дальше сам разберется"
        }
      }
    },
    "ft_generate_routine": {
      "isCategory": true,
      "is_enabled": true,
      "ft_generate_t1_airfield_start": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": [],
        "actions": [
          {
            "comment": {
              "value": "обнуляем значения индекса для генерации"
            }
          },
          {
            "comment": {
              "value": "считаем количество  аэродромов"
            }
          },
          {
            "comment": {
              "value": "запускаем ротацию генерации аэродромов"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t1_idx"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t1_try_count"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_t1_max_airfields_count"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 0.0,
              "var": "ft_t1_max_airfields_count",
              "use_variable": true,
              "var_value": "ft_t1_max_far_airfields_count"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 0.0,
              "var": "ft_t1_max_airfields_count",
              "use_variable": true,
              "var_value": "ft_t1_max_mid_airfields_count"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 0.0,
              "var": "ft_t1_max_airfields_count",
              "use_variable": true,
              "var_value": "ft_t1_max_near_airfields_count"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t1_airfield_rotator"
            }
          }
        ],
        "else_actions": []
      },
      "ft_generate_t1_airfield_rotator": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_generate_t1_idx",
            "value": 3,
            "comparasion_func": "less",
            "var_value_other": "ft_t1_max_airfields_count"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "индекс в диапазоне. увеличиваем индекс на 1"
            }
          },
          {
            "comment": {
              "value": "обнуляем результат проверки дистанции"
            }
          },
          {
            "comment": {
              "value": "запускаем генерацию дальнего аэродрома"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_generate_t1_idx"
            }
          },
          {
            "varSetBool": {
              "value": false,
              "var": "ft_generate_t1_distance_check_fail"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t1_airfield_far"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "закончили генерировать аэродромы"
          },
          "triggerEnable": {
            "target": "ft_generate_t1_aaa_start"
          }
        }
      },
      "ft_generate_t1_airfield_far": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_t1_cur_far_airfields_count",
            "value": 3,
            "comparasion_func": "less",
            "var_value_other": "ft_t1_max_far_airfields_count"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "задем значение типа аэродрома"
            }
          },
          {
            "comment": {
              "value": "задаем рандомайзер позиции аэродрома 1 - 4 внутри типа"
            }
          },
          {
            "comment": {
              "value": "запоминаем значение рандомизатора"
            }
          },
          {
            "comment": {
              "value": "запоминаем переменную типа генерящегося аэродрома"
            }
          },
          {
            "comment": {
              "value": "увеличиваем число аэродромов на 1"
            }
          },
          {
            "comment": {
              "value": "заполняем параметры аэродрома для проверки"
            }
          },
          {
            "varSetInt": {
              "value": 1,
              "var": "ft_generate_t1_cur_idx"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t1_prev_value",
              "input_var": "ft_generate_t1_add_idx"
            }
          },
          {
            "varSetRandomInt": {
              "var": "ft_generate_t1_add_idx",
              "from": 1,
              "to_not_including": 5,
              "check_prev_value": "ft_generate_t1_prev_value"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_cur_far_airfields_count",
              "var": "ft_generate_t1_cur_idx_var_name"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_t1_cur_far_airfields_count"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t1_airfield_fill_info"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "пробуем сгенерировать средний аэродром"
          },
          "triggerEnable": {
            "target": "ft_generate_t1_airfield_mid"
          }
        }
      },
      "ft_generate_t1_airfield_mid": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_t1_cur_mid_airfields_count",
            "value": 3,
            "comparasion_func": "less",
            "var_value_other": "ft_t1_max_mid_airfields_count"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "задем значение типа аэродрома"
            }
          },
          {
            "comment": {
              "value": "задаем рандомайзер позиции аэродрома 1 - 4"
            }
          },
          {
            "comment": {
              "value": "запоминаем значение рандомизатора"
            }
          },
          {
            "comment": {
              "value": "запоминаем переменную типа генерящегося аэродрома"
            }
          },
          {
            "comment": {
              "value": "увеличиваем число аэродромов на 1"
            }
          },
          {
            "comment": {
              "value": "заполняем параметры аэродрома для проверки"
            }
          },
          {
            "varSetInt": {
              "value": 2,
              "var": "ft_generate_t1_cur_idx"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t1_prev_value",
              "input_var": "ft_generate_t1_add_idx"
            }
          },
          {
            "varSetRandomInt": {
              "var": "ft_generate_t1_add_idx",
              "from": 1,
              "to_not_including": 5,
              "check_prev_value": "ft_generate_t1_prev_value"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_cur_mid_airfields_count",
              "var": "ft_generate_t1_cur_idx_var_name"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_t1_cur_mid_airfields_count"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t1_airfield_fill_info"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "пробуем сгенерировать средний аэродром"
          },
          "triggerEnable": {
            "target": "ft_generate_t1_airfield_near"
          }
        }
      },
      "ft_generate_t1_airfield_near": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_t1_cur_near_airfields_count",
            "value": 3,
            "comparasion_func": "less",
            "var_value_other": "ft_t1_max_near_airfields_count"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "задем значение типа аэродрома"
            }
          },
          {
            "comment": {
              "value": "задаем рандомайзер позиции аэродрома 1 - 4"
            }
          },
          {
            "comment": {
              "value": "запоминаем значение рандомизатора"
            }
          },
          {
            "comment": {
              "value": "запоминаем переменную типа генерящегося аэродрома"
            }
          },
          {
            "comment": {
              "value": "увеличиваем число аэродромов на 1"
            }
          },
          {
            "comment": {
              "value": "заполняем параметры аэродрома для проверки"
            }
          },
          {
            "varSetInt": {
              "value": 3,
              "var": "ft_generate_t1_cur_idx"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t1_prev_value",
              "input_var": "ft_generate_t1_add_idx"
            }
          },
          {
            "varSetRandomInt": {
              "var": "ft_generate_t1_add_idx",
              "from": 1,
              "to_not_including": 5,
              "check_prev_value": "ft_generate_t1_prev_value"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_cur_near_airfields_count",
              "var": "ft_generate_t1_cur_idx_var_name"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_t1_cur_near_airfields_count"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t1_airfield_fill_info"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "закончили генерировать аэродромы"
          },
          "triggerEnable": {
            "target": "ft_generate_t1_aaa_start"
          }
        }
      },
      "ft_generate_t1_airfield_fill_info": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": [],
        "actions": [
          {
            "comment": {
              "value": "собираем имя переменной для хранения аэродрома"
            }
          },
          {
            "comment": {
              "value": "создаем имя аэродрома"
            }
          },
          {
            "comment": {
              "value": "заполняем переменую"
            }
          },
          {
            "comment": {
              "value": "создаем имя локализации"
            }
          },
          {
            "comment": {
              "value": "создаем имя переменной для хранения имени зоны"
            }
          },
          {
            "comment": {
              "value": "создаем имя бомбовой зоны"
            }
          },
          {
            "comment": {
              "value": "заполняем переменую"
            }
          },
          {
            "comment": {
              "value": "создаем переменную для хранения таргета"
            }
          },
          {
            "comment": {
              "value": "создаем имя таргета"
            }
          },
          {
            "comment": {
              "value": "заполняем переменую"
            }
          },
          {
            "comment": {
              "value": "получаем имя зоны фронтлайна в котором находится аэродром"
            }
          },
          {
            "comment": {
              "value": "получаем армию фронтлайна"
            }
          },
          {
            "comment": {
              "value": "проверяем дистанцию до других аэродромов"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_generate_t1_var_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_generate_t1_airfield_name"
            }
          },
          {
            "varSetString": {
              "value": "missions/airfield_spawn",
              "var": "ft_generate_t1_loc_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_generate_t1_area_var_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_generate_t1_area_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_generate_t1_target_var_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_generate_t1_target_name"
            }
          },
          {
            "varSetString": {
              "value": "",
              "var": "ft_generate_t1_own_state_name",
              "input_var": "ft_generate_t1_own_area_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t1_idx",
              "digits": 2,
              "var": "ft_generate_t1_var_name"
            }
          },
          {
            "varAddString": {
              "value": "_name",
              "digits": 0,
              "var": "ft_generate_t1_var_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t1_cur_idx",
              "digits": 2,
              "var": "ft_generate_t1_airfield_name"
            }
          },
          {
            "varAddString": {
              "value": "_",
              "digits": 0,
              "var": "ft_generate_t1_airfield_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t1_add_idx",
              "digits": 2,
              "var": "ft_generate_t1_airfield_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t1_idx",
              "digits": 0,
              "var": "ft_generate_t1_loc_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t1_idx",
              "digits": 2,
              "var": "ft_generate_t1_area_var_name"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_zone",
              "digits": 0,
              "var": "ft_generate_t1_area_var_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t1_cur_idx",
              "digits": 2,
              "var": "ft_generate_t1_area_name"
            }
          },
          {
            "varAddString": {
              "value": "_",
              "digits": 0,
              "var": "ft_generate_t1_area_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t1_add_idx",
              "digits": 2,
              "var": "ft_generate_t1_area_name"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_zone",
              "digits": 0,
              "var": "ft_generate_t1_area_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t1_idx",
              "digits": 2,
              "var": "ft_generate_t1_target_var_name"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_target",
              "digits": 0,
              "var": "ft_generate_t1_target_var_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t1_cur_idx",
              "digits": 2,
              "var": "ft_generate_t1_target_name"
            }
          },
          {
            "varAddString": {
              "value": "_",
              "digits": 0,
              "var": "ft_generate_t1_target_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t1_add_idx",
              "digits": 2,
              "var": "ft_generate_t1_target_name"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_target",
              "digits": 0,
              "var": "ft_generate_t1_target_name"
            }
          },
          {
            "varAddString": {
              "value": "_state",
              "digits": 0,
              "var": "ft_generate_t1_own_state_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "ft_generate_t1_airfield_name",
              "var": "@ft_generate_t1_var_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "ft_generate_t1_area_name",
              "var": "@ft_generate_t1_area_var_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "ft_generate_t1_target_name",
              "var": "@ft_generate_t1_target_var_name"
            }
          },
          {
            "getOwnArea": {
              "name": "@ft_generate_t1_area_name",
              "template": "flt_area_",
              "out_var": "ft_generate_t1_own_area_name"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t1_own_state_idx",
              "input_var": "@ft_generate_t1_own_state_name"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_distance_check_t1_check_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t1_check_army"
            }
          }
        ],
        "else_actions": []
      },
      "ft_generate_t1_check_army": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_generate_t1_own_state_idx",
            "value": 2,
            "comparasion_func": "notEqual"
          }
        },
        "actions": {
          "comment": {
            "value": "совпали индексы армий. генерируем дальше"
          },
          "triggerEnable": {
            "target": "ft_generate_t1_distance_rotator"
          }
        },
        "else_actions": [
          {
            "comment": {
              "value": "индексы не совпали. уменьшаем индекс аэродрома на 1"
            }
          },
          {
            "comment": {
              "value": "генерируем заново"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": -1.0,
              "var": "ft_generate_t1_idx"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": -1.0,
              "var": "@ft_generate_t1_cur_idx_var_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t1_airfield_rotator"
            }
          }
        ]
      },
      "ft_generate_t1_distance_rotator": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_distance_check_t1_check_idx",
            "value": 3,
            "comparasion_func": "less",
            "var_value_other": "ft_t1_max_airfields_count"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "индекс в пределах"
            }
          },
          {
            "comment": {
              "value": "проверяем что он не равен текущему индексу генерации"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_distance_check_t1_check_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t1_distance_same_aifield_check"
            }
          }
        ],
        "else_actions": {
          "varSetBool": {
            "value": false,
            "var": "ft_generate_t1_distance_check_fail"
          },
          "comment": {
            "value": "индекс вышел за пределы диапазона. "
          },
          "triggerEnable": {
            "target": "ft_generate_t1_airfield_place"
          }
        }
      },
      "ft_generate_t1_distance_same_aifield_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_distance_check_t1_check_idx",
            "value": 3,
            "comparasion_func": "notEqual",
            "var_value_other": "ft_generate_t1_idx"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "индекс  не равен текущему. можно проверять"
            }
          },
          {
            "comment": {
              "value": "заполняем имя переменной где хранится имя аэродрома для проверки"
            }
          },
          {
            "comment": {
              "value": "получаем имя таргета для проверки"
            }
          },
          {
            "comment": {
              "value": "проверяем есть ли такие сущности"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_distance_check_t1_airfield_var_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_distance_check_t1_check_idx",
              "digits": 2,
              "var": "ft_distance_check_t1_airfield_var_name"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_target",
              "digits": 0,
              "var": "ft_distance_check_t1_airfield_var_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "@ft_distance_check_t1_airfield_var_name",
              "var": "ft_distance_check_t1_airfield_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t1_distance_exist"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "индекс равен текущему. скипаем дальнейшую проверку"
          },
          "triggerEnable": {
            "target": "ft_generate_t1_distance_rotator"
          }
        }
      },
      "ft_generate_t1_distance_exist": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": [
          {
            "objectExists": {
              "target": "@ft_distance_check_t1_airfield_name",
              "type": "unit"
            }
          },
          {
            "objectExists": {
              "target": "@ft_generate_t1_target_name",
              "type": "unit"
            }
          }
        ],
        "actions": [
          {
            "comment": {
              "value": "пробуждаем временно  проверяемую цель"
            }
          },
          {
            "comment": {
              "value": "все сущности есть. проверяем дистанцию"
            }
          },
          {
            "unitWakeUp": {
              "target": "@ft_generate_t1_target_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t1_distance_check"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "одной из сущностей нет. продолжаем проверку"
          },
          "triggerEnable": {
            "target": "ft_generate_t1_distance_rotator"
          }
        }
      },
      "ft_generate_t1_distance_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ANY",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "unitDistanceBetween": {
            "value": 10000.0,
            "math": "notNear2D",
            "object_type": "any",
            "object_marking": 0,
            "target_type": "any",
            "target_marking": 0,
            "check_objects": "any",
            "check_targets": "any",
            "object_var_name": "",
            "object_var_comp_op": "equal",
            "object": "@ft_distance_check_t1_airfield_name",
            "target": "@ft_generate_t1_target_name",
            "var": "ft_generate_distance_between",
            "compareCenters": false
          },
          "varCompareInt": {
            "var_value": "ft_generate_t1_try_count",
            "value": 10,
            "comparasion_func": "more"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "прячем проверяемую цель назад"
            }
          },
          {
            "comment": {
              "value": "проверяем следующий аэродром"
            }
          },
          {
            "unitPutToSleep": {
              "target": "@ft_generate_t1_target_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t1_distance_rotator"
            }
          }
        ],
        "else_actions": [
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_generate_t1_try_count"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": -1.0,
              "var": "ft_generate_t1_idx"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": -1.0,
              "var": "@ft_generate_t1_cur_idx_var_name"
            }
          },
          {
            "comment": {
              "value": "аэродромы слишком близко уменьшаем значение индекса генерации на 1"
            }
          },
          {
            "comment": {
              "value": "говорим что проверка дистанции не прошла"
            }
          },
          {
            "comment": {
              "value": "прячем проверяемую цель назад"
            }
          },
          {
            "comment": {
              "value": "генерируем заново"
            }
          },
          {
            "varSetBool": {
              "value": true,
              "var": "ft_generate_t1_distance_check_fail"
            }
          },
          {
            "unitPutToSleep": {
              "target": "@ft_generate_t1_target_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t1_airfield_rotator"
            }
          }
        ]
      },
      "ft_generate_t1_airfield_place": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "objectExists": {
            "target": "@ft_generate_t1_airfield_name",
            "type": "objectGroup"
          },
          "objGroupWhenStatus": {
            "obj_status": "isNotActive",
            "army": 0,
            "target": "@ft_generate_t1_airfield_name"
          },
          "varCompareBool": {
            "var_value": "ft_generate_t1_distance_check_fail",
            "value": false,
            "comparasion_func": "equal"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "аэродром существует и не активен"
            }
          },
          {
            "comment": {
              "value": "выставляем аэродром на карту"
            }
          },
          {
            "comment": {
              "value": "setting different spawns for bombers and other planes"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t1_try_count"
            }
          },
          {
            "unitWakeUp": {
              "target": "@ft_generate_t1_airfield_name"
            }
          },
          {
            "unitWakeUp": {
              "target": "@ft_generate_t1_target_name"
            }
          },
          {
            "objectGroupSetAirfield": {
              "army": 1,
              "target": "@ft_generate_t1_airfield_name"
            }
          },
          {
            "airfieldSetVisibility": {
              "target": "@ft_generate_t1_airfield_name",
              "team": "A"
            }
          },
          {
            "__missionMarkAsRespawnPoint": {
              "loc_name": "@ft_generate_t1_loc_name",
              "spawnEffect": false,
              "isStrictSpawn": false,
              "isAirfield": true,
              "isUnit": false,
              "radius": -1.0,
              "useExisting": false,
              "canSpawnOnNeutral": false,
              "removeAreas": false,
              "showOnMap": true,
              "isIndividual": false,
              "onlyOnePlayerPerSpawnPoint": false,
              "resetStrictSpawnIndex": false,
              "replaceAreas": true,
              "forceCreate": false,
              "ignoreTeamsOnReuse": false,
              "target": "@ft_generate_t1_airfield_name",
              "team": "A",
              "separate_fuel_time": true,
              "modular_airfield": true,
              "respawnAirBackup": "missions/t1_backup_zone",
              "tags": {
                "none_can_spawn": false,
                "helicopter": false,
                "tank": false,
                "artillery": false,
                "aaa": false,
                "ship": false,
                "boat": false
              }
            }
          },
          {
            "__airfieldSetProperties": {
              "object": "@ft_generate_t1_airfield_name",
              "repairMul": 1.0,
              "fuelMul": 1.0,
              "reloadMul": 1.0,
              "enemySurrenderOnLanding": true,
              "airfield": {
                "hp_var": "ft_airfield_module_spawn_hp"
              },
              "storage": {
                "hp_var": "ft_airfield_module_hp"
              },
              "parking": {
                "hp_var": "ft_airfield_module_hp"
              },
              "dwelling": {
                "hp_var": "ft_airfield_module_hp"
              }
            }
          },
          {
            "__airfieldGetModuleHP": {
              "object": "@ft_generate_t1_airfield_name",
              "module": "airfield",
              "var": "ft_damage_t1_airfield_cur_hp"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t1_airfield_set_respawn"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "запускаем ротацию заново с уменьшением индекса не снегенированого филда"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": -1.0,
              "var": "ft_generate_t1_idx"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": -1.0,
              "var": "@ft_generate_t1_cur_idx_var_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t1_airfield_rotator"
            }
          }
        ]
      },
      "ft_generate_t1_aaa_start": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [],
        "actions": [
          {
            "comment": {
              "value": "обнуляем значения индекса для генерации"
            }
          },
          {
            "comment": {
              "value": "set index for far airfields"
            }
          },
          {
            "comment": {
              "value": "set index for mid airfields"
            }
          },
          {
            "comment": {
              "value": "set index for near airfields"
            }
          },
          {
            "comment": {
              "value": "запускаем ротацию генерации аэродромов"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t1_aaa_idx"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t1_aaa_field_idx"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t1_aaa_cur_sub_idx"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t1_aaa_far_idx",
              "input_var": "ft_t1_max_far_airfields_count"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t1_aaa_mid_idx",
              "input_var": "ft_generate_t1_aaa_far_idx"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t1_aaa_near_idx",
              "input_var": "ft_generate_t1_aaa_mid_idx"
            }
          },
          {
            "varSetString": {
              "value": "ft_generate_t1_aaa_check_field_pos_far",
              "var": "ft_generate_t1_aaa_next_trigger_name"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_generate_t1_aaa_mid_idx",
              "use_variable": true,
              "var_value": "ft_t1_max_mid_airfields_count"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_generate_t1_aaa_near_idx",
              "use_variable": true,
              "var_value": "ft_t1_max_near_airfields_count"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t1_aaa_rotator_field"
            }
          }
        ],
        "else_actions": []
      },
      "ft_generate_t1_aaa_rotator_field": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_generate_t1_aaa_field_idx",
            "value": 3,
            "comparasion_func": "notMore",
            "var_value_other": "ft_t1_max_airfields_count"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "индекс в диапазоне. увеличиваем индекс на 1"
            }
          },
          {
            "comment": {
              "value": "обнуляем значения индекса для генерации"
            }
          },
          {
            "comment": {
              "value": "checking field pos"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_generate_t1_aaa_field_idx"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t1_aaa_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "@ft_generate_t1_aaa_next_trigger_name"
            }
          }
        ],
        "else_actions": []
      },
      "ft_generate_t1_aaa_check_field_pos_far": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_generate_t1_aaa_field_idx",
            "value": 0,
            "comparasion_func": "notMore",
            "var_value_other": "ft_generate_t1_aaa_far_idx"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "it's far airfield"
            }
          },
          {
            "comment": {
              "value": "starting spawn rotation"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_generate_t1_aaa_cur_sub_idx"
            }
          },
          {
            "varSetInt": {
              "value": 1,
              "var": "ft_generate_t1_aaa_cur_field_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t1_aaa_rotator"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "it's not far airfield need to check mid"
          },
          "varSetString": {
            "value": "ft_generate_t1_aaa_check_field_pos_mid",
            "var": "ft_generate_t1_aaa_next_trigger_name"
          },
          "varSetInt": {
            "value": 0,
            "var": "ft_generate_t1_aaa_cur_sub_idx"
          },
          "triggerEnable": {
            "target": "ft_generate_t1_aaa_check_field_pos_mid"
          }
        }
      },
      "ft_generate_t1_aaa_check_field_pos_mid": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_generate_t1_aaa_field_idx",
            "value": 0,
            "comparasion_func": "notMore",
            "var_value_other": "ft_generate_t1_aaa_mid_idx"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "it's mid airfield"
            }
          },
          {
            "comment": {
              "value": "starting spawn rotation"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_generate_t1_aaa_cur_sub_idx"
            }
          },
          {
            "varSetInt": {
              "value": 2,
              "var": "ft_generate_t1_aaa_cur_field_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t1_aaa_rotator"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "it's not mid airfield need to check near"
          },
          "varSetString": {
            "value": "ft_generate_t1_aaa_check_field_pos_near",
            "var": "ft_generate_t1_aaa_next_trigger_name"
          },
          "varSetInt": {
            "value": 0,
            "var": "ft_generate_t1_aaa_cur_sub_idx"
          },
          "triggerEnable": {
            "target": "ft_generate_t1_aaa_check_field_pos_near"
          }
        }
      },
      "ft_generate_t1_aaa_check_field_pos_near": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_generate_t1_aaa_field_idx",
            "value": 0,
            "comparasion_func": "notMore",
            "var_value_other": "ft_generate_t1_aaa_near_idx"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "it's near airfield"
            }
          },
          {
            "comment": {
              "value": "starting spawn rotation"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_generate_t1_aaa_cur_sub_idx"
            }
          },
          {
            "varSetInt": {
              "value": 3,
              "var": "ft_generate_t1_aaa_cur_field_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t1_aaa_rotator"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "it's not near airfield"
          },
          "triggerDisable": {
            "target": "ft_generate_t1_aaa_check_field_pos_near"
          }
        }
      },
      "ft_generate_t1_aaa_rotator": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_generate_t1_aaa_idx",
            "value": 10,
            "comparasion_func": "less"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "индекс в диапазоне. увеличиваем индекс на 1"
            }
          },
          {
            "comment": {
              "value": "запускаем генерацию зенитки"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_generate_t1_aaa_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t1_aaa_spawn_prepare"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "вышли за диапазон запускаем следующий аэродром"
          },
          "triggerEnable": {
            "target": "ft_generate_t1_aaa_rotator_field"
          }
        }
      },
      "ft_generate_t1_aaa_spawn_prepare": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.1
          }
        },
        "conditions": [],
        "actions": [
          {
            "comment": {
              "value": "создаем имя переменной где хранится имя филда"
            }
          },
          {
            "comment": {
              "value": "получаем имя филда"
            }
          },
          {
            "comment": {
              "value": "создаем имя спавна для зенитки"
            }
          },
          {
            "comment": {
              "value": "создаем имя сквада"
            }
          },
          {
            "comment": {
              "value": "спавним зенитку"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_generate_t1_aaa_field_var_name"
            }
          },
          {
            "varSetString": {
              "value": "",
              "var": "ft_generate_t1_aaa_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_generate_t1_aaa_squad_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t1_aaa_field_idx",
              "digits": 2,
              "var": "ft_generate_t1_aaa_field_var_name"
            }
          },
          {
            "varAddString": {
              "value": "_name",
              "digits": 2,
              "var": "ft_generate_t1_aaa_field_var_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t1_aaa_field_name",
              "digits": 0,
              "var": "ft_generate_t1_aaa_name"
            }
          },
          {
            "varAddString": {
              "value": "_spawn_",
              "digits": 2,
              "var": "ft_generate_t1_aaa_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t1_aaa_idx",
              "digits": 2,
              "var": "ft_generate_t1_aaa_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t1_aaa_cur_field_idx",
              "digits": 2,
              "var": "ft_generate_t1_aaa_squad_name"
            }
          },
          {
            "varAddString": {
              "value": "_",
              "digits": 0,
              "var": "ft_generate_t1_aaa_squad_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t1_aaa_cur_sub_idx",
              "digits": 2,
              "var": "ft_generate_t1_aaa_squad_name"
            }
          },
          {
            "varAddString": {
              "value": "_aaa_squad",
              "digits": 0,
              "var": "ft_generate_t1_aaa_squad_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "@ft_generate_t1_aaa_field_var_name",
              "var": "ft_generate_t1_aaa_field_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t1_aaa_spawn"
            }
          }
        ],
        "else_actions": []
      },
      "ft_generate_t1_aaa_spawn": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.1
          }
        },
        "conditions": [
          {
            "objectExists": {
              "target": "@ft_generate_t1_aaa_name",
              "type": "area"
            }
          },
          {
            "objectExists": {
              "target": "@ft_generate_t1_aaa_squad_name",
              "type": "squad"
            }
          }
        ],
        "actions": [
          {
            "comment": {
              "value": "спавним зенитку"
            }
          },
          {
            "comment": {
              "value": "идем дальше по ротации"
            }
          },
          {
            "unitRespawn": {
              "delay": 1.0,
              "offset": [0.0,0.0,0.0],
              "object": "@ft_generate_t1_aaa_squad_name",
              "object_type": "isInactive",
              "target": "@ft_generate_t1_aaa_name",
              "randomObjectsCount": 1,
              "isStealth": true
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t1_aaa_rotator"
            }
          }
        ],
        "else_actions": {
          "triggerEnable": {
            "target": "ft_generate_t1_aaa_rotator_field"
          }
        }
      },
      "ft_generate_t2_airfield_start": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": [],
        "actions": [
          {
            "comment": {
              "value": "обнуляем значения индекса для генерации"
            }
          },
          {
            "comment": {
              "value": "считаем количество  аэродромов"
            }
          },
          {
            "comment": {
              "value": "запускаем ротацию генерации аэродромов"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t2_idx"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t2_try_count"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_t2_max_airfields_count"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_t2_max_airfields_count",
              "use_variable": true,
              "var_value": "ft_t2_max_far_airfields_count"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_t2_max_airfields_count",
              "use_variable": true,
              "var_value": "ft_t2_max_mid_airfields_count"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_t2_max_airfields_count",
              "use_variable": true,
              "var_value": "ft_t2_max_near_airfields_count"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t2_airfield_rotator"
            }
          }
        ],
        "else_actions": []
      },
      "ft_generate_t2_airfield_rotator": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_generate_t2_idx",
            "value": 3,
            "comparasion_func": "less",
            "var_value_other": "ft_t2_max_airfields_count"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "индекс в диапазоне. увеличиваем индекс на 1"
            }
          },
          {
            "comment": {
              "value": "обнуляем результат проверки дистанции"
            }
          },
          {
            "comment": {
              "value": "запускаем генерацию аэродрома"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_generate_t2_idx"
            }
          },
          {
            "varSetBool": {
              "value": false,
              "var": "ft_generate_t2_distance_check_fail"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t2_airfield_far"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "закончили генерировать аэродромы"
          },
          "triggerEnable": {
            "target": "ft_generate_t2_aaa_start"
          }
        }
      },
      "ft_generate_t2_airfield_far": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_t2_cur_far_airfields_count",
            "value": 3,
            "comparasion_func": "less",
            "var_value_other": "ft_t2_max_far_airfields_count"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "задем значение типа аэродрома"
            }
          },
          {
            "comment": {
              "value": "задаем рандомайзер позиции аэродрома 1 - 4"
            }
          },
          {
            "comment": {
              "value": "запоминаем значение рандомизатора"
            }
          },
          {
            "comment": {
              "value": "запоминаем переменную типа генерящегося аэродрома"
            }
          },
          {
            "comment": {
              "value": "увеличиваем число аэродромов на 1"
            }
          },
          {
            "comment": {
              "value": "заполняем параметры аэродрома для проверки"
            }
          },
          {
            "varSetInt": {
              "value": 1,
              "var": "ft_generate_t2_cur_idx"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t2_prev_value",
              "input_var": "ft_generate_t2_add_idx"
            }
          },
          {
            "varSetRandomInt": {
              "var": "ft_generate_t2_add_idx",
              "from": 1,
              "to_not_including": 5,
              "check_prev_value": "ft_generate_t2_prev_value"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_cur_far_airfields_count",
              "var": "ft_generate_t2_cur_idx_var_name"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_t2_cur_far_airfields_count"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t2_airfield_fill_info"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "пробуем сгенерировать средний аэродром"
          },
          "triggerEnable": {
            "target": "ft_generate_t2_airfield_mid"
          }
        }
      },
      "ft_generate_t2_airfield_mid": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_t2_cur_mid_airfields_count",
            "value": 3,
            "comparasion_func": "less",
            "var_value_other": "ft_t2_max_mid_airfields_count"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "задем значение типа аэродрома"
            }
          },
          {
            "comment": {
              "value": "задаем рандомайзер позиции аэродрома 1 - 4"
            }
          },
          {
            "comment": {
              "value": "запоминаем значение рандомизатора"
            }
          },
          {
            "comment": {
              "value": "запоминаем переменную типа генерящегося аэродрома"
            }
          },
          {
            "comment": {
              "value": "увеличиваем число аэродромов на 1"
            }
          },
          {
            "comment": {
              "value": "заполняем параметры аэродрома для проверки"
            }
          },
          {
            "varSetInt": {
              "value": 2,
              "var": "ft_generate_t2_cur_idx"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t2_prev_value",
              "input_var": "ft_generate_t2_add_idx"
            }
          },
          {
            "varSetRandomInt": {
              "var": "ft_generate_t2_add_idx",
              "from": 1,
              "to_not_including": 5,
              "check_prev_value": "ft_generate_t2_prev_value"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_cur_mid_airfields_count",
              "var": "ft_generate_t2_cur_idx_var_name"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_t2_cur_mid_airfields_count"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t2_airfield_fill_info"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "пробуем сгенерировать средний аэродром"
          },
          "triggerEnable": {
            "target": "ft_generate_t2_airfield_near"
          }
        }
      },
      "ft_generate_t2_airfield_near": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_t2_cur_near_airfields_count",
            "value": 3,
            "comparasion_func": "less",
            "var_value_other": "ft_t2_max_near_airfields_count"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "задем значение типа аэродрома"
            }
          },
          {
            "comment": {
              "value": "задаем рандомайзер позиции аэродрома 1 - 4"
            }
          },
          {
            "comment": {
              "value": "запоминаем значение рандомизатора"
            }
          },
          {
            "comment": {
              "value": "запоминаем переменную типа генерящегося аэродрома"
            }
          },
          {
            "comment": {
              "value": "увеличиваем число аэродромов на 1"
            }
          },
          {
            "comment": {
              "value": "заполняем параметры аэродрома для проверки"
            }
          },
          {
            "varSetInt": {
              "value": 3,
              "var": "ft_generate_t2_cur_idx"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t2_prev_value",
              "input_var": "ft_generate_t2_add_idx"
            }
          },
          {
            "varSetRandomInt": {
              "var": "ft_generate_t2_add_idx",
              "from": 1,
              "to_not_including": 5,
              "check_prev_value": "ft_generate_t2_prev_value"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_cur_near_airfields_count",
              "var": "ft_generate_t2_cur_idx_var_name"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_t2_cur_near_airfields_count"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t2_airfield_fill_info"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "закончили генерировать аэродромы"
          },
          "triggerEnable": {
            "target": "ft_generate_t2_aaa_start"
          }
        }
      },
      "ft_generate_t2_airfield_fill_info": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": [],
        "actions": [
          {
            "comment": {
              "value": "собираем имя переменной для хранения аэродрома"
            }
          },
          {
            "comment": {
              "value": "создаем имя аэродрома"
            }
          },
          {
            "comment": {
              "value": "заполняем переменую"
            }
          },
          {
            "comment": {
              "value": "создаем имя локализации"
            }
          },
          {
            "comment": {
              "value": "создаем имя переменной для хранения имени зоны"
            }
          },
          {
            "comment": {
              "value": "создаем имя бомбовой зоны"
            }
          },
          {
            "comment": {
              "value": "заполняем переменую"
            }
          },
          {
            "comment": {
              "value": "создаем переменную для хранения таргета"
            }
          },
          {
            "comment": {
              "value": "создаем имя таргета"
            }
          },
          {
            "comment": {
              "value": "заполняем переменую"
            }
          },
          {
            "comment": {
              "value": "получаем имя зоны фронтлайна в котором находится аэродром"
            }
          },
          {
            "comment": {
              "value": "получаем армию фронтлайна"
            }
          },
          {
            "comment": {
              "value": "проверяем дистанцию до других аэродромов"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_generate_t2_var_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_generate_t2_airfield_name"
            }
          },
          {
            "varSetString": {
              "value": "missions/airfield_spawn",
              "var": "ft_generate_t2_loc_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_generate_t2_target_var_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_generate_t2_area_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_generate_t2_var_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_generate_t2_target_name"
            }
          },
          {
            "varSetString": {
              "value": "",
              "var": "ft_generate_t2_own_state_name",
              "input_var": "ft_generate_t2_own_area_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t2_idx",
              "digits": 2,
              "var": "ft_generate_t2_var_name"
            }
          },
          {
            "varAddString": {
              "value": "_name",
              "digits": 0,
              "var": "ft_generate_t2_var_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t2_cur_idx",
              "digits": 2,
              "var": "ft_generate_t2_airfield_name"
            }
          },
          {
            "varAddString": {
              "value": "_",
              "digits": 0,
              "var": "ft_generate_t2_airfield_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t2_add_idx",
              "digits": 2,
              "var": "ft_generate_t2_airfield_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t2_idx",
              "digits": 0,
              "var": "ft_generate_t2_loc_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t2_idx",
              "digits": 2,
              "var": "ft_generate_t2_target_var_name"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_zone",
              "digits": 0,
              "var": "ft_generate_t2_target_var_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t2_cur_idx",
              "digits": 2,
              "var": "ft_generate_t2_area_name"
            }
          },
          {
            "varAddString": {
              "value": "_",
              "digits": 0,
              "var": "ft_generate_t2_area_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t2_add_idx",
              "digits": 2,
              "var": "ft_generate_t2_area_name"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_zone",
              "digits": 0,
              "var": "ft_generate_t2_area_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t2_idx",
              "digits": 2,
              "var": "ft_generate_t2_var_name"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_target",
              "digits": 0,
              "var": "ft_generate_t2_var_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t2_cur_idx",
              "digits": 2,
              "var": "ft_generate_t2_target_name"
            }
          },
          {
            "varAddString": {
              "value": "_",
              "digits": 0,
              "var": "ft_generate_t2_target_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t2_add_idx",
              "digits": 2,
              "var": "ft_generate_t2_target_name"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_target",
              "digits": 0,
              "var": "ft_generate_t2_target_name"
            }
          },
          {
            "varAddString": {
              "value": "_state",
              "digits": 0,
              "var": "ft_generate_t2_own_state_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "ft_generate_t2_airfield_name",
              "var": "@ft_generate_t2_var_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "ft_generate_t2_area_name",
              "var": "@ft_generate_t2_target_var_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "ft_generate_t2_target_name",
              "var": "@ft_generate_t2_var_name"
            }
          },
          {
            "getOwnArea": {
              "name": "@ft_generate_t2_area_name",
              "template": "flt_area_",
              "out_var": "ft_generate_t2_own_area_name"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t2_own_state_idx",
              "input_var": "@ft_generate_t2_own_state_name"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_distance_check_t2_check_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t2_check_army"
            }
          }
        ],
        "else_actions": []
      },
      "ft_generate_t2_check_army": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_generate_t2_own_state_idx",
            "value": 1,
            "comparasion_func": "notEqual"
          }
        },
        "actions": {
          "comment": {
            "value": "совпали индексы армий. генерируем дальше"
          },
          "triggerEnable": {
            "target": "ft_generate_t2_distance_rotator"
          }
        },
        "else_actions": [
          {
            "comment": {
              "value": "индексы не совпали. уменьшаем индекс аэродрома на 1"
            }
          },
          {
            "comment": {
              "value": "генерируем заново"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": -1.0,
              "var": "ft_generate_t2_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t2_airfield_rotator"
            }
          }
        ]
      },
      "ft_generate_t2_distance_rotator": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_distance_check_t2_check_idx",
            "value": 3,
            "comparasion_func": "less",
            "var_value_other": "ft_t2_max_airfields_count"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "индекс в пределах и  не равен текущему. можно проверять"
            }
          },
          {
            "comment": {
              "value": "проверяем наличие сущностей"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_distance_check_t2_check_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t2_distance_same_aifield_check"
            }
          }
        ],
        "else_actions": {
          "varSetBool": {
            "value": false,
            "var": "ft_generate_t2_distance_check_fail"
          },
          "comment": {
            "value": "индекс вне диапазона или равен текущему. можно прекращать проверку"
          },
          "triggerEnable": {
            "target": "ft_generate_t2_airfield_place"
          }
        }
      },
      "ft_generate_t2_distance_same_aifield_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_distance_check_t2_check_idx",
            "value": 3,
            "comparasion_func": "notEqual",
            "var_value_other": "ft_generate_t2_idx"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "индекс  не равен текущему. можно проверять"
            }
          },
          {
            "comment": {
              "value": "заполняем имя переменной где хранится имя аэродрома для проверки"
            }
          },
          {
            "comment": {
              "value": "получаем имя таргета для проверки"
            }
          },
          {
            "comment": {
              "value": "проверяем есть ли такие сущности"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_distance_check_t2_airfield_var_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_distance_check_t2_check_idx",
              "digits": 2,
              "var": "ft_distance_check_t2_airfield_var_name"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_target",
              "digits": 0,
              "var": "ft_distance_check_t2_airfield_var_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "@ft_distance_check_t2_airfield_var_name",
              "var": "ft_distance_check_t2_airfield_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t2_distance_exist"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "индекс равен текущему. скипаем дальнейшую проверку"
          },
          "triggerEnable": {
            "target": "ft_generate_t2_distance_rotator"
          }
        }
      },
      "ft_generate_t2_distance_exist": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": [
          {
            "objectExists": {
              "target": "@ft_distance_check_t2_airfield_name",
              "type": "unit"
            }
          },
          {
            "objectExists": {
              "target": "@ft_generate_t2_target_name",
              "type": "unit"
            }
          }
        ],
        "actions": [
          {
            "comment": {
              "value": "пробуждаем временно  проверяемую цель"
            }
          },
          {
            "comment": {
              "value": "все сущности есть. проверяем дистанцию"
            }
          },
          {
            "unitWakeUp": {
              "target": "@ft_generate_t2_target_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t2_distance_check"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "одной из сущностей нет, продолжаем проверку"
          },
          "triggerEnable": {
            "target": "ft_generate_t2_distance_rotator"
          }
        }
      },
      "ft_generate_t2_distance_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ANY",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "unitDistanceBetween": {
            "value": 10000.0,
            "math": "notNear2D",
            "object_type": "any",
            "object_marking": 0,
            "target_type": "any",
            "target_marking": 0,
            "check_objects": "any",
            "check_targets": "any",
            "object_var_name": "",
            "object_var_comp_op": "equal",
            "object": "@ft_distance_check_t2_airfield_name",
            "target": "@ft_generate_t2_target_name",
            "var": "ft_generate_distance_between",
            "compareCenters": false
          },
          "varCompareInt": {
            "var_value": "ft_generate_t2_try_count",
            "value": 10,
            "comparasion_func": "more"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "прячем проверяемую цель назад"
            }
          },
          {
            "comment": {
              "value": "проверяем следующий аэродром"
            }
          },
          {
            "unitPutToSleep": {
              "target": "@ft_generate_t2_target_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t2_distance_rotator"
            }
          }
        ],
        "else_actions": [
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_generate_t2_try_count"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": -1.0,
              "var": "ft_generate_t2_idx"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": -1.0,
              "var": "@ft_generate_t2_cur_idx_var_name"
            }
          },
          {
            "comment": {
              "value": "аэродромы слишком близко. уменьшаем индекс генерации"
            }
          },
          {
            "comment": {
              "value": "говорим что проверка дистанции не прошла"
            }
          },
          {
            "comment": {
              "value": "прячем проверяемую цель назад"
            }
          },
          {
            "comment": {
              "value": "запускаем генерацию заново"
            }
          },
          {
            "varSetBool": {
              "value": true,
              "var": "ft_generate_t2_distance_check_fail"
            }
          },
          {
            "unitPutToSleep": {
              "target": "@ft_generate_t2_target_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t2_airfield_rotator"
            }
          }
        ]
      },
      "ft_generate_t2_airfield_place": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "objectExists": {
            "target": "@ft_generate_t2_airfield_name",
            "type": "objectGroup"
          },
          "objGroupWhenStatus": {
            "obj_status": "isNotActive",
            "army": 0,
            "target": "@ft_generate_t2_airfield_name"
          },
          "varCompareBool": {
            "var_value": "ft_generate_t2_distance_check_fail",
            "value": false,
            "comparasion_func": "equal"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "аэродром существует"
            }
          },
          {
            "comment": {
              "value": "выставляем аэродром на карту"
            }
          },
          {
            "comment": {
              "value": ""
            }
          },
          {
            "comment": {
              "value": "setting different spawns for bombers and other planes"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t2_try_count"
            }
          },
          {
            "unitWakeUp": {
              "target": "@ft_generate_t2_airfield_name"
            }
          },
          {
            "unitWakeUp": {
              "target": "@ft_generate_t2_target_name"
            }
          },
          {
            "objectGroupSetAirfield": {
              "army": 2,
              "target": "@ft_generate_t2_airfield_name"
            }
          },
          {
            "airfieldSetVisibility": {
              "target": "@ft_generate_t2_airfield_name",
              "team": "B"
            }
          },
          {
            "__missionMarkAsRespawnPoint": {
              "loc_name": "@ft_generate_t2_loc_name",
              "spawnEffect": false,
              "isStrictSpawn": false,
              "isAirfield": true,
              "isUnit": false,
              "radius": -1.0,
              "useExisting": false,
              "canSpawnOnNeutral": false,
              "removeAreas": false,
              "showOnMap": true,
              "isIndividual": false,
              "onlyOnePlayerPerSpawnPoint": false,
              "resetStrictSpawnIndex": false,
              "replaceAreas": true,
              "forceCreate": false,
              "ignoreTeamsOnReuse": false,
              "target": "@ft_generate_t2_airfield_name",
              "team": "B",
              "separate_fuel_time": true,
              "modular_airfield": true,
              "respawnAirBackup": "missions/t2_backup_zone",
              "tags": {
                "none_can_spawn": false,
                "helicopter": false,
                "tank": false,
                "artillery": false,
                "aaa": false,
                "ship": false,
                "boat": false
              }
            }
          },
          {
            "__airfieldSetProperties": {
              "object": "@ft_generate_t2_airfield_name",
              "repairMul": 1.0,
              "fuelMul": 1.0,
              "reloadMul": 1.0,
              "enemySurrenderOnLanding": true,
              "airfield": {
                "hp_var": "ft_airfield_module_spawn_hp"
              },
              "storage": {
                "hp_var": "ft_airfield_module_hp"
              },
              "parking": {
                "hp_var": "ft_airfield_module_hp"
              },
              "dwelling": {
                "hp_var": "ft_airfield_module_hp"
              }
            }
          },
          {
            "__airfieldGetModuleHP": {
              "object": "@ft_generate_t2_airfield_name",
              "module": "airfield",
              "var": "ft_damage_t2_airfield_cur_hp"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t2_airfield_set_respawn"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "запускаем ротацию заново с уменьшением индекса не снегенированого филда"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": -1.0,
              "var": "ft_generate_t2_idx"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": -1.0,
              "var": "@ft_generate_t2_cur_idx_var_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t2_airfield_rotator"
            }
          }
        ]
      },
      "ft_generate_t2_aaa_start": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [],
        "actions": [
          {
            "comment": {
              "value": "обнуляем значения индекса для генерации"
            }
          },
          {
            "comment": {
              "value": "set index for far airfields"
            }
          },
          {
            "comment": {
              "value": "set index for mid airfields"
            }
          },
          {
            "comment": {
              "value": "set index for near airfields"
            }
          },
          {
            "comment": {
              "value": "запускаем ротацию генерации аэродромов"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t2_aaa_idx"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t2_aaa_field_idx"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t2_aaa_cur_sub_idx"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t2_aaa_far_idx",
              "input_var": "ft_t2_max_far_airfields_count"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t2_aaa_mid_idx",
              "input_var": "ft_generate_t2_aaa_far_idx"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t2_aaa_near_idx",
              "input_var": "ft_generate_t2_aaa_mid_idx"
            }
          },
          {
            "varSetString": {
              "value": "ft_generate_t2_aaa_check_field_pos_far",
              "var": "ft_generate_t2_aaa_next_trigger_name"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_generate_t2_aaa_mid_idx",
              "use_variable": true,
              "var_value": "ft_t2_max_mid_airfields_count"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_generate_t2_aaa_near_idx",
              "use_variable": true,
              "var_value": "ft_t2_max_near_airfields_count"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t2_aaa_rotator_field"
            }
          }
        ],
        "else_actions": []
      },
      "ft_generate_t2_aaa_rotator_field": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_generate_t2_aaa_field_idx",
            "value": 3,
            "comparasion_func": "less",
            "var_value_other": "ft_t2_max_airfields_count"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "индекс в диапазоне. увеличиваем индекс на 1"
            }
          },
          {
            "comment": {
              "value": "обнуляем значения индекса для генерации"
            }
          },
          {
            "comment": {
              "value": "checking field pos"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_generate_t2_aaa_field_idx"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_generate_t2_aaa_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "@ft_generate_t2_aaa_next_trigger_name"
            }
          }
        ],
        "else_actions": []
      },
      "ft_generate_t2_aaa_check_field_pos_far": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_generate_t2_aaa_field_idx",
            "value": 0,
            "comparasion_func": "notMore",
            "var_value_other": "ft_generate_t2_aaa_far_idx"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "it's far airfield"
            }
          },
          {
            "comment": {
              "value": "starting spawn rotation"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_generate_t2_aaa_cur_sub_idx"
            }
          },
          {
            "varSetInt": {
              "value": 1,
              "var": "ft_generate_t2_aaa_cur_field_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t2_aaa_rotator"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "it's not far airfield need to check mid"
          },
          "varSetString": {
            "value": "ft_generate_t2_aaa_check_field_pos_mid",
            "var": "ft_generate_t2_aaa_next_trigger_name"
          },
          "varSetInt": {
            "value": 0,
            "var": "ft_generate_t2_aaa_cur_sub_idx"
          },
          "triggerEnable": {
            "target": "ft_generate_t2_aaa_check_field_pos_mid"
          }
        }
      },
      "ft_generate_t2_aaa_check_field_pos_mid": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_generate_t2_aaa_field_idx",
            "value": 0,
            "comparasion_func": "notMore",
            "var_value_other": "ft_generate_t2_aaa_mid_idx"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "it's mid airfield"
            }
          },
          {
            "comment": {
              "value": "starting spawn rotation"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_generate_t2_aaa_cur_sub_idx"
            }
          },
          {
            "varSetInt": {
              "value": 2,
              "var": "ft_generate_t2_aaa_cur_field_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t2_aaa_rotator"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "it's not mid airfield need to check near"
          },
          "varSetString": {
            "value": "ft_generate_t2_aaa_check_field_pos_near",
            "var": "ft_generate_t2_aaa_next_trigger_name"
          },
          "varSetInt": {
            "value": 0,
            "var": "ft_generate_t2_aaa_cur_sub_idx"
          },
          "triggerEnable": {
            "target": "ft_generate_t2_aaa_check_field_pos_near"
          }
        }
      },
      "ft_generate_t2_aaa_check_field_pos_near": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_generate_t2_aaa_field_idx",
            "value": 0,
            "comparasion_func": "notMore",
            "var_value_other": "ft_generate_t2_aaa_near_idx"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "it's near airfield"
            }
          },
          {
            "comment": {
              "value": "starting spawn rotation"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_generate_t2_aaa_cur_sub_idx"
            }
          },
          {
            "varSetInt": {
              "value": 3,
              "var": "ft_generate_t2_aaa_cur_field_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t2_aaa_rotator"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "it's not near airfield"
          },
          "triggerDisable": {
            "target": "ft_generate_t2_aaa_check_field_pos_near"
          }
        }
      },
      "ft_generate_t2_aaa_rotator": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_generate_t2_aaa_idx",
            "value": 10,
            "comparasion_func": "less"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "индекс в диапазоне. увеличиваем индекс на 1"
            }
          },
          {
            "comment": {
              "value": "spawning aaa"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_generate_t2_aaa_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t2_aaa_spawn_prepare"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "вышли за диапазон запускаем следующий аэродром"
          },
          "triggerEnable": {
            "target": "ft_generate_t2_aaa_rotator_field"
          }
        }
      },
      "ft_generate_t2_aaa_spawn_prepare": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.1
          }
        },
        "conditions": [],
        "actions": [
          {
            "comment": {
              "value": "создаем имя переменной где хранится имя филда"
            }
          },
          {
            "comment": {
              "value": "получаем имя филда"
            }
          },
          {
            "comment": {
              "value": "создаем имя спавна для зенитки"
            }
          },
          {
            "comment": {
              "value": "создаем имя сквада"
            }
          },
          {
            "comment": {
              "value": "спавним зенитку"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_generate_t2_aaa_field_var_name"
            }
          },
          {
            "varSetString": {
              "value": "",
              "var": "ft_generate_t2_aaa_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_generate_t2_aaa_squad_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t2_aaa_field_idx",
              "digits": 2,
              "var": "ft_generate_t2_aaa_field_var_name"
            }
          },
          {
            "varAddString": {
              "value": "_name",
              "digits": 2,
              "var": "ft_generate_t2_aaa_field_var_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t2_aaa_field_name",
              "digits": 0,
              "var": "ft_generate_t2_aaa_name"
            }
          },
          {
            "varAddString": {
              "value": "_spawn_",
              "digits": 2,
              "var": "ft_generate_t2_aaa_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t2_aaa_idx",
              "digits": 2,
              "var": "ft_generate_t2_aaa_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t2_aaa_cur_field_idx",
              "digits": 2,
              "var": "ft_generate_t2_aaa_squad_name"
            }
          },
          {
            "varAddString": {
              "value": "_",
              "digits": 0,
              "var": "ft_generate_t2_aaa_squad_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_generate_t2_aaa_cur_sub_idx",
              "digits": 2,
              "var": "ft_generate_t2_aaa_squad_name"
            }
          },
          {
            "varAddString": {
              "value": "_aaa_squad",
              "digits": 0,
              "var": "ft_generate_t2_aaa_squad_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "@ft_generate_t2_aaa_field_var_name",
              "var": "ft_generate_t2_aaa_field_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t2_aaa_spawn"
            }
          }
        ],
        "else_actions": []
      },
      "ft_generate_t2_aaa_spawn": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.1
          }
        },
        "conditions": [
          {
            "objectExists": {
              "target": "@ft_generate_t2_aaa_name",
              "type": "area"
            }
          },
          {
            "objectExists": {
              "target": "@ft_generate_t2_aaa_squad_name",
              "type": "squad"
            }
          }
        ],
        "actions": [
          {
            "comment": {
              "value": "спавним зенитку"
            }
          },
          {
            "comment": {
              "value": "идем дальше по ротации"
            }
          },
          {
            "unitRespawn": {
              "delay": 1.0,
              "offset": [0.0,0.0,0.0],
              "object": "@ft_generate_t2_aaa_squad_name",
              "object_type": "isInactive",
              "target": "@ft_generate_t2_aaa_name",
              "randomObjectsCount": 1,
              "isStealth": true
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t2_aaa_rotator"
            }
          }
        ],
        "else_actions": {
          "triggerEnable": {
            "target": "ft_generate_t2_aaa_rotator_field"
          }
        }
      },
      "ft_generate_t1_airfield_set_respawn": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ANY",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_generate_t1_cur_idx",
            "value": 3,
            "comparasion_func": "less"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "филды не ближние. разрешаем респаун всем"
            }
          },
          {
            "comment": {
              "value": ""
            }
          },
          {
            "missionMarkAsRespawnPoint": {
              "loc_name": "@ft_generate_t1_loc_name",
              "spawnEffect": false,
              "isStrictSpawn": false,
              "isAirfield": true,
              "isUnit": false,
              "radius": -1.0,
              "useExisting": false,
              "canSpawnOnNeutral": false,
              "removeAreas": false,
              "showOnMap": true,
              "isIndividual": false,
              "onlyOnePlayerPerSpawnPoint": false,
              "resetStrictSpawnIndex": false,
              "replaceAreas": true,
              "forceCreate": false,
              "ignoreTeamsOnReuse": false,
              "target": "@ft_generate_t1_airfield_name",
              "team": "A",
              "separate_fuel_time": true,
              "modular_airfield": true,
              "respawnAirBackup": "missions/t1_backup_zone",
              "tags": {
                "none_can_spawn": false,
                "helicopter": false,
                "tank": false,
                "artillery": false,
                "aaa": false,
                "ship": false,
                "boat": false
              }
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t1_airfield_set_properties"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "филды ближние бомберам нельзя"
            }
          },
          {
            "comment": {
              "value": ""
            }
          },
          {
            "missionMarkAsRespawnPoint": {
              "loc_name": "@ft_generate_t1_loc_name",
              "spawnEffect": false,
              "isStrictSpawn": false,
              "isAirfield": true,
              "isUnit": false,
              "radius": -1.0,
              "useExisting": false,
              "canSpawnOnNeutral": false,
              "removeAreas": false,
              "showOnMap": true,
              "isIndividual": false,
              "onlyOnePlayerPerSpawnPoint": false,
              "resetStrictSpawnIndex": false,
              "replaceAreas": true,
              "forceCreate": false,
              "ignoreTeamsOnReuse": false,
              "target": "@ft_generate_t1_airfield_name",
              "team": "A",
              "separate_fuel_time": true,
              "modular_airfield": true,
              "respawnAirBackup": "missions/t1_backup_zone",
              "tags": {
                "type_bomber": false,
                "none_can_spawn": false,
                "helicopter": false,
                "tank": false,
                "artillery": false,
                "aaa": false,
                "ship": false,
                "boat": false
              }
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t1_airfield_set_properties"
            }
          }
        ]
      },
      "ft_generate_t2_airfield_set_respawn": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ANY",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_generate_t2_cur_idx",
            "value": 3,
            "comparasion_func": "less"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "филды не ближние. разрешаем респаун всем"
            }
          },
          {
            "comment": {
              "value": ""
            }
          },
          {
            "missionMarkAsRespawnPoint": {
              "loc_name": "@ft_generate_t2_loc_name",
              "spawnEffect": false,
              "isStrictSpawn": false,
              "isAirfield": true,
              "isUnit": false,
              "radius": -1.0,
              "useExisting": false,
              "canSpawnOnNeutral": false,
              "removeAreas": false,
              "showOnMap": true,
              "isIndividual": false,
              "onlyOnePlayerPerSpawnPoint": false,
              "resetStrictSpawnIndex": false,
              "replaceAreas": true,
              "forceCreate": false,
              "ignoreTeamsOnReuse": false,
              "target": "@ft_generate_t2_airfield_name",
              "team": "B",
              "separate_fuel_time": true,
              "modular_airfield": true,
              "respawnAirBackup": "missions/t2_backup_zone",
              "tags": {
                "none_can_spawn": false,
                "helicopter": false,
                "tank": false,
                "artillery": false,
                "aaa": false,
                "ship": false,
                "boat": false
              }
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t2_airfield_set_properties"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "филды ближние бомберам нельзя"
            }
          },
          {
            "comment": {
              "value": ""
            }
          },
          {
            "missionMarkAsRespawnPoint": {
              "loc_name": "@ft_generate_t2_loc_name",
              "spawnEffect": false,
              "isStrictSpawn": false,
              "isAirfield": true,
              "isUnit": false,
              "radius": -1.0,
              "useExisting": false,
              "canSpawnOnNeutral": false,
              "removeAreas": false,
              "showOnMap": true,
              "isIndividual": false,
              "onlyOnePlayerPerSpawnPoint": false,
              "resetStrictSpawnIndex": false,
              "replaceAreas": true,
              "forceCreate": false,
              "ignoreTeamsOnReuse": false,
              "target": "@ft_generate_t2_airfield_name",
              "team": "B",
              "separate_fuel_time": true,
              "modular_airfield": true,
              "respawnAirBackup": "missions/t1_backup_zone",
              "tags": {
                "type_bomber": false,
                "none_can_spawn": false,
                "helicopter": false,
                "tank": false,
                "artillery": false,
                "aaa": false,
                "ship": false,
                "boat": false
              }
            }
          },
          {
            "triggerEnable": {
              "target": "ft_generate_t2_airfield_set_properties"
            }
          }
        ]
      },
      "ft_generate_t1_airfield_set_properties": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": [],
        "actions": {
          "airfieldSetProperties": {
            "object": "@ft_generate_t1_airfield_name",
            "repairMul": 1.0,
            "fuelMul": 1.0,
            "reloadMul": 1.0,
            "enemySurrenderOnLanding": true,
            "airfield": {
              "hp_var": "ft_airfield_module_spawn_hp"
            },
            "storage": {
              "hp_var": "ft_airfield_module_hp"
            },
            "parking": {
              "hp_var": "ft_airfield_module_hp"
            },
            "dwelling": {
              "hp_var": "ft_airfield_module_hp"
            }
          },
          "airfieldGetModuleHP": {
            "object": "@ft_generate_t1_airfield_name",
            "module": "airfield",
            "var": "ft_damage_t1_airfield_cur_hp"
          },
          "comment": {
            "value": ""
          },
          "triggerEnable": {
            "target": "ft_generate_t1_airfield_rotator"
          }
        },
        "else_actions": []
      },
      "ft_generate_t2_airfield_set_properties": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": [],
        "actions": {
          "airfieldSetProperties": {
            "object": "@ft_generate_t2_airfield_name",
            "repairMul": 1.0,
            "fuelMul": 1.0,
            "reloadMul": 1.0,
            "enemySurrenderOnLanding": true,
            "airfield": {
              "hp_var": "ft_airfield_module_spawn_hp"
            },
            "storage": {
              "hp_var": "ft_airfield_module_hp"
            },
            "parking": {
              "hp_var": "ft_airfield_module_hp"
            },
            "dwelling": {
              "hp_var": "ft_airfield_module_hp"
            }
          },
          "airfieldGetModuleHP": {
            "object": "@ft_generate_t2_airfield_name",
            "module": "airfield",
            "var": "ft_damage_t2_airfield_cur_hp"
          },
          "comment": {
            "value": ""
          },
          "triggerEnable": {
            "target": "ft_generate_t2_airfield_rotator"
          }
        },
        "else_actions": []
      }
    },
    "ft_matching_routine": {
      "isCategory": true,
      "is_enabled": true,
      "ft_matching_0_3_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [
          {
            "varCompareInt": {
              "var_value": "ft_balance_level",
              "value": 4,
              "comparasion_func": "less"
            }
          },
          {
            "varCompareInt": {
              "var_value": "ft_balance_level_forced",
              "value": 0,
              "comparasion_func": "equal"
            }
          }
        ],
        "actions": [
          {
            "triggerDisable": [
              {
                "target": "ft_matching_4_7_check"
              },
              {
                "target": "ft_matching_8_11_check"
              },
              {
                "target": "ft_matching_12_16_check"
              },
              {
                "target": "ft_matching_17_20_check"
              },
              {
                "target": "ft_matching_21_50_check"
              }
            ]
          },
          {
            "comment": {
              "value": ""
            }
          },
          {
            "comment": {
              "value": "количество хп, ремонитруемое за тик"
            }
          },
          {
            "varSetReal": {
              "value": 12000.0,
              "var": "ft_airfield_module_hp"
            }
          },
          {
            "varSetReal": {
              "value": 24000.0,
              "var": "ft_airfield_module_spawn_hp"
            }
          },
          {
            "varSetReal": {
              "value": 300.0,
              "var": "ft_damage_restore_base_hp"
            }
          }
        ],
        "else_actions": []
      },
      "ft_matching_4_7_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [
          {
            "varCompareInt": {
              "var_value": "ft_balance_level",
              "value": 3,
              "comparasion_func": "more"
            }
          },
          {
            "varCompareInt": {
              "var_value": "ft_balance_level",
              "value": 8,
              "comparasion_func": "less"
            }
          },
          {
            "varCompareInt": {
              "var_value": "ft_balance_level_forced",
              "value": 0,
              "comparasion_func": "equal"
            }
          }
        ],
        "actions": [
          {
            "triggerDisable": [
              {
                "target": "ft_matching_0_3_check"
              },
              {
                "target": "ft_matching_8_11_check"
              },
              {
                "target": "ft_matching_12_16_check"
              },
              {
                "target": "ft_matching_17_20_check"
              },
              {
                "target": "ft_matching_21_50_check"
              }
            ]
          },
          {
            "comment": {
              "value": ""
            }
          },
          {
            "comment": {
              "value": "количество хп, ремонитруемое за тик"
            }
          },
          {
            "varSetReal": {
              "value": 34000.0,
              "var": "ft_airfield_module_hp"
            }
          },
          {
            "varSetReal": {
              "value": 68000.0,
              "var": "ft_airfield_module_spawn_hp"
            }
          },
          {
            "varSetReal": {
              "value": 850.0,
              "var": "ft_damage_restore_base_hp"
            }
          }
        ],
        "else_actions": []
      },
      "ft_matching_8_11_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [
          {
            "varCompareInt": {
              "var_value": "ft_balance_level",
              "value": 7,
              "comparasion_func": "more"
            }
          },
          {
            "varCompareInt": {
              "var_value": "ft_balance_level",
              "value": 12,
              "comparasion_func": "less"
            }
          },
          {
            "varCompareInt": {
              "var_value": "ft_balance_level_forced",
              "value": 0,
              "comparasion_func": "equal"
            }
          }
        ],
        "actions": [
          {
            "triggerDisable": [
              {
                "target": "ft_matching_0_3_check"
              },
              {
                "target": "ft_matching_4_7_check"
              },
              {
                "target": "ft_matching_12_16_check"
              },
              {
                "target": "ft_matching_17_20_check"
              },
              {
                "target": "ft_matching_21_50_check"
              }
            ]
          },
          {
            "comment": {
              "value": ""
            }
          },
          {
            "comment": {
              "value": "количество хп, ремонитруемое за тик"
            }
          },
          {
            "varSetReal": {
              "value": 48000.0,
              "var": "ft_airfield_module_hp"
            }
          },
          {
            "varSetReal": {
              "value": 96000.0,
              "var": "ft_airfield_module_spawn_hp"
            }
          },
          {
            "varSetReal": {
              "value": 1200.0,
              "var": "ft_damage_restore_base_hp"
            }
          }
        ],
        "else_actions": []
      },
      "ft_matching_12_16_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [
          {
            "varCompareInt": {
              "var_value": "ft_balance_level",
              "value": 11,
              "comparasion_func": "more"
            }
          },
          {
            "varCompareInt": {
              "var_value": "ft_balance_level",
              "value": 17,
              "comparasion_func": "less"
            }
          },
          {
            "varCompareInt": {
              "var_value": "ft_balance_level_forced",
              "value": 0,
              "comparasion_func": "equal"
            }
          }
        ],
        "actions": [
          {
            "triggerDisable": [
              {
                "target": "ft_matching_0_3_check"
              },
              {
                "target": "ft_matching_4_7_check"
              },
              {
                "target": "ft_matching_8_11_check"
              },
              {
                "target": "ft_matching_17_20_check"
              },
              {
                "target": "ft_matching_21_50_check"
              }
            ]
          },
          {
            "comment": {
              "value": ""
            }
          },
          {
            "comment": {
              "value": "количество хп, ремонитруемое за тик"
            }
          },
          {
            "varSetReal": {
              "value": 100000.0,
              "var": "ft_airfield_module_hp"
            }
          },
          {
            "varSetReal": {
              "value": 200000.0,
              "var": "ft_airfield_module_spawn_hp"
            }
          },
          {
            "varSetReal": {
              "value": 2500.0,
              "var": "ft_damage_restore_base_hp"
            }
          }
        ],
        "else_actions": []
      },
      "ft_matching_17_20_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [
          {
            "varCompareInt": {
              "var_value": "ft_balance_level",
              "value": 16,
              "comparasion_func": "more"
            }
          },
          {
            "varCompareInt": {
              "var_value": "ft_balance_level",
              "value": 21,
              "comparasion_func": "less"
            }
          },
          {
            "varCompareInt": {
              "var_value": "ft_balance_level_forced",
              "value": 0,
              "comparasion_func": "equal"
            }
          }
        ],
        "actions": [
          {
            "triggerDisable": [
              {
                "target": "ft_matching_0_3_check"
              },
              {
                "target": "ft_matching_4_7_check"
              },
              {
                "target": "ft_matching_8_11_check"
              },
              {
                "target": "ft_matching_12_16_check"
              },
              {
                "target": "ft_matching_21_50_check"
              }
            ]
          },
          {
            "comment": {
              "value": ""
            }
          },
          {
            "comment": {
              "value": "количество хп, ремонитруемое за тик"
            }
          },
          {
            "varSetReal": {
              "value": 120000.0,
              "var": "ft_airfield_module_hp"
            }
          },
          {
            "varSetReal": {
              "value": 240000.0,
              "var": "ft_airfield_module_spawn_hp"
            }
          },
          {
            "varSetReal": {
              "value": 3000.0,
              "var": "ft_damage_restore_base_hp"
            }
          }
        ],
        "else_actions": []
      },
      "ft_matching_21_50_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [
          {
            "varCompareInt": {
              "var_value": "ft_balance_level",
              "value": 20,
              "comparasion_func": "more"
            }
          },
          {
            "varCompareInt": {
              "var_value": "ft_balance_level_forced",
              "value": 0,
              "comparasion_func": "equal"
            }
          }
        ],
        "actions": [
          {
            "triggerDisable": [
              {
                "target": "ft_matching_0_3_check"
              },
              {
                "target": "ft_matching_4_7_check"
              },
              {
                "target": "ft_matching_8_11_check"
              },
              {
                "target": "ft_matching_12_16_check"
              },
              {
                "target": "ft_matching_17_20_check"
              }
            ]
          },
          {
            "comment": {
              "value": ""
            }
          },
          {
            "comment": {
              "value": "количество хп, ремонитруемое за тик"
            }
          },
          {
            "varSetReal": {
              "value": 160000.0,
              "var": "ft_airfield_module_hp"
            }
          },
          {
            "varSetReal": {
              "value": 280000.0,
              "var": "ft_airfield_module_spawn_hp"
            }
          },
          {
            "varSetReal": {
              "value": 4000.0,
              "var": "ft_damage_restore_base_hp"
            }
          }
        ],
        "else_actions": []
      },
      "ft_matching_force_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_balance_level_forced",
            "value": 0,
            "comparasion_func": "more"
          }
        },
        "actions": [
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_balance_level",
              "input_var": "ft_balance_level_forced"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_balance_level_forced"
            }
          }
        ],
        "else_actions": []
      }
    },
    "ft_objectives_routine": {
      "isCategory": true,
      "is_enabled": true,
      "ft_add_t1_destroy_t2_arfield_objective": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [
          {
            "varCompareBool": {
              "var_value": "ft_is_hidden_objectives",
              "value": false,
              "comparasion_func": "equal"
            }
          },
          {
            "varCompareBool": {
              "var_value": "ft_destroy_quest_is_on",
              "value": true,
              "comparasion_func": "equal"
            }
          }
        ],
        "actions": [
          {
            "comment": {
              "value": "создаем строку содержащую ИД обжектива"
            }
          },
          {
            "comment": {
              "value": "проверяем статус обжектива"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_destroy_enemy_airfield_",
              "var": "ft_add_objective_t1_objective_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_add_objective_t2_idx",
              "digits": 2,
              "var": "ft_add_objective_t1_objective_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_add_t1_destroy_t2_arfield_objective_check"
            }
          }
        ],
        "else_actions": []
      },
      "ft_add_t1_destroy_t2_arfield_objective_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareBool": {
            "var_value": "ft_is_hidden_objectives",
            "value": false,
            "comparasion_func": "equal"
          },
          "misObjStatus": {
            "target": "@ft_add_objective_t1_objective_name",
            "status": "notInProgress"
          }
        },
        "actions": {
          "comment": {
            "value": "выдаем обжектив"
          },
          "moAddMissionObjective": {
            "target": "@ft_add_objective_t1_objective_name",
            "object_var_comp_op": "equal",
            "object_var_name": "",
            "unit_or_area": "@ft_add_objective_t2_zone_name"
          }
        },
        "else_actions": []
      },
      "ft_add_t2_destroy_t1_arfield_objective": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [
          {
            "varCompareBool": {
              "var_value": "ft_is_hidden_objectives",
              "value": false,
              "comparasion_func": "equal"
            }
          },
          {
            "varCompareBool": {
              "var_value": "ft_destroy_quest_is_on",
              "value": true,
              "comparasion_func": "equal"
            }
          }
        ],
        "actions": [
          {
            "comment": {
              "value": "создаем строку содержащую ИД обжектива"
            }
          },
          {
            "comment": {
              "value": "проверяем статус обжектива"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_destroy_enemy_airfield_",
              "var": "ft_add_objective_t2_objective_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_add_objective_t1_idx",
              "digits": 2,
              "var": "ft_add_objective_t2_objective_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_add_t2_destroy_t1_arfield_objective_check"
            }
          }
        ],
        "else_actions": []
      },
      "ft_add_t2_destroy_t1_arfield_objective_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareBool": {
            "var_value": "ft_is_hidden_objectives",
            "value": false,
            "comparasion_func": "equal"
          },
          "misObjStatus": {
            "target": "@ft_add_objective_t2_objective_name",
            "status": "notInProgress"
          }
        },
        "actions": {
          "comment": {
            "value": "выдаем обжектив"
          },
          "moAddMissionObjective": {
            "target": "@ft_add_objective_t2_objective_name",
            "object_var_comp_op": "equal",
            "object_var_name": "",
            "unit_or_area": "@ft_add_objective_t1_zone_name"
          }
        },
        "else_actions": []
      },
      "ft_complete_t1_destroy_t2_arfield_objective": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareBool": {
            "var_value": "ft_is_hidden_objectives",
            "value": false,
            "comparasion_func": "equal"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "создаем строку содержащую ИД обжектива"
            }
          },
          {
            "comment": {
              "value": "проверяем статус обжектива"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_destroy_enemy_airfield_",
              "var": "ft_complete_objective_t1_objective_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_complete_objective_t2_idx",
              "digits": 2,
              "var": "ft_complete_objective_t1_objective_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_complete_t1_destroy_t2_arfield_objective_check"
            }
          }
        ],
        "else_actions": []
      },
      "ft_complete_t1_destroy_t2_arfield_objective_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareBool": {
            "var_value": "ft_is_hidden_objectives",
            "value": false,
            "comparasion_func": "equal"
          },
          "misObjStatus": {
            "target": "@ft_complete_objective_t1_objective_name",
            "status": "inProgress"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "завершаем обжектив"
            }
          },
          {
            "moSetObjectiveStatus": {
              "target": "@ft_complete_objective_t1_objective_name",
              "status": 2,
              "object_var_comp_op": "equal",
              "object_var_name": "",
              "extendedEnding": true,
              "team": "A",
              "unit_or_area": "@ft_complete_objective_t2_zone_name"
            }
          },
          {
            "moSetObjectiveStatus": {
              "target": "@ft_complete_objective_t1_objective_name",
              "status": 0,
              "object_var_comp_op": "equal",
              "object_var_name": "",
              "team": "A",
              "object_type": "isAlive"
            }
          },
          {
            "wait": {
              "time": 30.0
            }
          }
        ],
        "else_actions": []
      },
      "ft_complete_t2_destroy_t1_arfield_objective": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareBool": {
            "var_value": "ft_is_hidden_objectives",
            "value": false,
            "comparasion_func": "equal"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "создаем строку содержащую ИД обжектива"
            }
          },
          {
            "comment": {
              "value": "проверяем статус обжектива"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_destroy_enemy_airfield_",
              "var": "ft_complete_objective_t2_objective_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_complete_objective_t1_idx",
              "digits": 2,
              "var": "ft_complete_objective_t2_objective_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_complete_t2_destroy_t1_arfield_objective_check"
            }
          }
        ],
        "else_actions": []
      },
      "ft_complete_t2_destroy_t1_arfield_objective_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareBool": {
            "var_value": "ft_is_hidden_objectives",
            "value": false,
            "comparasion_func": "equal"
          },
          "misObjStatus": {
            "target": "@ft_complete_objective_t2_objective_name",
            "status": "inProgress"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "завершаем обжектив"
            }
          },
          {
            "moSetObjectiveStatus": {
              "target": "@ft_complete_objective_t2_objective_name",
              "status": 2,
              "object_var_comp_op": "equal",
              "object_var_name": "",
              "extendedEnding": true,
              "team": "A",
              "unit_or_area": "@ft_complete_objective_t1_zone_name"
            }
          },
          {
            "moSetObjectiveStatus": {
              "target": "@ft_complete_objective_t2_objective_name",
              "status": 0,
              "object_var_comp_op": "equal",
              "object_var_name": "",
              "team": "Both",
              "object_type": "isAlive"
            }
          },
          {
            "wait": {
              "time": 30.0
            }
          }
        ],
        "else_actions": []
      },
      "ft_add_t1_found_airfield": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": true
        },
        "events": {
          "periodicEvent": {
            "time": 30.0
          }
        },
        "conditions": [
          {
            "misObjStatus": {
              "target": "ft_t1_find_enemy_airfield",
              "status": "notInProgress"
            }
          },
          {
            "varCompareBool": {
              "var_value": "ft_is_detect_on",
              "value": true,
              "comparasion_func": "equal"
            }
          },
          {
            "varCompareBool": {
              "var_value": "ft_t1_delete_objective_in_progress",
              "value": false,
              "comparasion_func": "equal"
            }
          },
          {
            "varCompareInt": {
              "var_value": "ft_t2_num_airfields_detected",
              "value": 1,
              "comparasion_func": "less"
            }
          }
        ],
        "actions": [
          {
            "comment": {
              "value": "включен режим обнаружения аэродромов"
            }
          },
          {
            "comment": {
              "value": "нет запущенного квеста на поиск аэродромов"
            }
          },
          {
            "comment": {
              "value": "количество обнаруженных аэродромов меньше 1"
            }
          },
          {
            "comment": {
              "value": "не происходит удаление обжектива из логбука"
            }
          },
          {
            "__moAddMissionObjective": {
              "target": "ft_t1_find_enemy_airfield",
              "object_var_comp_op": "equal",
              "object_var_name": "",
              "object_type": "isAlive"
            }
          }
        ],
        "else_actions": []
      },
      "ft_add_t2_found_airfield": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": true
        },
        "events": {
          "periodicEvent": {
            "time": 30.0
          }
        },
        "conditions": [
          {
            "misObjStatus": {
              "target": "ft_t2_find_enemy_airfield",
              "status": "notInProgress"
            }
          },
          {
            "varCompareBool": {
              "var_value": "ft_is_detect_on",
              "value": true,
              "comparasion_func": "equal"
            }
          },
          {
            "varCompareBool": {
              "var_value": "ft_t2_delete_objective_in_progress",
              "value": false,
              "comparasion_func": "equal"
            }
          },
          {
            "varCompareInt": {
              "var_value": "ft_t1_num_airfields_detected",
              "value": 1,
              "comparasion_func": "less"
            }
          }
        ],
        "actions": [
          {
            "comment": {
              "value": "включен режим обнаружения аэродромов"
            }
          },
          {
            "comment": {
              "value": "нет запущенного квеста на поиск аэродромов"
            }
          },
          {
            "comment": {
              "value": "количество обнаруженных аэродромов меньше 1"
            }
          },
          {
            "comment": {
              "value": "не происходит удаление обжектива из логбука"
            }
          },
          {
            "__moAddMissionObjective": {
              "target": "ft_t2_find_enemy_airfield",
              "object_var_comp_op": "equal",
              "object_var_name": "",
              "object_type": "isAlive"
            }
          }
        ],
        "else_actions": []
      },
      "ft_complete_t1_found_airfield": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "misObjStatus": {
            "target": "ft_t1_find_enemy_airfield",
            "status": "inProgress"
          }
        },
        "actions": [
          {
            "moSetObjectiveStatus": {
              "target": "ft_t1_find_enemy_airfield",
              "status": 2,
              "object_var_comp_op": "equal",
              "object_var_name": "",
              "extendedEnding": true,
              "team": "A",
              "object_type": "isAlive"
            }
          },
          {
            "moSetObjectiveStatus": {
              "target": "ft_t1_find_enemy_airfield",
              "status": 0,
              "object_var_comp_op": "equal",
              "object_var_name": "",
              "team": "A",
              "object_type": "isAlive"
            }
          },
          {
            "comment": {
              "value": "говорим что обжектив удаляется и через 30 секунд удаляем его"
            }
          },
          {
            "varSetBool": {
              "value": true,
              "var": "ft_t1_delete_objective_in_progress"
            }
          },
          {
            "varSetBool": {
              "value": false,
              "var": "ft_t1_delete_objective_in_progress"
            }
          },
          {
            "wait": {
              "time": 20.0
            }
          },
          {
            "wait": {
              "time": 1.0
            }
          }
        ],
        "else_actions": []
      },
      "ft_complete_t2_found_airfield": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "misObjStatus": {
            "target": "ft_t2_find_enemy_airfield",
            "status": "inProgress"
          }
        },
        "actions": [
          {
            "moSetObjectiveStatus": {
              "target": "ft_t2_find_enemy_airfield",
              "status": 2,
              "object_var_comp_op": "equal",
              "object_var_name": "",
              "extendedEnding": true,
              "team": "B",
              "object_type": "isAlive"
            }
          },
          {
            "moSetObjectiveStatus": {
              "target": "ft_t2_find_enemy_airfield",
              "status": 0,
              "object_var_comp_op": "equal",
              "object_var_name": "",
              "team": "B",
              "object_type": "isAlive"
            }
          },
          {
            "comment": {
              "value": "говорим что обжектив удаляется и через 30 секунд удаляем его"
            }
          },
          {
            "varSetBool": {
              "value": true,
              "var": "ft_t2_delete_objective_in_progress"
            }
          },
          {
            "varSetBool": {
              "value": false,
              "var": "ft_t2_delete_objective_in_progress"
            }
          },
          {
            "wait": {
              "time": 20.0
            }
          },
          {
            "wait": {
              "time": 1.0
            }
          }
        ],
        "else_actions": []
      }
    },
    "ft_destroy_airfield_routine": {
      "isCategory": true,
      "is_enabled": true,
      "ft_destroy_t1_rotator": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_destroy_t1_cur_field_idx",
            "value": 3,
            "comparasion_func": "less",
            "var_value_other": "ft_t1_max_airfields_count"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "индекс филда в нужном диапазоне"
            }
          },
          {
            "comment": {
              "value": "увеличиваем индекс на 1"
            }
          },
          {
            "comment": {
              "value": "получаем имя переменной где хранится имя филда"
            }
          },
          {
            "comment": {
              "value": "получаем имя переменной где хранится уничтожен ли филд"
            }
          },
          {
            "comment": {
              "value": "получаем имя переменной где хранится таймер восстановления филда"
            }
          },
          {
            "comment": {
              "value": "составляем имя бомбовой зоны"
            }
          },
          {
            "comment": {
              "value": "составляем имя зениток"
            }
          },
          {
            "comment": {
              "value": "заполняем переменную где хранится статус обнаружения аэродрома"
            }
          },
          {
            "comment": {
              "value": "составляем имя переменной статуса активен ли аэродром"
            }
          },
          {
            "comment": {
              "value": "проверяем уничтожена ли такая бомбовая зона"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_destroy_t1_cur_field_idx"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_destroy_t1_airfield_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_destroy_t1_destroyed_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_destroy_t1_timer_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_destroy_t1_zone_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_destroy_t1_aaa_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_destroy_t1_found_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_destroy_t1_active_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_destroy_t1_cur_field_idx",
              "digits": 2,
              "var": "ft_destroy_t1_airfield_name"
            }
          },
          {
            "varAddString": {
              "value": "_name",
              "digits": 0,
              "var": "ft_destroy_t1_airfield_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_destroy_t1_cur_field_idx",
              "digits": 2,
              "var": "ft_destroy_t1_destroyed_name"
            }
          },
          {
            "varAddString": {
              "value": "_destroyed",
              "digits": 0,
              "var": "ft_destroy_t1_destroyed_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_destroy_t1_cur_field_idx",
              "digits": 2,
              "var": "ft_destroy_t1_timer_name"
            }
          },
          {
            "varAddString": {
              "value": "_restore_timer",
              "digits": 0,
              "var": "ft_destroy_t1_timer_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_destroy_t1_cur_field_idx",
              "digits": 2,
              "var": "ft_destroy_t1_zone_name"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_zone",
              "digits": 0,
              "var": "ft_destroy_t1_zone_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_destroy_t1_cur_field_idx",
              "digits": 2,
              "var": "ft_destroy_t1_aaa_name"
            }
          },
          {
            "varAddString": {
              "value": "_aaa_squad",
              "digits": 0,
              "var": "ft_destroy_t1_aaa_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_destroy_t1_cur_field_idx",
              "digits": 2,
              "var": "ft_destroy_t1_found_name"
            }
          },
          {
            "varAddString": {
              "value": "_found",
              "digits": 0,
              "var": "ft_destroy_t1_found_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_destroy_t1_cur_field_idx",
              "digits": 2,
              "var": "ft_destroy_t1_active_name"
            }
          },
          {
            "varAddString": {
              "value": "_active",
              "digits": 0,
              "var": "ft_destroy_t1_active_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "@ft_destroy_t1_airfield_name",
              "var": "ft_destroy_t1_airfield_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "@ft_destroy_t1_zone_name",
              "var": "ft_destroy_t1_zone_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_destroy_t1_check_airfield"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "индекс филда вышел за диапазон"
          },
          "triggerEnable": {
            "target": "ft_destroy_t1_rotator_restart"
          }
        }
      },
      "ft_destroy_t1_rotator_restart": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [],
        "actions": [
          {
            "comment": {
              "value": "убираем мусор за собой"
            }
          },
          {
            "comment": {
              "value": "обнуляем индекс и запускаем ротацию заново"
            }
          },
          {
            "triggerDisable": [
              {
                "target": "ft_destroy_t1_check_airfield"
              },
              {
                "target": "ft_destroy_t1_reward"
              }
            ]
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_destroy_t1_cur_field_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_destroy_t1_rotator"
            }
          }
        ],
        "else_actions": []
      },
      "ft_destroy_t1_check_airfield": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "objectExists": {
            "target": "@ft_destroy_t1_zone_name",
            "type": "area"
          },
          "missionIsBombingAreaDestroyed": {
            "target": "@ft_destroy_t1_zone_name"
          },
          "varCompareBool": {
            "var_value": "@ft_destroy_t1_active_name",
            "value": true,
            "comparasion_func": "equal"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "аэродром активен а бомбовая зона уничтожена"
            }
          },
          {
            "comment": {
              "value": "выполняем квест на уничтожение аэродрома  для команды Б"
            }
          },
          {
            "comment": {
              "value": "объявляем аэродром уничтоженным"
            }
          },
          {
            "comment": {
              "value": "объявляем аэродром не обнаруженным"
            }
          },
          {
            "comment": {
              "value": "говорим, что аэродром не активен"
            }
          },
          {
            "comment": {
              "value": "обнуляем таймер восстановления"
            }
          },
          {
            "comment": {
              "value": "запускаем проверку надо ли прятать дежурную пару"
            }
          },
          {
            "comment": {
              "value": "прячем зенитки"
            }
          },
          {
            "comment": {
              "value": "прячем аэродром"
            }
          },
          {
            "comment": {
              "value": "выдаем награду"
            }
          },
          {
            "comment": {
              "value": "увеличиваем число уничтоженных филдов"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "ft_destroy_t1_zone_name",
              "var": "ft_complete_objective_t1_zone_name"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_complete_objective_t1_idx"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "@ft_destroy_t1_timer_name"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 0.0,
              "var": "ft_complete_objective_t1_idx",
              "use_variable": true,
              "var_value": "ft_destroy_t1_cur_field_idx"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_t1_num_destroyed_fields"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_complete_t2_destroy_t1_arfield_objective"
            }
          },
          {
            "triggerEnable": {
              "target": "st_t1_despawn_start"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_destroy_t1_reward"
            }
          },
          {
            "varSetBool": {
              "value": true,
              "var": "@ft_destroy_t1_destroyed_name"
            }
          },
          {
            "varSetBool": {
              "value": false,
              "var": "@ft_destroy_t1_found_name"
            }
          },
          {
            "varSetBool": {
              "value": false,
              "var": "@ft_destroy_t1_active_name"
            }
          },
          {
            "wait": {
              "time": 1.0
            }
          },
          {
            "unitPutToSleep": {
              "target": "@ft_destroy_t1_aaa_name"
            }
          },
          {
            "unitPutToSleep": {
              "target": "@ft_destroy_t1_airfield_name"
            }
          },
          {
            "airfieldSetVisibility": {
              "target": "@ft_destroy_t1_airfield_name",
              "team": "None"
            }
          },
          {
            "objectGroupSetAirfield": {
              "army": 0,
              "target": "@ft_destroy_t1_airfield_name"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "аэродром или не активен или бомбовая зона цела"
          },
          "triggerEnable": {
            "target": "ft_destroy_t1_rotator"
          }
        }
      },
      "ft_destroy_t1_reward": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareBool": {
            "var_value": "ft_is_big_reward",
            "value": true,
            "comparasion_func": "equal"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "большая награда награждается 20% тикетов"
            }
          },
          {
            "comment": {
              "value": "запускаем ротацию дальше по циклу"
            }
          },
          {
            "gameMPChangeScore": {
              "value": -20,
              "valueSystem": "percentage",
              "team": "A"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_destroy_t1_rotator"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "награда стандартная для всех заданий"
            }
          },
          {
            "comment": {
              "value": "запускаем ротацию дальше по циклу"
            }
          },
          {
            "triggerEnable": {
              "target": "t2_moderate_task_completed"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_destroy_t1_rotator"
            }
          }
        ]
      },
      "ft_destroy_t2_rotator": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_destroy_t2_cur_field_idx",
            "value": 3,
            "comparasion_func": "less",
            "var_value_other": "ft_t2_max_airfields_count"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "индекс филда в нужном диапазоне"
            }
          },
          {
            "comment": {
              "value": "увеличиваем индекс на 1"
            }
          },
          {
            "comment": {
              "value": "получаем имя переменной где хранится имя филда"
            }
          },
          {
            "comment": {
              "value": "получаем имя переменной где хранится уничтожен ли филд"
            }
          },
          {
            "comment": {
              "value": "получаем имя переменной где хранится таймер восстановления филда"
            }
          },
          {
            "comment": {
              "value": "составляем имя бомбовой зоны"
            }
          },
          {
            "comment": {
              "value": "составляем имя зениток"
            }
          },
          {
            "comment": {
              "value": "заполняем переменную где хранится статус обнаружения аэродрома"
            }
          },
          {
            "comment": {
              "value": "составляем имя переменной статуса активен ли аэродром"
            }
          },
          {
            "comment": {
              "value": "проверяем уничтожена ли такая бомбовая зона"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_destroy_t2_cur_field_idx"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_destroy_t2_airfield_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_destroy_t2_destroyed_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_destroy_t2_timer_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_destroy_t2_zone_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_destroy_t2_aaa_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_destroy_t2_found_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_destroy_t2_active_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_destroy_t2_cur_field_idx",
              "digits": 2,
              "var": "ft_destroy_t2_airfield_name"
            }
          },
          {
            "varAddString": {
              "value": "_name",
              "digits": 0,
              "var": "ft_destroy_t2_airfield_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_destroy_t2_cur_field_idx",
              "digits": 2,
              "var": "ft_destroy_t2_destroyed_name"
            }
          },
          {
            "varAddString": {
              "value": "_destroyed",
              "digits": 0,
              "var": "ft_destroy_t2_destroyed_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_destroy_t2_cur_field_idx",
              "digits": 2,
              "var": "ft_destroy_t2_timer_name"
            }
          },
          {
            "varAddString": {
              "value": "_restore_timer",
              "digits": 0,
              "var": "ft_destroy_t2_timer_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_destroy_t2_cur_field_idx",
              "digits": 2,
              "var": "ft_destroy_t2_zone_name"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_zone",
              "digits": 0,
              "var": "ft_destroy_t2_zone_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_destroy_t2_cur_field_idx",
              "digits": 2,
              "var": "ft_destroy_t2_aaa_name"
            }
          },
          {
            "varAddString": {
              "value": "_aaa_squad",
              "digits": 0,
              "var": "ft_destroy_t2_aaa_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_destroy_t2_cur_field_idx",
              "digits": 2,
              "var": "ft_destroy_t2_found_name"
            }
          },
          {
            "varAddString": {
              "value": "_found",
              "digits": 0,
              "var": "ft_destroy_t2_found_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_destroy_t2_cur_field_idx",
              "digits": 2,
              "var": "ft_destroy_t2_active_name"
            }
          },
          {
            "varAddString": {
              "value": "_active",
              "digits": 0,
              "var": "ft_destroy_t2_active_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "@ft_destroy_t2_airfield_name",
              "var": "ft_destroy_t2_airfield_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "@ft_destroy_t2_zone_name",
              "var": "ft_destroy_t2_zone_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_destroy_t2_check_airfield"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "индекс филда вышел за диапазон"
          },
          "triggerEnable": {
            "target": "ft_destroy_t2_rotator_restart"
          }
        }
      },
      "ft_destroy_t2_rotator_restart": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [],
        "actions": [
          {
            "comment": {
              "value": "убираем мусор за собой"
            }
          },
          {
            "comment": {
              "value": "обнуляем индекс и запускаем ротацию заново"
            }
          },
          {
            "triggerDisable": [
              {
                "target": "ft_destroy_t2_check_airfield"
              },
              {
                "target": "ft_destroy_t2_reward"
              }
            ]
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_destroy_t2_cur_field_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_destroy_t2_rotator"
            }
          }
        ],
        "else_actions": []
      },
      "ft_destroy_t2_check_airfield": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "objectExists": {
            "target": "@ft_destroy_t2_zone_name",
            "type": "area"
          },
          "missionIsBombingAreaDestroyed": {
            "target": "@ft_destroy_t2_zone_name"
          },
          "varCompareBool": {
            "var_value": "@ft_destroy_t2_active_name",
            "value": true,
            "comparasion_func": "equal"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "аэродром активен а бомбовая зона уничтожена"
            }
          },
          {
            "comment": {
              "value": "выполняем квест на уничтожение аэродрома  для команды Б"
            }
          },
          {
            "comment": {
              "value": "объявляем аэродром уничтоженным"
            }
          },
          {
            "comment": {
              "value": "объявляем аэродром не обнаруженным"
            }
          },
          {
            "comment": {
              "value": "говорим, что аэродром не активен"
            }
          },
          {
            "comment": {
              "value": "обнуляем таймер восстановления"
            }
          },
          {
            "comment": {
              "value": "запускаем проверку надо ли прятать дежурную пару"
            }
          },
          {
            "comment": {
              "value": "прячем зенитки"
            }
          },
          {
            "comment": {
              "value": "прячем аэродром"
            }
          },
          {
            "comment": {
              "value": "выдаем награду"
            }
          },
          {
            "comment": {
              "value": "увеличиваем число уничтоженных филдов"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "ft_destroy_t2_zone_name",
              "var": "ft_complete_objective_t2_zone_name"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_complete_objective_t2_idx"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "@ft_destroy_t2_timer_name"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 0.0,
              "var": "ft_complete_objective_t2_idx",
              "use_variable": true,
              "var_value": "ft_destroy_t2_cur_field_idx"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_t2_num_destroyed_fields"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_complete_t1_destroy_t2_arfield_objective"
            }
          },
          {
            "triggerEnable": {
              "target": "st_t2_despawn_start"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_destroy_t2_reward"
            }
          },
          {
            "varSetBool": {
              "value": true,
              "var": "@ft_destroy_t2_destroyed_name"
            }
          },
          {
            "varSetBool": {
              "value": false,
              "var": "@ft_destroy_t2_found_name"
            }
          },
          {
            "varSetBool": {
              "value": false,
              "var": "@ft_destroy_t2_active_name"
            }
          },
          {
            "wait": {
              "time": 1.0
            }
          },
          {
            "unitPutToSleep": {
              "target": "@ft_destroy_t2_aaa_name"
            }
          },
          {
            "unitPutToSleep": {
              "target": "@ft_destroy_t2_airfield_name"
            }
          },
          {
            "airfieldSetVisibility": {
              "target": "@ft_destroy_t2_airfield_name",
              "team": "None"
            }
          },
          {
            "objectGroupSetAirfield": {
              "army": 0,
              "target": "@ft_destroy_t2_airfield_name"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "аэродром или не активен или бомбовая зона цела"
          },
          "triggerEnable": {
            "target": "ft_destroy_t2_rotator"
          }
        }
      },
      "ft_destroy_t2_reward": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareBool": {
            "var_value": "ft_is_big_reward",
            "value": true,
            "comparasion_func": "equal"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "большая награда награждается 20% тикетов"
            }
          },
          {
            "comment": {
              "value": "запускаем ротацию дальше по циклу"
            }
          },
          {
            "gameMPChangeScore": {
              "value": -20,
              "valueSystem": "percentage",
              "team": "B"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_destroy_t2_rotator"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "награда стандартная для всех заданий"
            }
          },
          {
            "comment": {
              "value": "запускаем ротацию дальше по циклу"
            }
          },
          {
            "triggerEnable": {
              "target": "t1_moderate_task_completed"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_destroy_t2_rotator"
            }
          }
        ]
      },
      "ft_t1_all_fields_destroyed": {
        "is_enabled": true,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": true
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_t1_num_destroyed_fields",
            "value": 2,
            "comparasion_func": "equal",
            "var_value_other": "ft_t1_max_airfields_count"
          }
        },
        "actions": {
          "comment": {
            "value": "все аэродромы уничтожены"
          },
          "gameMPChangeScore": {
            "value": -10,
            "valueSystem": "percentage",
            "team": "A"
          }
        },
        "else_actions": []
      },
      "ft_t2_all_fields_destroyed": {
        "is_enabled": true,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": true
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_t2_num_destroyed_fields",
            "value": 2,
            "comparasion_func": "equal",
            "var_value_other": "ft_t2_max_airfields_count"
          }
        },
        "actions": {
          "comment": {
            "value": "все аэродромы уничтожены"
          },
          "gameMPChangeScore": {
            "value": -10,
            "valueSystem": "percentage",
            "team": "B"
          }
        },
        "else_actions": []
      }
    },
    "ft_detect_airfield_routine": {
      "isCategory": true,
      "is_enabled": true,
      "ft_detect_t1_rotator": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_detect_t1_cur_field_idx",
            "value": 3,
            "comparasion_func": "less",
            "var_value_other": "ft_t1_max_airfields_count"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "индекс филда в нужном диапазоне"
            }
          },
          {
            "comment": {
              "value": "увеличиваем индекс на 1"
            }
          },
          {
            "comment": {
              "value": "получаем имя переменной где хранится имя филда"
            }
          },
          {
            "comment": {
              "value": "составляем имя бомбового таргера"
            }
          },
          {
            "comment": {
              "value": "получаем имя переменной где хранится уничтожен ли филд"
            }
          },
          {
            "comment": {
              "value": "заполняем переменную где хранится статус обнаружения аэродрома"
            }
          },
          {
            "comment": {
              "value": "составляем имя переменной статуса активен ли аэродром"
            }
          },
          {
            "comment": {
              "value": "проверяем изменение дистанции обнаружения при активных разведчиках"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_detect_t1_cur_field_idx"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_detect_t1_airfield_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_detect_t1_bomb_target_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_detect_t1_destroyed_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_detect_t1_found_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_detect_t1_active_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_detect_t1_cur_field_idx",
              "digits": 2,
              "var": "ft_detect_t1_airfield_name"
            }
          },
          {
            "varAddString": {
              "value": "_name",
              "digits": 0,
              "var": "ft_detect_t1_airfield_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_detect_t1_cur_field_idx",
              "digits": 2,
              "var": "ft_detect_t1_bomb_target_name"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_target",
              "digits": 0,
              "var": "ft_detect_t1_bomb_target_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_detect_t1_cur_field_idx",
              "digits": 2,
              "var": "ft_detect_t1_destroyed_name"
            }
          },
          {
            "varAddString": {
              "value": "_destroyed",
              "digits": 0,
              "var": "ft_detect_t1_destroyed_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_detect_t1_cur_field_idx",
              "digits": 2,
              "var": "ft_detect_t1_found_name"
            }
          },
          {
            "varAddString": {
              "value": "_found",
              "digits": 0,
              "var": "ft_detect_t1_found_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_detect_t1_cur_field_idx",
              "digits": 2,
              "var": "ft_detect_t1_active_name"
            }
          },
          {
            "varAddString": {
              "value": "_active",
              "digits": 0,
              "var": "ft_detect_t1_active_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "@ft_detect_t1_airfield_name",
              "var": "ft_detect_t1_airfield_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "@ft_detect_t1_bomb_target_name",
              "var": "ft_detect_t1_bomb_target_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t1_lpt_change_range"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "индекс филда вышел за диапазон"
          },
          "triggerEnable": {
            "target": "ft_detect_t1_rotator_restart"
          }
        }
      },
      "ft_detect_t1_rotator_restart": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [],
        "actions": [
          {
            "comment": {
              "value": "убираем мусор за собой"
            }
          },
          {
            "comment": {
              "value": "обнуляем индекс и запускаем ротацию заново"
            }
          },
          {
            "triggerDisable": [
              {
                "target": "ft_detect_t1_lpt_change_range"
              },
              {
                "target": "ft_detect_t1_is_alive_check"
              },
              {
                "target": "ft_detect_t1_enemy_players_check"
              },
              {
                "target": "ft_detect_t1_enemy_ai_check"
              },
              {
                "target": "ft_detect_t1_detect_off_check"
              },
              {
                "target": "ft_detect_t1_found_players_check"
              },
              {
                "target": "ft_detect_t1_found_ai_check"
              },
              {
                "target": "ft_detect_t1_create_bomb_area"
              }
            ]
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_detect_t1_cur_field_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t1_rotator"
            }
          }
        ],
        "else_actions": []
      },
      "ft_detect_t1_lpt_change_range": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "objectExists": {
            "target": "lpt_t1_detection_bonus",
            "type": "var"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "найдена переменная отвечающая за увеличение дистанции обнаружения"
            }
          },
          {
            "comment": {
              "value": "запускаем проверку живой-ли аэродром"
            }
          },
          {
            "varSetReal": {
              "value": 0.0,
              "var": "ft_t1_detection_range"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 4500.0,
              "var": "ft_t1_detection_range",
              "use_variable": true,
              "var_value": "ft_base_detection_range"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 0.0,
              "var": "ft_t1_detection_range",
              "use_variable": true,
              "var_value": "lpt_t1_detection_bonus"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t1_is_alive_check"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "нет переменной отвечающей за изменение дистанции обнаружения"
          },
          "triggerEnable": {
            "target": "ft_detect_t1_is_alive_check"
          }
        }
      },
      "ft_detect_t1_is_alive_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareBool": {
            "var_value": "@ft_detect_t1_destroyed_name",
            "value": false,
            "comparasion_func": "equal"
          }
        },
        "actions": {
          "comment": {
            "value": "аэродром живой и не уничтожен. надо проверить есть ли враг рядом с ним"
          },
          "triggerEnable": {
            "target": "ft_detect_t1_enemy_players_check"
          }
        },
        "else_actions": {
          "comment": {
            "value": "аэродром уничтожен - проверять нечего. идем дальше по циклу"
          },
          "triggerEnable": {
            "target": "ft_detect_t1_rotator"
          }
        }
      },
      "ft_detect_t1_enemy_players_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "objectExists": {
            "target": "@ft_detect_t1_bomb_target_name",
            "type": "unit"
          },
          "unitDistanceBetween": {
            "value": 4500.0,
            "math": "2D",
            "object_type": "isActive",
            "object_marking": 0,
            "target_type": "isOnline",
            "target_marking": 0,
            "check_objects": "any",
            "check_targets": "any",
            "object_var_name": "",
            "object_var_comp_op": "equal",
            "object": "@ft_detect_t1_bomb_target_name",
            "target": "t2_players_squad",
            "var": "ft_t2_detection_range",
            "object_var_value": 0,
            "compareCenters": false
          }
        },
        "actions": [
          {
            "comment": {
              "value": "над аэродромом противник, включаем мигание"
            }
          },
          {
            "comment": {
              "value": "запускаем проверку что аэродром только-что обнаружен"
            }
          },
          {
            "airfieldSetIndication": {
              "set": true,
              "target": "@ft_detect_t1_airfield_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t1_found_players_check"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "над аэродромом нет игроков проверяем аи"
          },
          "triggerEnable": {
            "target": "ft_detect_t1_enemy_ai_check"
          }
        }
      },
      "ft_detect_t1_enemy_ai_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "objectExists": {
            "target": "@ft_detect_t1_bomb_target_name",
            "type": "unit"
          },
          "unitWhenEnemyNear": {
            "object_type": "isAlive",
            "object_marking": 0,
            "object_var_name": "",
            "object_var_comp_op": "equal",
            "object_var_value": 0,
            "enemy_type": "isActive",
            "distance": 4500.0,
            "check_objects": "any",
            "object": "@ft_detect_t1_bomb_target_name",
            "use_variable": true,
            "distance_var": "ft_t2_detection_range"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "над аэродромом противник, включаем мигание"
            }
          },
          {
            "comment": {
              "value": "запускаем проверку что аэродром только-что обнаружен"
            }
          },
          {
            "airfieldSetIndication": {
              "set": true,
              "target": "@ft_detect_t1_airfield_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t1_found_ai_check"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "над аэродромом нет противника - выключаем мигание аэродрома"
            }
          },
          {
            "comment": {
              "value": "запускаем проверку не надо ли все-равно показать аэродром "
            }
          },
          {
            "airfieldSetIndication": {
              "set": false,
              "target": "@ft_detect_t1_airfield_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t1_detect_off_check"
            }
          }
        ]
      },
      "ft_detect_t1_found_players_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [
          {
            "varCompareBool": {
              "var_value": "@ft_detect_t1_found_name",
              "value": false,
              "comparasion_func": "equal"
            }
          },
          {
            "varCompareBool": {
              "var_value": "@ft_detect_t1_destroyed_name",
              "value": false,
              "comparasion_func": "equal"
            }
          }
        ],
        "actions": [
          {
            "comment": {
              "value": "аэродром только что обнаружен"
            }
          },
          {
            "comment": {
              "value": "помечаем его обнаруженным"
            }
          },
          {
            "comment": {
              "value": "говорим, что он виден обеим командам"
            }
          },
          {
            "comment": {
              "value": "увеличиваем количество обнаруженных аэродромов"
            }
          },
          {
            "comment": {
              "value": "проверяем есть ли квест на обнаружение аэродрома"
            }
          },
          {
            "comment": {
              "value": "так как аэродром обнаружен не надо проверять выключен ли режим разведки"
            }
          },
          {
            "comment": {
              "value": "сразу переходим к попытке создания зоны для бомбардировки"
            }
          },
          {
            "comment": {
              "value": "даем награду"
            }
          },
          {
            "varSetBool": {
              "value": true,
              "var": "@ft_detect_t1_found_name"
            }
          },
          {
            "airfieldSetVisibility": {
              "target": "@ft_detect_t1_airfield_name",
              "team": "Both"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_t1_num_airfields_detected"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_complete_t2_found_airfield"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t1_create_bomb_area"
            }
          },
          {
            "triggerEnable": {
              "target": "t2_detection_task_completed"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "это уже известный аэродром"
            }
          },
          {
            "comment": {
              "value": "продолжаем ротацию"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t1_rotator"
            }
          }
        ]
      },
      "ft_detect_t1_found_ai_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [
          {
            "varCompareBool": {
              "var_value": "@ft_detect_t1_found_name",
              "value": false,
              "comparasion_func": "equal"
            }
          },
          {
            "varCompareBool": {
              "var_value": "@ft_detect_t1_destroyed_name",
              "value": false,
              "comparasion_func": "equal"
            }
          }
        ],
        "actions": [
          {
            "comment": {
              "value": "аэродром только что обнаружен"
            }
          },
          {
            "comment": {
              "value": "помечаем его обнаруженным"
            }
          },
          {
            "comment": {
              "value": "говорим, что он виден обеим командам"
            }
          },
          {
            "comment": {
              "value": "увеличиваем количество обнаруженных аэродромов"
            }
          },
          {
            "comment": {
              "value": "проверяем есть ли квест на обнаружение аэродрома"
            }
          },
          {
            "comment": {
              "value": "так как аэродром обнаружен не надо проверять выключен ли режим разведки"
            }
          },
          {
            "comment": {
              "value": "сразу переходим к попытке создания зоны для бомбардировки"
            }
          },
          {
            "comment": {
              "value": "не даем награду команде, так как обнаружен аи"
            }
          },
          {
            "varSetBool": {
              "value": true,
              "var": "@ft_detect_t1_found_name"
            }
          },
          {
            "airfieldSetVisibility": {
              "target": "@ft_detect_t1_airfield_name",
              "team": "Both"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_t1_num_airfields_detected"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_complete_t2_found_airfield"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t1_create_bomb_area"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "это уже известный аэродром"
            }
          },
          {
            "comment": {
              "value": "продолжаем ротацию"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t1_rotator"
            }
          }
        ]
      },
      "ft_detect_t1_detect_off_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareBool": {
            "var_value": "ft_is_detect_on",
            "value": false,
            "comparasion_func": "equal"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "проверили, что режим разведки выключен"
            }
          },
          {
            "comment": {
              "value": "говорим что аэродром обнаружен"
            }
          },
          {
            "comment": {
              "value": "проверяем не надо ли создать зону для бомбардировки"
            }
          },
          {
            "varSetBool": {
              "value": true,
              "var": "@ft_detect_t1_found_name"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_t1_num_airfields_detected"
            }
          },
          {
            "airfieldSetVisibility": {
              "target": "@ft_detect_t1_airfield_name",
              "team": "Both"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t1_create_bomb_area"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "режим разведки включен не делаем никаких модификаций"
            }
          },
          {
            "comment": {
              "value": "проверяем не надо ли создать зону для бомбардировки"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t1_create_bomb_area"
            }
          }
        ]
      },
      "ft_detect_t1_create_bomb_area": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [
          {
            "varCompareBool": {
              "var_value": "@ft_detect_t1_active_name",
              "value": false,
              "comparasion_func": "equal"
            }
          },
          {
            "varCompareBool": {
              "var_value": "@ft_detect_t1_found_name",
              "value": true,
              "comparasion_func": "equal"
            }
          },
          {
            "varCompareInt": {
              "var_value": "ft_detect_t1_cur_field_idx",
              "value": 0,
              "comparasion_func": "more"
            }
          },
          {
            "objectExists": {
              "target": "@ft_detect_t1_airfield_name",
              "type": "objectGroup"
            }
          },
          {
            "objectExists": {
              "target": "@ft_detect_t1_bomb_target_name",
              "type": "unit"
            }
          },
          {
            "objectExists": {
              "target": "@ft_detect_t1_zone_name",
              "type": "objectGroup"
            }
          }
        ],
        "actions": [
          {
            "comment": {
              "value": "аэродром не активен, найден и индекс в нужном диапазоне"
            }
          },
          {
            "comment": {
              "value": "говорим, что аэродром активен"
            }
          },
          {
            "comment": {
              "value": "составляем имя бомбовой зоны"
            }
          },
          {
            "comment": {
              "value": "создаем бомбовую зону"
            }
          },
          {
            "comment": {
              "value": "на всякий случай проявляем аэродром"
            }
          },
          {
            "comment": {
              "value": "выдаем квест на уничтожение для команды Б"
            }
          },
          {
            "comment": {
              "value": "запускаем ротацию дальше по циклу"
            }
          },
          {
            "varSetBool": {
              "value": true,
              "var": "@ft_detect_t1_active_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_detect_t1_zone_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_detect_t1_cur_field_idx",
              "digits": 2,
              "var": "ft_detect_t1_zone_name"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_zone",
              "digits": 0,
              "var": "ft_detect_t1_zone_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "@ft_detect_t1_zone_name",
              "var": "ft_detect_t1_zone_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "ft_detect_t1_zone_name",
              "var": "ft_add_objective_t1_zone_name"
            }
          },
          {
            "missionSetBombingArea": {
              "army": 1,
              "target": "@ft_detect_t1_zone_name",
              "hp": 8000.0,
              "use_variable": true,
              "var_value": "ft_airfield_module_hp",
              "airfield": "@ft_detect_t1_airfield_name"
            }
          },
          {
            "airfieldSetVisibility": {
              "target": "@ft_detect_t1_airfield_name",
              "team": "Both"
            }
          },
          {
            "__varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_add_objective_t1_zone_name"
            }
          },
          {
            "__varAddString": {
              "value": "@ft_detect_t1_cur_field_idx",
              "digits": 2,
              "var": "ft_add_objective_t1_zone_name"
            }
          },
          {
            "__varAddString": {
              "value": "_bomb_zone",
              "digits": 0,
              "var": "ft_add_objective_t1_zone_name"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_add_objective_t1_idx"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 0.0,
              "var": "ft_add_objective_t1_idx",
              "use_variable": true,
              "var_value": "ft_detect_t1_cur_field_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_add_t2_destroy_t1_arfield_objective"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t1_rotator"
            }
          },
          {
            "wait": {
              "time": 5.0
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "аэродром или не обнаружен или активен. запускаем ротацию дальше"
          },
          "triggerEnable": {
            "target": "ft_detect_t1_rotator"
          }
        }
      },
      "ft_detect_t2_rotator": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_detect_t2_cur_field_idx",
            "value": 3,
            "comparasion_func": "less",
            "var_value_other": "ft_t2_max_airfields_count"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "индекс филда в нужном диапазоне"
            }
          },
          {
            "comment": {
              "value": "увеличиваем индекс на 1"
            }
          },
          {
            "comment": {
              "value": "получаем имя переменной где хранится имя филда"
            }
          },
          {
            "comment": {
              "value": "составляем имя бомбового таргера"
            }
          },
          {
            "comment": {
              "value": "получаем имя переменной где хранится уничтожен ли филд"
            }
          },
          {
            "comment": {
              "value": "заполняем переменную где хранится статус обнаружения аэродрома"
            }
          },
          {
            "comment": {
              "value": "составляем имя переменной статуса активен ли аэродром"
            }
          },
          {
            "comment": {
              "value": "проверяем изменение дистанции обнаружения при активных разведчиках"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_detect_t2_cur_field_idx"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_detect_t2_airfield_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_detect_t2_bomb_target_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_detect_t2_destroyed_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_detect_t2_found_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_detect_t2_active_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_detect_t2_cur_field_idx",
              "digits": 2,
              "var": "ft_detect_t2_airfield_name"
            }
          },
          {
            "varAddString": {
              "value": "_name",
              "digits": 0,
              "var": "ft_detect_t2_airfield_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_detect_t2_cur_field_idx",
              "digits": 2,
              "var": "ft_detect_t2_bomb_target_name"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_target",
              "digits": 0,
              "var": "ft_detect_t2_bomb_target_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_detect_t2_cur_field_idx",
              "digits": 2,
              "var": "ft_detect_t2_destroyed_name"
            }
          },
          {
            "varAddString": {
              "value": "_destroyed",
              "digits": 0,
              "var": "ft_detect_t2_destroyed_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_detect_t2_cur_field_idx",
              "digits": 2,
              "var": "ft_detect_t2_found_name"
            }
          },
          {
            "varAddString": {
              "value": "_found",
              "digits": 0,
              "var": "ft_detect_t2_found_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_detect_t2_cur_field_idx",
              "digits": 2,
              "var": "ft_detect_t2_active_name"
            }
          },
          {
            "varAddString": {
              "value": "_active",
              "digits": 0,
              "var": "ft_detect_t2_active_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "@ft_detect_t2_airfield_name",
              "var": "ft_detect_t2_airfield_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "@ft_detect_t2_bomb_target_name",
              "var": "ft_detect_t2_bomb_target_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t2_lpt_change_range"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "индекс филда вышел за диапазон"
          },
          "triggerEnable": {
            "target": "ft_detect_t2_rotator_restart"
          }
        }
      },
      "ft_detect_t2_rotator_restart": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [],
        "actions": [
          {
            "comment": {
              "value": "убираем мусор за собой"
            }
          },
          {
            "comment": {
              "value": "обнуляем индекс и запускаем ротацию заново"
            }
          },
          {
            "triggerDisable": [
              {
                "target": "ft_detect_t2_lpt_change_range"
              },
              {
                "target": "ft_detect_t2_is_alive_check"
              },
              {
                "target": "ft_detect_t2_enemy_players_check"
              },
              {
                "target": "ft_detect_t2_enemy_ai_check"
              },
              {
                "target": "ft_detect_t2_detect_off_check"
              },
              {
                "target": "ft_detect_t2_found_players_check"
              },
              {
                "target": "ft_detect_t2_found_ai_check"
              },
              {
                "target": "ft_detect_t2_create_bomb_area"
              }
            ]
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_detect_t2_cur_field_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t2_rotator"
            }
          }
        ],
        "else_actions": []
      },
      "ft_detect_t2_lpt_change_range": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "objectExists": {
            "target": "lpt_t2_detection_bonus",
            "type": "var"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "найдена переменная отвечающая за увеличение дистанции обнаружения"
            }
          },
          {
            "comment": {
              "value": "запускаем проверку есть ли противник рядом с аэродромом"
            }
          },
          {
            "varSetReal": {
              "value": 0.0,
              "var": "ft_t2_detection_range"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 4500.0,
              "var": "ft_t2_detection_range",
              "use_variable": true,
              "var_value": "ft_base_detection_range"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 0.0,
              "var": "ft_t2_detection_range",
              "use_variable": true,
              "var_value": "lpt_t2_detection_bonus"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t2_is_alive_check"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "нет переменной отвечающей за изменение дистанции обнаружения"
          },
          "triggerEnable": {
            "target": "ft_detect_t2_is_alive_check"
          }
        }
      },
      "ft_detect_t2_is_alive_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareBool": {
            "var_value": "@ft_detect_t2_destroyed_name",
            "value": false,
            "comparasion_func": "equal"
          }
        },
        "actions": {
          "comment": {
            "value": "аэродром живой и не уничтожен. надо проверить есть ли враг рядом с ним"
          },
          "triggerEnable": {
            "target": "ft_detect_t2_enemy_players_check"
          }
        },
        "else_actions": {
          "comment": {
            "value": "аэродром уничтожен - проверять нечего. идем дальше по циклу"
          },
          "triggerEnable": {
            "target": "ft_detect_t2_rotator"
          }
        }
      },
      "ft_detect_t2_enemy_players_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "objectExists": {
            "target": "@ft_detect_t2_bomb_target_name",
            "type": "unit"
          },
          "unitDistanceBetween": {
            "value": 4500.0,
            "math": "2D",
            "object_type": "isActive",
            "object_marking": 0,
            "target_type": "isOnline",
            "target_marking": 0,
            "check_objects": "any",
            "check_targets": "any",
            "object_var_name": "",
            "object_var_comp_op": "equal",
            "object": "@ft_detect_t2_bomb_target_name",
            "target": "t1_players_squad",
            "var": "ft_t1_detection_range",
            "object_var_value": 0,
            "compareCenters": false
          }
        },
        "actions": [
          {
            "comment": {
              "value": "над аэродромом противник, включаем мигание"
            }
          },
          {
            "comment": {
              "value": "запускаем проверку что аэродром только-что обнаружен"
            }
          },
          {
            "airfieldSetIndication": {
              "set": true,
              "target": "@ft_detect_t2_airfield_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t2_found_players_check"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "над аэродромом нет игрков - проверяем АИ"
          },
          "triggerEnable": {
            "target": "ft_detect_t2_enemy_ai_check"
          }
        }
      },
      "ft_detect_t2_enemy_ai_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "objectExists": {
            "target": "@ft_detect_t2_bomb_target_name",
            "type": "unit"
          },
          "unitWhenEnemyNear": {
            "object_type": "isAlive",
            "object_marking": 0,
            "object_var_name": "",
            "object_var_comp_op": "equal",
            "object_var_value": 0,
            "enemy_type": "isActive",
            "distance": 4500.0,
            "check_objects": "any",
            "object": "@ft_detect_t2_bomb_target_name",
            "use_variable": true,
            "distance_var": "ft_t1_detection_range"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "над аэродромом противник, включаем мигание"
            }
          },
          {
            "comment": {
              "value": "запускаем проверку что аэродром только-что обнаружен"
            }
          },
          {
            "airfieldSetIndication": {
              "set": true,
              "target": "@ft_detect_t2_airfield_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t2_found_ai_check"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "над аэродромом нет противника - выключаем мигание аэродрома"
            }
          },
          {
            "comment": {
              "value": "запускаем проверку не надо ли все-равно показать аэродром "
            }
          },
          {
            "airfieldSetIndication": {
              "set": false,
              "target": "@ft_detect_t2_airfield_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t2_detect_off_check"
            }
          }
        ]
      },
      "ft_detect_t2_found_players_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [
          {
            "varCompareBool": {
              "var_value": "@ft_detect_t2_found_name",
              "value": false,
              "comparasion_func": "equal"
            }
          },
          {
            "varCompareBool": {
              "var_value": "@ft_detect_t2_destroyed_name",
              "value": false,
              "comparasion_func": "equal"
            }
          }
        ],
        "actions": [
          {
            "comment": {
              "value": "аэродром только что обнаружен"
            }
          },
          {
            "comment": {
              "value": "помечаем его обнаруженным"
            }
          },
          {
            "comment": {
              "value": "говорим, что он виден обеим командам"
            }
          },
          {
            "comment": {
              "value": "увеличиваем количество обнаруженных аэродромов"
            }
          },
          {
            "comment": {
              "value": "проверяем есть ли квест на обнаружение аэродрома"
            }
          },
          {
            "comment": {
              "value": "так как аэродром обнаружен не надо проверять выключен ли режим разведки"
            }
          },
          {
            "comment": {
              "value": "сразу переходим к попытке создания зоны для бомбардировки"
            }
          },
          {
            "comment": {
              "value": "даем награду"
            }
          },
          {
            "varSetBool": {
              "value": true,
              "var": "@ft_detect_t2_found_name"
            }
          },
          {
            "airfieldSetVisibility": {
              "target": "@ft_detect_t2_airfield_name",
              "team": "Both"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_t2_num_airfields_detected"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_complete_t1_found_airfield"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t2_create_bomb_area"
            }
          },
          {
            "triggerEnable": {
              "target": "t1_detection_task_completed"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "это уже известный аэродром"
            }
          },
          {
            "comment": {
              "value": "продолжаем ротацию"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t2_rotator"
            }
          }
        ]
      },
      "ft_detect_t2_found_ai_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [
          {
            "varCompareBool": {
              "var_value": "@ft_detect_t2_found_name",
              "value": false,
              "comparasion_func": "equal"
            }
          },
          {
            "varCompareBool": {
              "var_value": "@ft_detect_t2_destroyed_name",
              "value": false,
              "comparasion_func": "equal"
            }
          }
        ],
        "actions": [
          {
            "comment": {
              "value": "аэродром только что обнаружен"
            }
          },
          {
            "comment": {
              "value": "помечаем его обнаруженным"
            }
          },
          {
            "comment": {
              "value": "говорим, что он виден обеим командам"
            }
          },
          {
            "comment": {
              "value": "увеличиваем количество обнаруженных аэродромов"
            }
          },
          {
            "comment": {
              "value": "проверяем есть ли квест на обнаружение аэродрома"
            }
          },
          {
            "comment": {
              "value": "так как аэродром обнаружен не надо проверять выключен ли режим разведки"
            }
          },
          {
            "comment": {
              "value": "сразу переходим к попытке создания зоны для бомбардировки"
            }
          },
          {
            "comment": {
              "value": "не даем награду, так как аэродром обнаружен АИ"
            }
          },
          {
            "varSetBool": {
              "value": true,
              "var": "@ft_detect_t2_found_name"
            }
          },
          {
            "airfieldSetVisibility": {
              "target": "@ft_detect_t2_airfield_name",
              "team": "Both"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_t2_num_airfields_detected"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_complete_t1_found_airfield"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t2_create_bomb_area"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "это уже известный аэродром"
            }
          },
          {
            "comment": {
              "value": "продолжаем ротацию"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t2_rotator"
            }
          }
        ]
      },
      "ft_detect_t2_detect_off_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareBool": {
            "var_value": "ft_is_detect_on",
            "value": false,
            "comparasion_func": "equal"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "проверили, что режим разведки выключен"
            }
          },
          {
            "comment": {
              "value": "говорим что аэродром обнаружен"
            }
          },
          {
            "comment": {
              "value": "проверяем не надо ли создать зону для бомбардировки"
            }
          },
          {
            "varSetBool": {
              "value": true,
              "var": "@ft_detect_t2_found_name"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_t2_num_airfields_detected"
            }
          },
          {
            "airfieldSetVisibility": {
              "target": "@ft_detect_t2_airfield_name",
              "team": "Both"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t2_create_bomb_area"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "режим разведки включен не делаем никаких модификаций"
            }
          },
          {
            "comment": {
              "value": "проверяем не надо ли создать зону для бомбардировки"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t2_create_bomb_area"
            }
          }
        ]
      },
      "ft_detect_t2_create_bomb_area": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [
          {
            "varCompareBool": {
              "var_value": "@ft_detect_t2_active_name",
              "value": false,
              "comparasion_func": "equal"
            }
          },
          {
            "varCompareBool": {
              "var_value": "@ft_detect_t2_found_name",
              "value": true,
              "comparasion_func": "equal"
            }
          },
          {
            "varCompareInt": {
              "var_value": "ft_detect_t2_cur_field_idx",
              "value": 0,
              "comparasion_func": "more"
            }
          },
          {
            "objectExists": {
              "target": "@ft_detect_t2_airfield_name",
              "type": "objectGroup"
            }
          },
          {
            "objectExists": {
              "target": "@ft_detect_t2_bomb_target_name",
              "type": "unit"
            }
          },
          {
            "objectExists": {
              "target": "@ft_detect_t2_zone_name",
              "type": "objectGroup"
            }
          }
        ],
        "actions": [
          {
            "comment": {
              "value": "аэродром не активен, не уничтожен и индекс в нужном диапазоне"
            }
          },
          {
            "comment": {
              "value": "говорим, что аэродром активен"
            }
          },
          {
            "comment": {
              "value": "составляем имя бомбовой зоны"
            }
          },
          {
            "comment": {
              "value": "создаем бомбовую зону"
            }
          },
          {
            "comment": {
              "value": "на всякий случай проявляем аэродром"
            }
          },
          {
            "comment": {
              "value": "выдаем квест на уничтожение для команды Б"
            }
          },
          {
            "comment": {
              "value": "запускаем ротацию дальше по циклу"
            }
          },
          {
            "varSetBool": {
              "value": true,
              "var": "@ft_detect_t2_active_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_detect_t2_zone_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_detect_t2_cur_field_idx",
              "digits": 2,
              "var": "ft_detect_t2_zone_name"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_zone",
              "digits": 0,
              "var": "ft_detect_t2_zone_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "@ft_detect_t2_zone_name",
              "var": "ft_detect_t2_zone_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "ft_detect_t2_zone_name",
              "var": "ft_add_objective_t2_zone_name"
            }
          },
          {
            "missionSetBombingArea": {
              "army": 2,
              "target": "@ft_detect_t2_zone_name",
              "hp": 8000.0,
              "use_variable": true,
              "var_value": "ft_airfield_module_hp",
              "airfield": "@ft_detect_t2_airfield_name"
            }
          },
          {
            "airfieldSetVisibility": {
              "target": "@ft_detect_t2_airfield_name",
              "team": "Both"
            }
          },
          {
            "__varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_add_objective_t2_zone_name"
            }
          },
          {
            "__varAddString": {
              "value": "@ft_detect_t2_cur_field_idx",
              "digits": 2,
              "var": "ft_add_objective_t2_zone_name"
            }
          },
          {
            "__varAddString": {
              "value": "_bomb_zone",
              "digits": 0,
              "var": "ft_add_objective_t2_zone_name"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_add_objective_t2_idx"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 0.0,
              "var": "ft_add_objective_t2_idx",
              "use_variable": true,
              "var_value": "ft_detect_t2_cur_field_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_add_t1_destroy_t2_arfield_objective"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_detect_t2_rotator"
            }
          },
          {
            "wait": {
              "time": 5.0
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "аэродром или не обнаружен или активен. запускаем ротацию дальше"
          },
          "triggerEnable": {
            "target": "ft_detect_t2_rotator"
          }
        }
      }
    },
    "ft_bombers_routine": {
      "isCategory": true,
      "is_enabled": true,
      "ft_t1_bombers_start": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [],
        "actions": [
          {
            "comment": {
              "value": "начинаем искать цель для бомберов"
            }
          },
          {
            "comment": {
              "value": "говорим, что поиск стартовал"
            }
          },
          {
            "comment": {
              "value": "обнуляем переменную харения целей"
            }
          },
          {
            "comment": {
              "value": "обнуляем индекс филда для поиска"
            }
          },
          {
            "comment": {
              "value": "вызываем цикл поиска целей"
            }
          },
          {
            "varSetBool": {
              "value": true,
              "var": "ft_t1_bombers_searching"
            }
          },
          {
            "varSetString": {
              "value": "",
              "var": "ft_t1_bombers_field_target"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_t1_bombers_field_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_t1_bombers_rotator"
            }
          }
        ],
        "else_actions": []
      },
      "ft_t1_bombers_rotator": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_t1_bombers_field_idx",
            "value": 0,
            "comparasion_func": "less",
            "var_value_other": "ft_t2_max_airfields_count"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "индекс филда в диапазоне можно работать"
            }
          },
          {
            "comment": {
              "value": "увеличиваем индекс на 1"
            }
          },
          {
            "comment": {
              "value": "составляем имя переменной для проверки обнаружения филда"
            }
          },
          {
            "comment": {
              "value": "проверяем являетсяы ли филд обнаруженным"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_t1_bombers_field_idx"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_t1_bombers_field_detect_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_t1_bombers_field_idx",
              "digits": 2,
              "var": "ft_t1_bombers_field_detect_name"
            }
          },
          {
            "varAddString": {
              "value": "_found",
              "digits": 2,
              "var": "ft_t1_bombers_field_detect_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_t1_bombers_check_field"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "индекс филда вышео за рамки - поиск не удался"
            }
          },
          {
            "comment": {
              "value": "говорим что поиск закончился"
            }
          },
          {
            "comment": {
              "value": "возвращаемся в шаблон бомберов"
            }
          },
          {
            "varSetBool": {
              "value": false,
              "var": "ft_t1_bombers_searching"
            }
          },
          {
            "triggerEnable": {
              "target": "bt_t1_check_airfield_target"
            }
          }
        ]
      },
      "ft_t1_bombers_check_field": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareBool": {
            "var_value": "@ft_t1_bombers_field_detect_name",
            "value": true,
            "comparasion_func": "equal"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "аэродром обнаружен и можно делать его целью"
            }
          },
          {
            "comment": {
              "value": ""
            }
          },
          {
            "comment": {
              "value": "говорим что поиск закончился. дальше дело шаблона бомберов"
            }
          },
          {
            "comment": {
              "value": "возвращаемся в шаблон бомберов с положительным результатом"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_t1_bombers_field_target"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_t1_bombers_field_zone"
            }
          },
          {
            "varAddString": {
              "value": "@ft_t1_bombers_field_idx",
              "digits": 2,
              "var": "ft_t1_bombers_field_target"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_target",
              "digits": 2,
              "var": "ft_t1_bombers_field_target"
            }
          },
          {
            "varAddString": {
              "value": "@ft_t1_bombers_field_idx",
              "digits": 2,
              "var": "ft_t1_bombers_field_zone"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_zone",
              "digits": 2,
              "var": "ft_t1_bombers_field_zone"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "ft_t1_bombers_field_target",
              "var": "ft_t1_bombers_field_target"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "ft_t1_bombers_field_zone",
              "var": "ft_t1_bombers_field_zone"
            }
          },
          {
            "varSetBool": {
              "value": false,
              "var": "ft_t1_bombers_searching"
            }
          },
          {
            "triggerEnable": {
              "target": "bt_t1_check_airfield_target"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "аэродром еще не обнаружен. идем дальше по циклу"
          },
          "triggerEnable": {
            "target": "ft_t1_bombers_rotator"
          }
        }
      },
      "ft_t2_bombers_start": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [],
        "actions": [
          {
            "comment": {
              "value": "начинаем искать цель для бомберов"
            }
          },
          {
            "comment": {
              "value": "говорим, что поиск стартовал"
            }
          },
          {
            "comment": {
              "value": "обнуляем переменную харения целей"
            }
          },
          {
            "comment": {
              "value": "обнуляем индекс филда для поиска"
            }
          },
          {
            "comment": {
              "value": "вызываем цикл поиска целей"
            }
          },
          {
            "varSetBool": {
              "value": true,
              "var": "ft_t2_bombers_searching"
            }
          },
          {
            "varSetString": {
              "value": "",
              "var": "ft_t2_bombers_field_target"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_t2_bombers_field_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_t2_bombers_rotator"
            }
          }
        ],
        "else_actions": []
      },
      "ft_t2_bombers_rotator": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_t2_bombers_field_idx",
            "value": 0,
            "comparasion_func": "less",
            "var_value_other": "ft_t1_max_airfields_count"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "индекс филда в диапазоне можно работать"
            }
          },
          {
            "comment": {
              "value": "увеличиваем индекс на 1"
            }
          },
          {
            "comment": {
              "value": "составляем имя переменной для проверки обнаружения филда"
            }
          },
          {
            "comment": {
              "value": "проверяем являетсяы ли филд обнаруженным"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_t2_bombers_field_idx"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_t2_bombers_field_detect_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_t2_bombers_field_idx",
              "digits": 2,
              "var": "ft_t2_bombers_field_detect_name"
            }
          },
          {
            "varAddString": {
              "value": "_found",
              "digits": 2,
              "var": "ft_t2_bombers_field_detect_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_t2_bombers_check_field"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "индекс филда вышео за рамки - поиск не удался"
            }
          },
          {
            "comment": {
              "value": "говорим что поиск закончился"
            }
          },
          {
            "comment": {
              "value": "возвращаемся в шаблон бомберов"
            }
          },
          {
            "varSetBool": {
              "value": false,
              "var": "ft_t2_bombers_searching"
            }
          },
          {
            "triggerEnable": {
              "target": "bt_t2_check_airfield_target"
            }
          }
        ]
      },
      "ft_t2_bombers_check_field": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareBool": {
            "var_value": "@ft_t2_bombers_field_detect_name",
            "value": true,
            "comparasion_func": "equal"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "аэродром обнаружен и можно делать его целью"
            }
          },
          {
            "comment": {
              "value": ""
            }
          },
          {
            "comment": {
              "value": "говорим что поиск закончился. дальше дело шаблона бомберов"
            }
          },
          {
            "comment": {
              "value": "возвращаемся в шаблон бомберов с положительным результатом"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_t2_bombers_field_target"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_t2_bombers_field_zone"
            }
          },
          {
            "varAddString": {
              "value": "@ft_t2_bombers_field_idx",
              "digits": 2,
              "var": "ft_t2_bombers_field_target"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_target",
              "digits": 2,
              "var": "ft_t2_bombers_field_target"
            }
          },
          {
            "varAddString": {
              "value": "@ft_t2_bombers_field_idx",
              "digits": 2,
              "var": "ft_t2_bombers_field_zone"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_zone",
              "digits": 2,
              "var": "ft_t2_bombers_field_zone"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "ft_t2_bombers_field_target",
              "var": "ft_t2_bombers_field_target"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "ft_t2_bombers_field_zone",
              "var": "ft_t2_bombers_field_zone"
            }
          },
          {
            "varSetBool": {
              "value": false,
              "var": "ft_t2_bombers_searching"
            }
          },
          {
            "triggerEnable": {
              "target": "bt_t2_check_airfield_target"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "аэродром еще не обнаружен. идем дальше по циклу"
          },
          "triggerEnable": {
            "target": "ft_t2_bombers_rotator"
          }
        }
      }
    },
    "ft_capture_airfield_routine": {
      "isCategory": true,
      "is_enabled": true,
      "ft_capture_t1_start": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [],
        "actions": [
          {
            "comment": {
              "value": "захватили территорию команды А"
            }
          },
          {
            "comment": {
              "value": "проверяем не надо ли убрать аэродром"
            }
          },
          {
            "comment": {
              "value": "имя захваченной зоны в переменной ft_capture_t1_frontline_name"
            }
          },
          {
            "comment": {
              "value": "начинаем поиск"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_capture_t1_airfield_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_capture_t1_rotator"
            }
          }
        ],
        "else_actions": []
      },
      "ft_capture_t1_rotator": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_capture_t1_airfield_idx",
            "value": 3,
            "comparasion_func": "less",
            "var_value_other": "ft_t1_max_airfields_count"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "индекс меньше трех проверяем"
            }
          },
          {
            "comment": {
              "value": "увеличиваем индекс на 1"
            }
          },
          {
            "comment": {
              "value": "составляем имя переменной, в которой хранится имя аирфилда"
            }
          },
          {
            "comment": {
              "value": "получаем имя аирфилда"
            }
          },
          {
            "comment": {
              "value": "получаем имя зоны филда"
            }
          },
          {
            "comment": {
              "value": "получаем имя зоны в которой находится аэродром"
            }
          },
          {
            "comment": {
              "value": "полчаем имя переменной где хранится армия зоны в которой филд"
            }
          },
          {
            "comment": {
              "value": "получаем армию"
            }
          },
          {
            "comment": {
              "value": "проверяем армии аэродрома и зоны"
            }
          },
          {
            "comment": {
              "value": ""
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_capture_t1_airfield_idx"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_capture_t1_airfield_name"
            }
          },
          {
            "varSetString": {
              "value": "",
              "var": "ft_capture_t1_own_state_name",
              "input_var": "ft_capture_t1_own_area_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_capture_t1_airfield_idx",
              "digits": 2,
              "var": "ft_capture_t1_airfield_name"
            }
          },
          {
            "varAddString": {
              "value": "_name",
              "digits": 0,
              "var": "ft_capture_t1_airfield_name"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_zone",
              "digits": 0,
              "var": "ft_capture_t1_bomb_zone_name"
            }
          },
          {
            "varAddString": {
              "value": "_state",
              "digits": 0,
              "var": "ft_capture_t1_own_state_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "@ft_capture_t1_airfield_name",
              "var": "ft_capture_t1_airfield_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "ft_capture_t1_airfield_name",
              "var": "ft_capture_t1_bomb_zone_name"
            }
          },
          {
            "getOwnArea": {
              "name": "@ft_capture_t1_bomb_zone_name",
              "template": "flt_area_",
              "out_var": "ft_capture_t1_own_area_name"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_capture_t1_own_state_idx",
              "input_var": "@ft_capture_t1_own_state_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_capture_t1_frontline_check"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "индекс вышел за диапазон. рестартим"
          },
          "triggerEnable": {
            "target": "ft_capture_t1_start"
          }
        }
      },
      "ft_capture_t1_frontline_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ANY",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_capture_t1_own_state_idx",
            "value": 2,
            "comparasion_func": "equal"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "аэродром в зоне противника надо отключить"
            }
          },
          {
            "comment": {
              "value": "убиваем зону"
            }
          },
          {
            "comment": {
              "value": "больше ничего не делаем"
            }
          },
          {
            "comment": {
              "value": "идем дальше по списку"
            }
          },
          {
            "missionBombingAreaDamage": {
              "target": "@ft_capture_t1_bomb_zone_name",
              "damageHP": 1000000.0
            }
          },
          {
            "unitPutToSleep": {
              "target": "@ft_capture_t1_airfield_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_capture_t1_rotator"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "аэродром не в искомой зоне отключать не надо"
            }
          },
          {
            "comment": {
              "value": "проверяем следующий"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_capture_t1_rotator"
            }
          }
        ]
      },
      "ft_capture_t2_start": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [],
        "actions": [
          {
            "comment": {
              "value": "захватили территорию команды А"
            }
          },
          {
            "comment": {
              "value": "проверяем не надо ли убрать аэродром"
            }
          },
          {
            "comment": {
              "value": "имя захваченной зоны в переменной ft_capture_t1_frontline_name"
            }
          },
          {
            "comment": {
              "value": "начинаем поиск"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_capture_t2_airfield_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_capture_t2_rotator"
            }
          }
        ],
        "else_actions": []
      },
      "ft_capture_t2_rotator": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_capture_t2_airfield_idx",
            "value": 3,
            "comparasion_func": "less",
            "var_value_other": "ft_t2_max_airfields_count"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "индекс меньше трех проверяем"
            }
          },
          {
            "comment": {
              "value": "увеличиваем индекс на 1"
            }
          },
          {
            "comment": {
              "value": "составляем имя переменной, в которой хранится имя аирфилда"
            }
          },
          {
            "comment": {
              "value": "получаем имя аирфилда"
            }
          },
          {
            "comment": {
              "value": "получаем имя зоны филда"
            }
          },
          {
            "comment": {
              "value": "получаем имя зоны в которой находится аэродром"
            }
          },
          {
            "comment": {
              "value": "полчаем имя переменной где хранится армия зоны в которой филд"
            }
          },
          {
            "comment": {
              "value": "получаем армию"
            }
          },
          {
            "comment": {
              "value": "проверяем армии филда и зоны"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_capture_t2_airfield_idx"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_capture_t2_airfield_name"
            }
          },
          {
            "varSetString": {
              "value": "",
              "var": "ft_capture_t2_own_state_name",
              "input_var": "ft_capture_t2_own_area_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_capture_t2_airfield_idx",
              "digits": 2,
              "var": "ft_capture_t2_airfield_name"
            }
          },
          {
            "varAddString": {
              "value": "_name",
              "digits": 0,
              "var": "ft_capture_t2_airfield_name"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_zone",
              "digits": 0,
              "var": "ft_capture_t2_bomb_zone_name"
            }
          },
          {
            "varAddString": {
              "value": "_state",
              "digits": 0,
              "var": "ft_capture_t2_own_state_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "@ft_capture_t2_airfield_name",
              "var": "ft_capture_t2_airfield_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "ft_capture_t2_airfield_name",
              "var": "ft_capture_t2_bomb_zone_name"
            }
          },
          {
            "getOwnArea": {
              "name": "@ft_capture_t2_bomb_zone_name",
              "template": "flt_area_",
              "out_var": "ft_capture_t2_own_area_name"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_capture_t2_own_state_idx",
              "input_var": "@ft_capture_t2_own_state_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_capture_t2_frontline_check"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "индекс вышел за диапазон. рестартим"
          },
          "triggerEnable": {
            "target": "ft_capture_t2_start"
          }
        }
      },
      "ft_capture_t2_frontline_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ANY",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_capture_t2_own_state_idx",
            "value": 1,
            "comparasion_func": "equal"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "аэродром в зоне противника надо отключить"
            }
          },
          {
            "comment": {
              "value": "убиваем зону"
            }
          },
          {
            "comment": {
              "value": "больше ничего не делаем"
            }
          },
          {
            "comment": {
              "value": "идем дальше по списку"
            }
          },
          {
            "missionBombingAreaDamage": {
              "target": "@ft_capture_t2_bomb_zone_name",
              "damageHP": 1000000.0
            }
          },
          {
            "unitPutToSleep": {
              "target": "@ft_capture_t2_airfield_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_capture_t2_rotator"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "аэродром не в искомой зоне отключать не надо"
            }
          },
          {
            "comment": {
              "value": "проверяем следующий"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_capture_t2_rotator"
            }
          }
        ]
      }
    },
    "sentinels": {
      "isCategory": true,
      "is_enabled": true,
      "st_init": {
        "is_enabled": true,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareBool": {
            "var_value": "st_is_launch_alowed",
            "value": true,
            "comparasion_func": "equal"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "проверили что запуск защитников не запрещен"
            }
          },
          {
            "comment": {
              "value": "делаем задержку в минуту, чтобы все успело сгенерироваться и запускаем генерацию дежурной пары"
            }
          },
          {
            "varSetInt": [
              {
                "value": 0
              },
              {
                "var": "st_t1_generate_idx"
              },
              {
                "var": "st_t2_generate_idx"
              }
            ]
          },
          {
            "wait": {
              "time": 60.0
            }
          },
          {
            "triggerEnable": [
              {
                "target": "st_t1_generate_rotator"
              },
              {
                "target": "st_t2_generate_rotator"
              }
            ]
          }
        ],
        "else_actions": []
      },
      "st_t1_generate_rotator": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "st_t1_generate_idx",
            "value": 0,
            "comparasion_func": "less",
            "var_value_other": "ft_t1_max_airfields_count"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "индекс в правильном диапазоне. пытаемся сгенерировать "
            }
          },
          {
            "comment": {
              "value": "имя дежурной пары"
            }
          },
          {
            "comment": {
              "value": "имя переменной, хранящей имя филда"
            }
          },
          {
            "comment": {
              "value": "получаем имя филда"
            }
          },
          {
            "comment": {
              "value": "получаем имя зоны филда"
            }
          },
          {
            "comment": {
              "value": "проверяем доступность юнита"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "st_t1_generate_idx"
            }
          },
          {
            "varSetString": {
              "value": "st_t1_sentinel_",
              "var": "st_t1_generate_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "st_t1_generate_field_var_name"
            }
          },
          {
            "varAddString": {
              "value": "@st_t1_generate_idx",
              "digits": 2,
              "var": "st_t1_generate_name"
            }
          },
          {
            "varAddString": {
              "value": "@st_t1_generate_idx",
              "digits": 2,
              "var": "st_t1_generate_field_var_name"
            }
          },
          {
            "varAddString": {
              "value": "_name",
              "digits": 0,
              "var": "st_t1_generate_field_var_name"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_zone",
              "digits": 0,
              "var": "st_t1_generate_target_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "@st_t1_generate_field_var_name",
              "var": "st_t1_generate_field_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "@st_t1_generate_field_var_name",
              "var": "st_t1_generate_target_name"
            }
          },
          {
            "triggerEnable": {
              "target": "st_t1_generate_check_plane"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "ротация закончилась запускаем проверку регенерации"
            }
          },
          {
            "comment": {
              "value": ""
            }
          },
          {
            "triggerEnable": {
              "target": "st_t1_regenerate"
            }
          },
          {
            "triggerEnable": {
              "target": "st_t1_landing_start"
            }
          }
        ]
      },
      "st_t1_generate_check_plane": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "unitWhenCountMatches": {
            "object_type": "isActive",
            "object_marking": 0,
            "func": "less",
            "value": 1,
            "object_var_name": "",
            "object_var_comp_op": "equal",
            "object": "@st_t1_generate_name",
            "object_var_value": 0
          }
        },
        "actions": [
          {
            "comment": {
              "value": "юнит существует и не активен"
            }
          },
          {
            "comment": {
              "value": "проверяем есть ли филд и активен ли он"
            }
          },
          {
            "triggerEnable": {
              "target": "st_t1_generate_check_field"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "юнита или нет или активен. запускаем генерацию дальше"
          },
          "triggerEnable": {
            "target": "st_t1_generate_rotator"
          }
        }
      },
      "st_t1_generate_check_field": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "objectExists": {
            "target": "@st_t1_generate_field_name",
            "type": "objectGroup"
          },
          "objGroupWhenStatus": {
            "obj_status": "isActive",
            "army": 0,
            "target": "@st_t1_generate_field_name"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "проверили что аэродром есть и активен"
            }
          },
          {
            "comment": {
              "value": "даем задачу защитникам"
            }
          },
          {
            "comment": {
              "value": "logging"
            }
          },
          {
            "comment": {
              "value": "идем дальше по ротации"
            }
          },
          {
            "spawnOnAirfield": {
              "runwayName": "@st_t1_generate_field_name",
              "objects": "@st_t1_generate_name"
            }
          },
          {
            "unitSetProperties": {
              "object_marking": 0,
              "object_var_name": "",
              "object_var_comp_op": "equal",
              "object_var_value": 0,
              "stabInfluenceEnabled": true,
              "realisticAI": false,
              "object": "@st_t1_generate_name"
            }
          },
          {
            "unitMoveTo": {
              "object_marking": 0,
              "target": "@st_t1_generate_target_name",
              "target_marking": 0,
              "waypointReachedDist": 10.0,
              "recalculatePathDist": -1.0,
              "follow_target": false,
              "teleportHeightType": "absolute",
              "useUnitHeightForTele": true,
              "shouldKeepFormation": false,
              "teleportHeightValue": 1000.0,
              "horizontalDirectionForTeleport": true,
              "object_var_name": "",
              "object_var_comp_op": "equal",
              "object_var_value": 0,
              "fastClimb": false,
              "destTimeMode": false,
              "object": "@st_t1_generate_name",
              "altRange": [2500.0,3000.0]
            }
          },
          {
            "unitAttackTarget": {
              "playerAttracted": false,
              "object": "@st_t1_generate_name",
              "target": "t1_enemy_planes_squad",
              "fireRandom": true,
              "targetTypeName": "airplane",
              "targetDistMax": 7000.0,
              "maxNumAttackersPerTarget": 1,
              "attackAltRange": [100.0,7000.0],
              "anchorArea": "@st_t1_generate_target_name",
              "targetToAnchorDist": [6000.0,7000.0],
              "resetObjectToFollow": false
            }
          },
          {
            "varSetString": {
              "value": "sentinnel ",
              "var": "log_var"
            }
          },
          {
            "varAddString": {
              "value": "@st_t1_generate_name",
              "digits": 0,
              "var": "log_var"
            }
          },
          {
            "varAddString": {
              "value": " spawned at ",
              "digits": 0,
              "var": "log_var"
            }
          },
          {
            "varAddString": {
              "value": "@st_t1_generate_field_name",
              "digits": 0,
              "var": "log_var"
            }
          },
          {
            "varAddString": {
              "value": " and will protect ",
              "digits": 0,
              "var": "log_var"
            }
          },
          {
            "varAddString": {
              "value": "@st_t1_generate_target_name",
              "digits": 0,
              "var": "log_var"
            }
          },
          {
            "systemLog": {
              "value": "@log_var",
              "logtype": "screen_and_log"
            }
          },
          {
            "triggerEnable": {
              "target": "st_t1_generate_rotator"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "идем дальше по ротации"
          },
          "triggerEnable": {
            "target": "st_t1_generate_rotator"
          }
        }
      },
      "st_t1_regenerate": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 300.0
          }
        },
        "conditions": [],
        "actions": [
          {
            "comment": {
              "value": "обнуляем индекс"
            }
          },
          {
            "comment": {
              "value": "раз в 5 минут запускаем регенерацию"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "st_t1_generate_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "st_t1_generate_rotator"
            }
          }
        ],
        "else_actions": []
      },
      "st_t1_despawn_start": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareBool": {
            "var_value": "st_is_launch_alowed",
            "value": true,
            "comparasion_func": "equal"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "проверили что запуск дежурной пары разрешен, а значит можно ее прятать"
            }
          },
          {
            "comment": {
              "value": "проверяем есть ли объект"
            }
          },
          {
            "varSetString": {
              "value": "st_t1_sentinel_",
              "var": "st_t1_despawn_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_destroy_t1_cur_field_idx",
              "digits": 2,
              "var": "st_t1_despawn_name"
            }
          },
          {
            "triggerEnable": {
              "target": "st_t1_despawn_check"
            }
          }
        ],
        "else_actions": []
      },
      "st_t1_despawn_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "unitWhenCountMatches": {
            "object_type": "isActive",
            "object_marking": 0,
            "func": "more",
            "value": 0,
            "object_var_name": "",
            "object_var_comp_op": "equal",
            "object": "@st_t1_despawn_name",
            "object_var_value": 0
          }
        },
        "actions": {
          "comment": {
            "value": "объект есть - убиваем его"
          },
          "unitDamage": {
            "power": 0.9,
            "useEffect": false,
            "countEffects": 1,
            "delay": [1.0,1.0],
            "offset": [0.0,0.0,0.0],
            "radiusOffset": [10.0,15.0],
            "target": "@st_t1_despawn_name",
            "partName": "engine1_dm",
            "useForTriggerFiltered": true
          },
          "unitMoveTo": {
            "object_marking": 0,
            "object_var_name": "",
            "object_var_comp_op": "equal",
            "object_var_value": 0,
            "target": "st_t1_retreat_point",
            "target_marking": 0,
            "waypointReachedDist": 10.0,
            "recalculatePathDist": -1.0,
            "follow_target": false,
            "teleportHeightType": "absolute",
            "useUnitHeightForTele": true,
            "shouldKeepFormation": false,
            "teleportHeightValue": 1000.0,
            "horizontalDirectionForTeleport": true,
            "fastClimb": false,
            "destTimeMode": false,
            "object": "@st_t1_despawn_name"
          }
        },
        "else_actions": []
      },
      "st_t2_generate_rotator": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "st_t2_generate_idx",
            "value": 0,
            "comparasion_func": "less",
            "var_value_other": "ft_t2_max_airfields_count"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "индекс в правильном диапазоне. пытаемся сгенерировать "
            }
          },
          {
            "comment": {
              "value": "имя дежурной пары"
            }
          },
          {
            "comment": {
              "value": "имя переменной, хранящей имя филда"
            }
          },
          {
            "comment": {
              "value": "получаем имя филда"
            }
          },
          {
            "comment": {
              "value": "получаем имя зоны филда"
            }
          },
          {
            "comment": {
              "value": "проверяем доступность юнита"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "st_t2_generate_idx"
            }
          },
          {
            "varSetString": {
              "value": "st_t2_sentinel_",
              "var": "st_t2_generate_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "st_t2_generate_field_var_name"
            }
          },
          {
            "varAddString": {
              "value": "@st_t2_generate_idx",
              "digits": 2,
              "var": "st_t2_generate_name"
            }
          },
          {
            "varAddString": {
              "value": "@st_t2_generate_idx",
              "digits": 2,
              "var": "st_t2_generate_field_var_name"
            }
          },
          {
            "varAddString": {
              "value": "_name",
              "digits": 0,
              "var": "st_t2_generate_field_var_name"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_zone",
              "digits": 0,
              "var": "st_t2_generate_target_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "@st_t2_generate_field_var_name",
              "var": "st_t2_generate_field_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "@st_t2_generate_field_var_name",
              "var": "st_t2_generate_target_name"
            }
          },
          {
            "triggerEnable": {
              "target": "st_t2_generate_check_plane"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "ротация закончилась запускаем проверку регенерации"
            }
          },
          {
            "comment": {
              "value": ""
            }
          },
          {
            "triggerEnable": {
              "target": "st_t2_regenerate"
            }
          },
          {
            "triggerEnable": {
              "target": "st_t2_landing_start"
            }
          }
        ]
      },
      "st_t2_generate_check_plane": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "unitWhenCountMatches": {
            "object_type": "isActive",
            "object_marking": 0,
            "func": "less",
            "value": 1,
            "object_var_name": "",
            "object_var_comp_op": "equal",
            "object": "@st_t2_generate_name",
            "object_var_value": 0
          }
        },
        "actions": [
          {
            "comment": {
              "value": "юнит существует и не активен"
            }
          },
          {
            "comment": {
              "value": "проверяем есть ли филд и активен ли он"
            }
          },
          {
            "triggerEnable": {
              "target": "st_t2_generate_check_field"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "юнита или нет или активен. запускаем генерацию дальше"
          },
          "triggerEnable": {
            "target": "st_t2_generate_rotator"
          }
        }
      },
      "st_t2_generate_check_field": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "objectExists": {
            "target": "@st_t2_generate_field_name",
            "type": "objectGroup"
          },
          "objGroupWhenStatus": {
            "obj_status": "isActive",
            "army": 0,
            "target": "@st_t2_generate_field_name"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "проверили что аэродром есть и активен"
            }
          },
          {
            "comment": {
              "value": "даем задачу защитникам"
            }
          },
          {
            "comment": {
              "value": "logging"
            }
          },
          {
            "comment": {
              "value": "идем дальше по ротации"
            }
          },
          {
            "spawnOnAirfield": {
              "runwayName": "@st_t2_generate_field_name",
              "objects": "@st_t2_generate_name"
            }
          },
          {
            "unitSetProperties": {
              "object_marking": 0,
              "object_var_name": "",
              "object_var_comp_op": "equal",
              "object_var_value": 0,
              "stabInfluenceEnabled": true,
              "realisticAI": false,
              "object": "@st_t2_generate_name"
            }
          },
          {
            "unitMoveTo": {
              "object_marking": 0,
              "target": "@st_t2_generate_target_name",
              "target_marking": 0,
              "waypointReachedDist": 10.0,
              "recalculatePathDist": -1.0,
              "follow_target": false,
              "teleportHeightType": "absolute",
              "useUnitHeightForTele": true,
              "shouldKeepFormation": false,
              "teleportHeightValue": 1000.0,
              "horizontalDirectionForTeleport": true,
              "object_var_name": "",
              "object_var_comp_op": "equal",
              "object_var_value": 0,
              "fastClimb": false,
              "destTimeMode": false,
              "object": "@st_t2_generate_name",
              "altRange": [2500.0,3000.0]
            }
          },
          {
            "unitAttackTarget": {
              "playerAttracted": false,
              "object": "@st_t2_generate_name",
              "target": "t2_enemy_planes_squad",
              "fireRandom": true,
              "targetTypeName": "airplane",
              "targetDistMax": 7000.0,
              "maxNumAttackersPerTarget": 1,
              "attackAltRange": [100.0,7000.0],
              "anchorArea": "@st_t2_generate_target_name",
              "targetToAnchorDist": [6000.0,7000.0],
              "resetObjectToFollow": false
            }
          },
          {
            "varSetString": {
              "value": "sentinnel ",
              "var": "log_var"
            }
          },
          {
            "varAddString": {
              "value": "@st_t2_generate_name",
              "digits": 0,
              "var": "log_var"
            }
          },
          {
            "varAddString": {
              "value": " spawned at ",
              "digits": 0,
              "var": "log_var"
            }
          },
          {
            "varAddString": {
              "value": "@st_t2_generate_field_name",
              "digits": 0,
              "var": "log_var"
            }
          },
          {
            "varAddString": {
              "value": " and will protect ",
              "digits": 0,
              "var": "log_var"
            }
          },
          {
            "varAddString": {
              "value": "@st_t2_generate_target_name",
              "digits": 0,
              "var": "log_var"
            }
          },
          {
            "systemLog": {
              "value": "@log_var",
              "logtype": "screen_and_log"
            }
          },
          {
            "triggerEnable": {
              "target": "st_t2_generate_rotator"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "идем дальше по ротации"
          },
          "triggerEnable": {
            "target": "st_t2_generate_rotator"
          }
        }
      },
      "st_t2_regenerate": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 300.0
          }
        },
        "conditions": [],
        "actions": [
          {
            "comment": {
              "value": "обнуляем индекс"
            }
          },
          {
            "comment": {
              "value": "раз в 5 минут запускаем регенерацию"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "st_t2_generate_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "st_t2_generate_rotator"
            }
          }
        ],
        "else_actions": []
      },
      "st_t2_despawn_start": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareBool": {
            "var_value": "st_is_launch_alowed",
            "value": true,
            "comparasion_func": "equal"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "проверили что запуск дежурной пары разрешен, а значит можно ее прятать"
            }
          },
          {
            "comment": {
              "value": "проверяем есть ли объект"
            }
          },
          {
            "varSetString": {
              "value": "st_t2_sentinel_",
              "var": "st_t2_despawn_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_destroy_t2_cur_field_idx",
              "digits": 2,
              "var": "st_t2_despawn_name"
            }
          },
          {
            "triggerEnable": {
              "target": "st_t2_despawn_check"
            }
          }
        ],
        "else_actions": []
      },
      "st_t2_despawn_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "unitWhenCountMatches": {
            "object_type": "isActive",
            "object_marking": 0,
            "func": "more",
            "value": 0,
            "object_var_name": "",
            "object_var_comp_op": "equal",
            "object": "@st_t2_despawn_name",
            "object_var_value": 0
          }
        },
        "actions": {
          "comment": {
            "value": "объект есть - убиваем его"
          },
          "unitDamage": {
            "power": 0.9,
            "useEffect": false,
            "countEffects": 1,
            "delay": [1.0,1.0],
            "offset": [0.0,0.0,0.0],
            "radiusOffset": [10.0,15.0],
            "target": "@st_t2_despawn_name",
            "partName": "engine1_dm",
            "useForTriggerFiltered": true
          },
          "unitMoveTo": {
            "object_marking": 0,
            "object_var_name": "",
            "object_var_comp_op": "equal",
            "object_var_value": 0,
            "target": "st_t2_retreat_point",
            "target_marking": 0,
            "waypointReachedDist": 10.0,
            "recalculatePathDist": -1.0,
            "follow_target": false,
            "teleportHeightType": "absolute",
            "useUnitHeightForTele": true,
            "shouldKeepFormation": false,
            "teleportHeightValue": 1000.0,
            "horizontalDirectionForTeleport": true,
            "fastClimb": false,
            "destTimeMode": false,
            "object": "@st_t2_despawn_name"
          }
        },
        "else_actions": []
      },
      "sentinells_landing": {
        "isCategory": true,
        "is_enabled": true,
        "st_t1_landing_start": {
          "is_enabled": false,
          "comments": "",
          "props": {
            "actionsType": "PERFORM_ONE_BY_ONE",
            "conditionsType": "ALL",
            "enableAfterComplete": false
          },
          "events": {
            "periodicEvent": {
              "time": 1.0
            }
          },
          "conditions": {
            "varCompareBool": {
              "var_value": "st_is_landing_alowed",
              "value": true,
              "comparasion_func": "equal"
            }
          },
          "actions": {
            "comment": {
              "value": "разрешены посадки на аэродром"
            },
            "triggerEnable": [
              {
                "target": "st_t1_fuel_rotator"
              },
              {
                "target": "st_t1_rearm_rotator"
              }
            ]
          },
          "else_actions": []
        },
        "st_t2_landing_start": {
          "is_enabled": false,
          "comments": "",
          "props": {
            "actionsType": "PERFORM_ONE_BY_ONE",
            "conditionsType": "ALL",
            "enableAfterComplete": false
          },
          "events": {
            "periodicEvent": {
              "time": 1.0
            }
          },
          "conditions": {
            "varCompareBool": {
              "var_value": "st_is_landing_alowed",
              "value": true,
              "comparasion_func": "equal"
            }
          },
          "actions": {
            "comment": {
              "value": "разрешены посадки на аэродром"
            },
            "triggerEnable": [
              {
                "target": "st_t2_fuel_rotator"
              },
              {
                "target": "st_t2_rearm_rotator"
              }
            ]
          },
          "else_actions": []
        },
        "st_t1_fuel_rotator": {
          "is_enabled": false,
          "comments": "",
          "props": {
            "actionsType": "PERFORM_ONE_BY_ONE",
            "conditionsType": "ALL",
            "enableAfterComplete": false
          },
          "events": {
            "periodicEvent": {
              "time": 1.0
            }
          },
          "conditions": {
            "varCompareInt": {
              "var_value": "st_fuel_t1_sentinell_idx",
              "value": 0,
              "comparasion_func": "less",
              "var_value_other": "ft_t1_max_airfields_count"
            }
          },
          "actions": [
            {
              "comment": {
                "value": "проверили что сентилен в диапазоне. создаем имена"
              }
            },
            {
              "comment": {
                "value": ""
              }
            },
            {
              "comment": {
                "value": "получаем имя филда"
              }
            },
            {
              "comment": {
                "value": "проверяем уровень топлива"
              }
            },
            {
              "varModify": {
                "operator": "add",
                "value": 1.0,
                "var": "st_fuel_t1_sentinell_idx"
              }
            },
            {
              "varSetString": {
                "value": "st_t1_sentinel_",
                "var": "st_fuel_t1_sentinell_name"
              }
            },
            {
              "varSetString": {
                "value": "ft_t1_airfield_",
                "var": "st_fuel_t1_airfield_var_name"
              }
            },
            {
              "varAddString": {
                "value": "@st_fuel_t1_sentinell_idx",
                "digits": 2,
                "var": "st_fuel_t1_sentinell_name"
              }
            },
            {
              "varAddString": {
                "value": "@st_fuel_t1_sentinell_idx",
                "digits": 2,
                "var": "st_fuel_t1_airfield_var_name"
              }
            },
            {
              "varAddString": {
                "value": "_name",
                "digits": 0,
                "var": "st_fuel_t1_airfield_var_name"
              }
            },
            {
              "varGetStringValue": {
                "from_var_name": "@st_fuel_t1_airfield_var_name",
                "var": "st_fuel_t1_airfield_name"
              }
            },
            {
              "triggerEnable": {
                "target": "st_t1_fuel_check"
              }
            }
          ],
          "else_actions": {
            "comment": {
              "value": "перезхапускаем ротацию"
            },
            "triggerEnable": {
              "target": "st_t1_fuel_rotation_restart"
            }
          }
        },
        "st_t2_fuel_rotator": {
          "is_enabled": false,
          "comments": "",
          "props": {
            "actionsType": "PERFORM_ONE_BY_ONE",
            "conditionsType": "ALL",
            "enableAfterComplete": false
          },
          "events": {
            "periodicEvent": {
              "time": 1.0
            }
          },
          "conditions": {
            "varCompareInt": {
              "var_value": "st_fuel_t2_sentinell_idx",
              "value": 0,
              "comparasion_func": "less",
              "var_value_other": "ft_t2_max_airfields_count"
            }
          },
          "actions": [
            {
              "comment": {
                "value": "проверили что сентилен в диапазоне. создаем имена"
              }
            },
            {
              "comment": {
                "value": ""
              }
            },
            {
              "comment": {
                "value": "получаем имя филда"
              }
            },
            {
              "comment": {
                "value": "проверяем уровень топлива"
              }
            },
            {
              "varModify": {
                "operator": "add",
                "value": 1.0,
                "var": "st_fuel_t2_sentinell_idx"
              }
            },
            {
              "varSetString": {
                "value": "st_t2_sentinel_",
                "var": "st_fuel_t2_sentinell_name"
              }
            },
            {
              "varSetString": {
                "value": "ft_t2_airfield_",
                "var": "st_fuel_t2_airfield_var_name"
              }
            },
            {
              "varAddString": {
                "value": "@st_fuel_t2_sentinell_idx",
                "digits": 2,
                "var": "st_fuel_t2_sentinell_name"
              }
            },
            {
              "varAddString": {
                "value": "@st_fuel_t2_sentinell_idx",
                "digits": 2,
                "var": "st_fuel_t2_airfield_var_name"
              }
            },
            {
              "varAddString": {
                "value": "_name",
                "digits": 0,
                "var": "st_fuel_t2_airfield_var_name"
              }
            },
            {
              "varGetStringValue": {
                "from_var_name": "@st_fuel_t2_airfield_var_name",
                "var": "st_fuel_t2_airfield_name"
              }
            },
            {
              "triggerEnable": {
                "target": "st_t2_fuel_check"
              }
            }
          ],
          "else_actions": {
            "comment": {
              "value": "перезхапускаем ротацию"
            },
            "triggerEnable": {
              "target": "st_t2_fuel_rotation_restart"
            }
          }
        },
        "st_t1_fuel_check": {
          "is_enabled": false,
          "comments": "",
          "props": {
            "actionsType": "PERFORM_ONE_BY_ONE",
            "conditionsType": "ANY",
            "enableAfterComplete": false
          },
          "events": {
            "periodicEvent": {
              "time": 1.0
            }
          },
          "conditions": [
            {
              "unitFuelLess": {
                "object_type": "isActive",
                "fuelRelMin": 0.2,
                "object": "@st_fuel_t1_sentinell_name"
              }
            },
            {
              "unitWhenStatus": {
                "object_type": "noAmmo",
                "check_objects": "any",
                "object_marking": 0,
                "target_type": "isAlive",
                "check_period": 1.0,
                "object_var_name": "",
                "object_var_comp_op": "equal",
                "object_var_value": 0,
                "object": "@st_fuel_t1_sentinell_name"
              }
            },
            {
              "unitWhenStatus": {
                "object_type": "damaged",
                "check_objects": "any",
                "object_marking": 0,
                "target_type": "isAlive",
                "check_period": 1.0,
                "object_var_name": "",
                "object_var_comp_op": "equal",
                "object_var_value": 0,
                "object": "@st_fuel_t1_sentinell_name"
              }
            }
          ],
          "actions": [
            {
              "comment": {
                "value": "осталось мало топлива или патронов или подбит"
              }
            },
            {
              "comment": {
                "value": "маркируем"
              }
            },
            {
              "comment": {
                "value": ""
              }
            },
            {
              "unitLandOnAirfield": {
                "onWater": false,
                "rearmOnAirfield ": true,
                "disappearAfterLanding": false,
                "runwayName": "@st_fuel_t1_airfield_name",
                "objects": "@st_fuel_t1_sentinell_name"
              }
            },
            {
              "unitSetVar": {
                "object_var_name": "landing_progress",
                "object": "@st_fuel_t1_sentinell_name",
                "object_var_value": 1
              }
            },
            {
              "triggerEnable": {
                "target": "st_t1_fuel_rotator"
              }
            }
          ],
          "else_actions": {
            "comment": {
              "value": "топлива много, идем дальше по списку"
            },
            "triggerEnable": {
              "target": "st_t1_fuel_rotator"
            }
          }
        },
        "st_t2_fuel_check": {
          "is_enabled": false,
          "comments": "",
          "props": {
            "actionsType": "PERFORM_ONE_BY_ONE",
            "conditionsType": "ANY",
            "enableAfterComplete": false
          },
          "events": {
            "periodicEvent": {
              "time": 1.0
            }
          },
          "conditions": [
            {
              "unitFuelLess": {
                "object_type": "isActive",
                "fuelRelMin": 0.2,
                "object": "@st_fuel_t2_sentinell_name"
              }
            },
            {
              "unitWhenStatus": {
                "object_type": "noAmmo",
                "check_objects": "any",
                "object_marking": 0,
                "target_type": "isAlive",
                "check_period": 1.0,
                "object_var_name": "",
                "object_var_comp_op": "equal",
                "object_var_value": 0,
                "object": "@st_fuel_t2_sentinell_name"
              }
            },
            {
              "unitWhenStatus": {
                "object_type": "damaged",
                "check_objects": "any",
                "object_marking": 0,
                "target_type": "isAlive",
                "check_period": 1.0,
                "object_var_name": "",
                "object_var_comp_op": "equal",
                "object_var_value": 0,
                "object": "@st_fuel_t2_sentinell_name"
              }
            }
          ],
          "actions": [
            {
              "comment": {
                "value": "осталось мало топлива или патронов или подбит"
              }
            },
            {
              "comment": {
                "value": "маркируем"
              }
            },
            {
              "comment": {
                "value": ""
              }
            },
            {
              "unitLandOnAirfield": {
                "onWater": false,
                "rearmOnAirfield ": true,
                "disappearAfterLanding": false,
                "runwayName": "@st_fuel_t2_airfield_name",
                "objects": "@st_fuel_t2_sentinell_name"
              }
            },
            {
              "unitSetVar": {
                "object_var_name": "landing_progress",
                "object": "@st_fuel_t2_sentinell_name",
                "object_var_value": 1
              }
            },
            {
              "triggerEnable": {
                "target": "st_t2_fuel_rotator"
              }
            }
          ],
          "else_actions": {
            "comment": {
              "value": "топлива много, идем дальше по списку"
            },
            "triggerEnable": {
              "target": "st_t2_fuel_rotator"
            }
          }
        },
        "st_t1_fuel_rotation_restart": {
          "is_enabled": false,
          "comments": "",
          "props": {
            "actionsType": "PERFORM_ONE_BY_ONE",
            "conditionsType": "ALL",
            "enableAfterComplete": false
          },
          "events": {
            "periodicEvent": {
              "time": 60.0
            }
          },
          "conditions": [],
          "actions": {
            "varSetInt": {
              "value": 0,
              "var": "st_fuel_t1_sentinell_idx"
            },
            "triggerEnable": {
              "target": "st_t1_fuel_rotator"
            }
          },
          "else_actions": []
        },
        "st_t2_fuel_rotation_restart": {
          "is_enabled": false,
          "comments": "",
          "props": {
            "actionsType": "PERFORM_ONE_BY_ONE",
            "conditionsType": "ALL",
            "enableAfterComplete": false
          },
          "events": {
            "periodicEvent": {
              "time": 60.0
            }
          },
          "conditions": [],
          "actions": {
            "varSetInt": {
              "value": 0,
              "var": "st_fuel_t2_sentinell_idx"
            },
            "triggerEnable": {
              "target": "st_t2_fuel_rotator"
            }
          },
          "else_actions": []
        },
        "st_t1_rearm_rotator": {
          "is_enabled": false,
          "comments": "",
          "props": {
            "actionsType": "PERFORM_ONE_BY_ONE",
            "conditionsType": "ALL",
            "enableAfterComplete": false
          },
          "events": {
            "periodicEvent": {
              "time": 1.0
            }
          },
          "conditions": {
            "varCompareInt": {
              "var_value": "st_rearm_t1_sentinell_idx",
              "value": 0,
              "comparasion_func": "less",
              "var_value_other": "ft_t1_max_airfields_count"
            }
          },
          "actions": [
            {
              "comment": {
                "value": "проверили что сентилен в диапазоне. создаем имена"
              }
            },
            {
              "comment": {
                "value": ""
              }
            },
            {
              "comment": {
                "value": "получаем имя филда"
              }
            },
            {
              "comment": {
                "value": "создаем имя таргета"
              }
            },
            {
              "comment": {
                "value": "проверяем уровень топлива"
              }
            },
            {
              "varModify": {
                "operator": "add",
                "value": 1.0,
                "var": "st_rearm_t1_sentinell_idx"
              }
            },
            {
              "varSetString": {
                "value": "st_t1_sentinel_",
                "var": "st_rearm_t1_sentinell_name"
              }
            },
            {
              "varSetString": {
                "value": "ft_t1_airfield_",
                "var": "st_rearm_t1_airfield_var_name"
              }
            },
            {
              "varAddString": {
                "value": "@st_rearm_t1_sentinell_idx",
                "digits": 2,
                "var": "st_rearm_t1_sentinell_name"
              }
            },
            {
              "varAddString": {
                "value": "@st_rearm_t1_sentinell_idx",
                "digits": 2,
                "var": "st_rearm_t1_airfield_var_name"
              }
            },
            {
              "varAddString": {
                "value": "_name",
                "digits": 0,
                "var": "st_rearm_t1_airfield_var_name"
              }
            },
            {
              "varAddString": {
                "value": "_target",
                "digits": 0,
                "var": "st_rearm_t1_airfield_target_name"
              }
            },
            {
              "varGetStringValue": {
                "from_var_name": "@st_rearm_t1_airfield_var_name",
                "var": "st_rearm_t1_airfield_target_name"
              }
            },
            {
              "varGetStringValue": {
                "from_var_name": "st_rearm_t1_airfield_var_name",
                "var": "st_rearm_t1_airfield_name"
              }
            },
            {
              "triggerEnable": {
                "target": "st_t1_rearm_check"
              }
            }
          ],
          "else_actions": {
            "comment": {
              "value": "перезхапускаем ротацию"
            },
            "triggerEnable": {
              "target": "st_t1_rearm_rotation_restart"
            }
          }
        },
        "st_t2_rearm_rotator": {
          "is_enabled": false,
          "comments": "",
          "props": {
            "actionsType": "PERFORM_ONE_BY_ONE",
            "conditionsType": "ALL",
            "enableAfterComplete": false
          },
          "events": {
            "periodicEvent": {
              "time": 1.0
            }
          },
          "conditions": {
            "varCompareInt": {
              "var_value": "st_rearm_t2_sentinell_idx",
              "value": 0,
              "comparasion_func": "less",
              "var_value_other": "ft_t2_max_airfields_count"
            }
          },
          "actions": [
            {
              "comment": {
                "value": "проверили что сентилен в диапазоне. создаем имена"
              }
            },
            {
              "comment": {
                "value": ""
              }
            },
            {
              "comment": {
                "value": "получаем имя филда"
              }
            },
            {
              "comment": {
                "value": "создаем имя таргета"
              }
            },
            {
              "comment": {
                "value": "проверяем уровень топлива"
              }
            },
            {
              "varModify": {
                "operator": "add",
                "value": 1.0,
                "var": "st_rearm_t2_sentinell_idx"
              }
            },
            {
              "varSetString": {
                "value": "st_t2_sentinel_",
                "var": "st_rearm_t2_sentinell_name"
              }
            },
            {
              "varSetString": {
                "value": "ft_t2_airfield_",
                "var": "st_rearm_t2_airfield_var_name"
              }
            },
            {
              "varAddString": {
                "value": "@st_rearm_t2_sentinell_idx",
                "digits": 2,
                "var": "st_rearm_t2_sentinell_name"
              }
            },
            {
              "varAddString": {
                "value": "@st_rearm_t2_sentinell_idx",
                "digits": 2,
                "var": "st_rearm_t2_airfield_var_name"
              }
            },
            {
              "varAddString": {
                "value": "_name",
                "digits": 0,
                "var": "st_rearm_t2_airfield_var_name"
              }
            },
            {
              "varAddString": {
                "value": "_target",
                "digits": 0,
                "var": "st_rearm_t2_airfield_target_name"
              }
            },
            {
              "varGetStringValue": {
                "from_var_name": "st_rearm_t2_airfield_var_name",
                "var": "st_rearm_t2_airfield_name"
              }
            },
            {
              "varGetStringValue": {
                "from_var_name": "st_rearm_t2_airfield_var_name",
                "var": "st_rearm_t2_airfield_name"
              }
            },
            {
              "triggerEnable": {
                "target": "st_t2_rearm_check"
              }
            }
          ],
          "else_actions": {
            "comment": {
              "value": "перезхапускаем ротацию"
            },
            "triggerEnable": {
              "target": "st_t1_rearm_rotation_restart"
            }
          }
        },
        "st_t1_rearm_check": {
          "is_enabled": false,
          "comments": "",
          "props": {
            "actionsType": "PERFORM_ONE_BY_ONE",
            "conditionsType": "ALL",
            "enableAfterComplete": false
          },
          "events": {
            "periodicEvent": {
              "time": 1.0
            }
          },
          "conditions": {
            "unitWhenOnLZ": {
              "object_type": "isUnitVar",
              "object_marking": 0,
              "check_objects": "any",
              "afterRepaired": true,
              "object_var_name": "landing_progress",
              "object_var_comp_op": "equal",
              "object_var_value": 1,
              "object": "@st_rearm_t1_sentinell_name",
              "target": "@st_rearm_t1_airfield_name"
            }
          },
          "actions": [
            {
              "unitMoveTo": {
                "object_marking": 0,
                "target": "@st_rearm_t1_airfield_target_name",
                "target_marking": 0,
                "waypointReachedDist": 10.0,
                "recalculatePathDist": -1.0,
                "follow_target": false,
                "teleportHeightType": "absolute",
                "useUnitHeightForTele": true,
                "shouldKeepFormation": false,
                "teleportHeightValue": 1000.0,
                "horizontalDirectionForTeleport": true,
                "object_var_name": "",
                "object_var_comp_op": "equal",
                "object_var_value": 0,
                "fastClimb": false,
                "destTimeMode": false,
                "object": "@st_rearm_t1_sentinell_name",
                "altRange": [2500.0,3000.0]
              }
            },
            {
              "unitAttackTarget": {
                "playerAttracted": false,
                "object": "@st_rearm_t1_sentinell_name",
                "target": "t2_enemy_planes_squad",
                "fireRandom": true,
                "targetTypeName": "airplane",
                "targetDistMax": 7000.0,
                "maxNumAttackersPerTarget": 1,
                "attackAltRange": [100.0,7000.0],
                "anchorTarget": "@st_t2_generate_target_name",
                "targetToAnchorDist": [6000.0,7000.0],
                "resetObjectToFollow": false
              }
            },
            {
              "comment": {
                "value": "маркируем"
              }
            },
            {
              "comment": {
                "value": ""
              }
            },
            {
              "unitSetVar": {
                "object_var_name": "landing_progress",
                "object": "@st_fuel_t1_sentinell_name",
                "object_var_value": 2
              }
            },
            {
              "triggerEnable": {
                "target": "st_t1_rearm_rotator"
              }
            }
          ],
          "else_actions": {
            "triggerEnable": {
              "target": "st_t1_rearm_rotator"
            }
          }
        },
        "st_t2_rearm_check": {
          "is_enabled": false,
          "comments": "",
          "props": {
            "actionsType": "PERFORM_ONE_BY_ONE",
            "conditionsType": "ALL",
            "enableAfterComplete": false
          },
          "events": {
            "periodicEvent": {
              "time": 1.0
            }
          },
          "conditions": {
            "unitWhenOnLZ": {
              "object_type": "isUnitVar",
              "object_marking": 0,
              "check_objects": "any",
              "afterRepaired": true,
              "object_var_name": "landing_progress",
              "object_var_comp_op": "equal",
              "object_var_value": 1,
              "object": "@st_rearm_t2_sentinell_name",
              "target": "@st_rearm_t2_airfield_name"
            }
          },
          "actions": [
            {
              "unitMoveTo": {
                "object_marking": 0,
                "target": "@st_rearm_t2_airfield_target_name",
                "target_marking": 0,
                "waypointReachedDist": 10.0,
                "recalculatePathDist": -1.0,
                "follow_target": false,
                "teleportHeightType": "absolute",
                "useUnitHeightForTele": true,
                "shouldKeepFormation": false,
                "teleportHeightValue": 1000.0,
                "horizontalDirectionForTeleport": true,
                "object_var_name": "",
                "object_var_comp_op": "equal",
                "object_var_value": 0,
                "fastClimb": false,
                "destTimeMode": false,
                "object": "@st_rearm_t2_sentinell_name",
                "altRange": [2500.0,3000.0]
              }
            },
            {
              "unitAttackTarget": {
                "playerAttracted": false,
                "object": "@st_rearm_t2_sentinell_name",
                "target": "t1_enemy_planes_squad",
                "fireRandom": true,
                "targetTypeName": "airplane",
                "targetDistMax": 7000.0,
                "maxNumAttackersPerTarget": 1,
                "attackAltRange": [100.0,7000.0],
                "anchorTarget": "@st_t2_generate_target_name",
                "targetToAnchorDist": [6000.0,7000.0],
                "resetObjectToFollow": false
              }
            },
            {
              "comment": {
                "value": "маркируем"
              }
            },
            {
              "comment": {
                "value": ""
              }
            },
            {
              "unitSetVar": {
                "object_var_name": "landing_progress",
                "object": "@st_fuel_t2_sentinell_name",
                "object_var_value": 2
              }
            },
            {
              "triggerEnable": {
                "target": "st_t2_rearm_rotator"
              }
            }
          ],
          "else_actions": {
            "triggerEnable": {
              "target": "st_t2_rearm_rotator"
            }
          }
        },
        "st_t1_rearm_rotation_restart": {
          "is_enabled": false,
          "comments": "",
          "props": {
            "actionsType": "PERFORM_ONE_BY_ONE",
            "conditionsType": "ALL",
            "enableAfterComplete": false
          },
          "events": {
            "periodicEvent": {
              "time": 1.0
            }
          },
          "conditions": [],
          "actions": {
            "varSetInt": {
              "value": 0,
              "var": "st_rearm_t1_sentinell_idx"
            },
            "triggerEnable": {
              "target": "st_t1_rearm_rotator"
            }
          },
          "else_actions": []
        },
        "st_t2_rearm_rotation_restart": {
          "is_enabled": false,
          "comments": "",
          "props": {
            "actionsType": "PERFORM_ONE_BY_ONE",
            "conditionsType": "ALL",
            "enableAfterComplete": false
          },
          "events": {
            "periodicEvent": {
              "time": 1.0
            }
          },
          "conditions": [],
          "actions": {
            "varSetInt": {
              "value": 0,
              "var": "st_rearm_t2_sentinell_idx"
            },
            "triggerEnable": {
              "target": "st_t2_rearm_rotator"
            }
          },
          "else_actions": []
        }
      }
    },
    "ft_damage_airfield_routine": {
      "isCategory": true,
      "is_enabled": true,
      "ft_damage_t1_rotator": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_damage_t1_cur_field_idx",
            "value": 3,
            "comparasion_func": "less",
            "var_value_other": "ft_t1_max_airfields_count"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "индекс филда в нужном диапазоне"
            }
          },
          {
            "comment": {
              "value": "увеличиваем индекс на 1"
            }
          },
          {
            "comment": {
              "value": "получаем имя переменной где хранится имя филда"
            }
          },
          {
            "comment": {
              "value": "создаем имя локализации"
            }
          },
          {
            "comment": {
              "value": "создаем имя переменной для хранения имени зоны"
            }
          },
          {
            "comment": {
              "value": "проверяем аэродром"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_damage_t1_cur_field_idx"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_damage_t1_airfield_var_name"
            }
          },
          {
            "varSetString": {
              "value": "missions/airfield_spawn",
              "var": "ft_damage_t1_loc_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t1_airfield_",
              "var": "ft_damage_t1_zone_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_damage_t1_cur_field_idx",
              "digits": 2,
              "var": "ft_damage_t1_airfield_var_name"
            }
          },
          {
            "varAddString": {
              "value": "_name",
              "digits": 0,
              "var": "ft_damage_t1_airfield_var_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_damage_t1_cur_field_idx",
              "digits": 0,
              "var": "ft_damage_t1_loc_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_damage_t1_cur_field_idx",
              "digits": 2,
              "var": "ft_damage_t1_zone_name"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_zone",
              "digits": 0,
              "var": "ft_damage_t1_zone_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "@ft_damage_t1_airfield_var_name",
              "var": "ft_damage_t1_airfield_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t1_check_airfield"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "индекс филда вышел за диапазон"
          },
          "triggerEnable": {
            "target": "ft_damage_t1_rotator_restart"
          }
        }
      },
      "ft_damage_t1_rotator_restart": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [],
        "actions": [
          {
            "comment": {
              "value": "убираем мусор за собой"
            }
          },
          {
            "comment": {
              "value": "обнуляем индекс и запускаем ротацию заново"
            }
          },
          {
            "triggerDisable": {
              "target": "ft_damage_t1_check_airfield"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_damage_t1_cur_field_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t1_rotator"
            }
          }
        ],
        "else_actions": []
      },
      "ft_damage_t1_check_airfield": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "objectExists": {
            "target": "@ft_damage_t1_airfield_name",
            "type": "objectGroup"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "аэродром существует"
            }
          },
          {
            "comment": {
              "value": "проверяем его взлетную полосу"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t1_spawn_check"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "аэродром не существует"
          },
          "triggerEnable": {
            "target": "ft_damage_t1_rotator"
          }
        }
      },
      "ft_damage_t1_spawn_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "airfieldIsModuleHP": {
            "object": "@ft_damage_t1_airfield_name",
            "hp_check_mode": "equal",
            "module": "airfield",
            "hp_percent": 0.0
          }
        },
        "actions": [
          {
            "airfieldGetModuleHP": {
              "object": "@ft_damage_t1_airfield_name",
              "module": "airfield",
              "var": "ft_damage_t1_airfield_cur_hp"
            }
          },
          {
            "comment": {
              "value": "взлетка уничтожена, запрещаем спавн"
            }
          },
          {
            "comment": {
              "value": "проверяем склады ГСМ"
            }
          },
          {
            "missionMarkAsRespawnPoint": {
              "loc_name": "@ft_damage_t1_loc_name",
              "spawnEffect": false,
              "isStrictSpawn": false,
              "isAirfield": true,
              "isUnit": false,
              "radius": -1.0,
              "useExisting": true,
              "canSpawnOnNeutral": false,
              "removeAreas": false,
              "showOnMap": true,
              "isIndividual": false,
              "onlyOnePlayerPerSpawnPoint": false,
              "resetStrictSpawnIndex": false,
              "replaceAreas": true,
              "forceCreate": false,
              "ignoreTeamsOnReuse": false,
              "target": "@ft_damage_t1_airfield_name",
              "team": "A",
              "separate_fuel_time": true,
              "modular_airfield": true,
              "tags": {
                "none_can_spawn": true,
                "tank": false,
                "artillery": false,
                "aaa": false,
                "ship": false,
                "boat": false
              }
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t1_storage_check"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "взлетка жива. восстанавливаем спавн"
            }
          },
          {
            "comment": {
              "value": "проверяем склады ГСМ"
            }
          },
          {
            "missionMarkAsRespawnPoint": {
              "loc_name": "@ft_damage_t1_loc_name",
              "spawnEffect": false,
              "isStrictSpawn": false,
              "isAirfield": true,
              "isUnit": false,
              "radius": -1.0,
              "useExisting": true,
              "canSpawnOnNeutral": false,
              "removeAreas": false,
              "showOnMap": true,
              "isIndividual": false,
              "onlyOnePlayerPerSpawnPoint": false,
              "resetStrictSpawnIndex": false,
              "replaceAreas": true,
              "forceCreate": false,
              "ignoreTeamsOnReuse": false,
              "target": "@ft_damage_t1_airfield_name",
              "team": "A",
              "separate_fuel_time": true,
              "modular_airfield": true,
              "tags": {
                "none_can_spawn": false,
                "tank": false,
                "artillery": false,
                "aaa": false,
                "ship": false,
                "boat": false
              }
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t1_storage_check"
            }
          }
        ]
      },
      "ft_damage_t1_storage_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "airfieldIsModuleHP": {
            "object": "@ft_damage_t1_airfield_name",
            "hp_check_mode": "less",
            "module": "storage",
            "hp_percent": 100.0
          }
        },
        "actions": [
          {
            "comment": {
              "value": "склады повереждены выясняем насколько сильно"
            }
          },
          {
            "comment": {
              "value": "вычисляем процент"
            }
          },
          {
            "comment": {
              "value": "получаем итоговое замедление"
            }
          },
          {
            "comment": {
              "value": "проверяем величину замедления"
            }
          },
          {
            "airfieldGetModuleHP": {
              "object": "@ft_damage_t1_airfield_name",
              "module": "storage",
              "var": "ft_damage_t1_storage_hp"
            }
          },
          {
            "varSetReal": {
              "value": 1.0,
              "var": "ft_damage_t1_storage_hp_percent",
              "input_var": "ft_damage_t1_storage_hp"
            }
          },
          {
            "varSetReal": {
              "value": 0.0,
              "var": "ft_damage_t1_storage_slow",
              "input_var": "ft_damage_t1_storage_hp_percent"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_damage_t1_storage_hp_percent"
            }
          },
          {
            "varModify": {
              "operator": "mul",
              "value": 100.0,
              "var": "ft_damage_t1_storage_hp_percent"
            }
          },
          {
            "varModify": {
              "operator": "divAB",
              "value": 100.0,
              "var": "ft_damage_t1_storage_hp_percent",
              "use_variable": true,
              "var_value": "ft_airfield_module_hp"
            }
          },
          {
            "varModify": {
              "operator": "divBA",
              "value": 100.0,
              "var": "ft_damage_t1_storage_slow"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t1_storage_max_value_check"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "склады не поврежедны. проверяем парковку"
          },
          "triggerEnable": {
            "target": "ft_damage_t1_parking_check"
          }
        }
      },
      "ft_damage_t1_storage_max_value_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareReal": {
            "var_value": "ft_damage_t1_storage_slow",
            "value": 10.0,
            "comparasion_func": "more"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "slow multipliers is more than. set it to 10"
            }
          },
          {
            "comment": {
              "value": "назначаем замедление"
            }
          },
          {
            "comment": {
              "value": "проверяем парковку"
            }
          },
          {
            "varSetReal": {
              "value": 10.0,
              "var": "ft_damage_t1_storage_slow"
            }
          },
          {
            "airfieldSetProperties": {
              "object": "@ft_damage_t1_airfield_name",
              "fuelMulVar": "ft_damage_t1_storage_slow",
              "reloadMulVar": "ft_damage_t1_storage_slow"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t1_parking_check"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "назначаем замедление"
            }
          },
          {
            "comment": {
              "value": "проверяем парковку"
            }
          },
          {
            "airfieldSetProperties": {
              "object": "@ft_damage_t1_airfield_name",
              "fuelMulVar": "ft_damage_t1_storage_slow",
              "reloadMulVar": "ft_damage_t1_storage_slow"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t1_parking_check"
            }
          }
        ]
      },
      "ft_damage_t1_parking_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "airfieldIsModuleHP": {
            "object": "@ft_damage_t1_airfield_name",
            "hp_check_mode": "less",
            "module": "parking",
            "hp_percent": 100.0
          }
        },
        "actions": [
          {
            "comment": {
              "value": "парковка повреждена выясняем насколько сильно"
            }
          },
          {
            "comment": {
              "value": "вычисляем процент"
            }
          },
          {
            "comment": {
              "value": "получаем итоговое замедление"
            }
          },
          {
            "comment": {
              "value": "проверяем величину замедления"
            }
          },
          {
            "airfieldGetModuleHP": {
              "object": "@ft_damage_t1_airfield_name",
              "module": "parking",
              "var": "ft_damage_t1_parking_hp"
            }
          },
          {
            "varSetReal": {
              "value": 1.0,
              "var": "ft_damage_t1_parking_hp_percent",
              "input_var": "ft_damage_t1_parking_hp"
            }
          },
          {
            "varSetReal": {
              "value": 1.0,
              "var": "ft_damage_t1_parking_slow",
              "input_var": "ft_damage_t1_parking_hp_percent"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_damage_t1_parking_hp_percent"
            }
          },
          {
            "varModify": {
              "operator": "mul",
              "value": 100.0,
              "var": "ft_damage_t1_parking_hp_percent"
            }
          },
          {
            "varModify": {
              "operator": "divAB",
              "value": 100.0,
              "var": "ft_damage_t1_parking_hp_percent",
              "use_variable": true,
              "var_value": "ft_airfield_module_hp"
            }
          },
          {
            "varModify": {
              "operator": "divBA",
              "value": 100.0,
              "var": "ft_damage_t1_parking_slow"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t1_parking_max_value_check"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "проверяем жилую зону"
          },
          "triggerEnable": {
            "target": "ft_damage_t1_dwelling_check"
          }
        }
      },
      "ft_damage_t1_parking_max_value_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareReal": {
            "var_value": "ft_damage_t1_parking_slow",
            "value": 10.0,
            "comparasion_func": "more"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "slow multipliers is more than. set it to 10"
            }
          },
          {
            "comment": {
              "value": "назначаем замедление"
            }
          },
          {
            "comment": {
              "value": "проверяем жилую зону"
            }
          },
          {
            "varSetReal": {
              "value": 10.0,
              "var": "ft_damage_t1_parking_slow"
            }
          },
          {
            "airfieldSetProperties": {
              "object": "@ft_damage_t1_airfield_name",
              "repairMulVar": "ft_damage_t1_parking_slow"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t1_dwelling_check"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "назначаем замедление"
            }
          },
          {
            "comment": {
              "value": "проверяем жилую зону"
            }
          },
          {
            "airfieldSetProperties": {
              "object": "@ft_damage_t1_airfield_name",
              "repairMulVar": "ft_damage_t1_parking_slow"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t1_dwelling_check"
            }
          }
        ]
      },
      "ft_damage_t1_dwelling_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": [
          {
            "airfieldIsModuleHP": {
              "object": "@ft_damage_t1_airfield_name",
              "hp_check_mode": "less",
              "module": "dwelling",
              "hp_percent": 100.0
            }
          },
          {
            "airfieldIsModuleHP": {
              "object": "@ft_damage_t1_airfield_name",
              "hp_check_mode": "more",
              "module": "dwelling",
              "hp_percent": 0.0
            }
          }
        ],
        "actions": [
          {
            "comment": {
              "value": "жилая зона повереждена выясняем насколько сильно"
            }
          },
          {
            "comment": {
              "value": "вычисляем процент"
            }
          },
          {
            "comment": {
              "value": "получаем итоговое замедление"
            }
          },
          {
            "comment": {
              "value": "проверяем величину замедления"
            }
          },
          {
            "airfieldGetModuleHP": {
              "object": "@ft_damage_t1_airfield_name",
              "module": "dwelling",
              "var": "ft_damage_t1_dwelling_hp"
            }
          },
          {
            "varSetReal": {
              "value": 1.0,
              "var": "ft_damage_t1_dwelling_hp_percent",
              "input_var": "ft_damage_t1_dwelling_hp"
            }
          },
          {
            "varSetReal": {
              "value": 1.0,
              "var": "ft_damage_t1_dwelling_slow",
              "input_var": "ft_damage_t1_dwelling_hp_percent"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_damage_t1_dwelling_hp_percent"
            }
          },
          {
            "varModify": {
              "operator": "mul",
              "value": 100.0,
              "var": "ft_damage_t1_dwelling_hp_percent"
            }
          },
          {
            "varModify": {
              "operator": "divAB",
              "value": 100.0,
              "var": "ft_damage_t1_dwelling_hp_percent",
              "use_variable": true,
              "var_value": "ft_airfield_module_hp"
            }
          },
          {
            "varModify": {
              "operator": "divBA",
              "value": 100.0,
              "var": "ft_damage_t1_dwelling_slow"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t1_dwelling_max_value_check"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "идем дальше по циклу"
          },
          "triggerEnable": {
            "target": "ft_damage_t1_rotator"
          }
        }
      },
      "ft_damage_t1_dwelling_max_value_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareReal": {
            "var_value": "ft_damage_t1_dwelling_slow",
            "value": 10.0,
            "comparasion_func": "more"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "slow multipliers is more than. set it to 10"
            }
          },
          {
            "comment": {
              "value": "восстанавливаем HP всем модулям"
            }
          },
          {
            "comment": {
              "value": "идем дальше по циклу"
            }
          },
          {
            "varSetReal": {
              "value": 10.0,
              "var": "ft_damage_t1_dwelling_slow"
            }
          },
          {
            "varSetReal": {
              "value": 0.0,
              "var": "ft_damage_t1_restore_hp",
              "input_var": "ft_damage_restore_base_hp"
            }
          },
          {
            "varModify": {
              "operator": "divAB",
              "value": 1.0,
              "var": "ft_damage_t1_restore_hp",
              "use_variable": true,
              "var_value": "ft_damage_t1_dwelling_slow"
            }
          },
          {
            "airfieldAddModuleHP": {
              "object": "@ft_damage_t1_airfield_name",
              "module": "airfield",
              "hp_var": "ft_damage_t1_restore_hp"
            }
          },
          {
            "airfieldAddModuleHP": {
              "object": "@ft_damage_t1_airfield_name",
              "module": "storage",
              "hp_var": "ft_damage_t1_restore_hp"
            }
          },
          {
            "airfieldAddModuleHP": {
              "object": "@ft_damage_t1_airfield_name",
              "module": "parking",
              "hp_var": "ft_damage_t1_restore_hp"
            }
          },
          {
            "airfieldAddModuleHP": {
              "object": "@ft_damage_t1_airfield_name",
              "module": "dwelling",
              "hp_var": "ft_damage_t1_restore_hp"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t1_rotator"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "восстанавливаем HP всем модулям"
            }
          },
          {
            "comment": {
              "value": "идем дальше по циклу"
            }
          },
          {
            "varSetReal": {
              "value": 0.0,
              "var": "ft_damage_t1_restore_hp",
              "input_var": "ft_damage_restore_base_hp"
            }
          },
          {
            "varModify": {
              "operator": "divAB",
              "value": 1.0,
              "var": "ft_damage_t1_restore_hp",
              "use_variable": true,
              "var_value": "ft_damage_t1_dwelling_slow"
            }
          },
          {
            "airfieldAddModuleHP": {
              "object": "@ft_damage_t1_airfield_name",
              "module": "airfield",
              "hp_var": "ft_damage_t1_restore_hp"
            }
          },
          {
            "airfieldAddModuleHP": {
              "object": "@ft_damage_t1_airfield_name",
              "module": "storage",
              "hp_var": "ft_damage_t1_restore_hp"
            }
          },
          {
            "airfieldAddModuleHP": {
              "object": "@ft_damage_t1_airfield_name",
              "module": "parking",
              "hp_var": "ft_damage_t1_restore_hp"
            }
          },
          {
            "airfieldAddModuleHP": {
              "object": "@ft_damage_t1_airfield_name",
              "module": "dwelling",
              "hp_var": "ft_damage_t1_restore_hp"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t1_rotator"
            }
          }
        ]
      },
      "ft_damage_t2_rotator": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": {
          "varCompareInt": {
            "var_value": "ft_damage_t2_cur_field_idx",
            "value": 3,
            "comparasion_func": "less",
            "var_value_other": "ft_t2_max_airfields_count"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "индекс филда в нужном диапазоне"
            }
          },
          {
            "comment": {
              "value": "увеличиваем индекс на 1"
            }
          },
          {
            "comment": {
              "value": "получаем имя переменной где хранится имя филда"
            }
          },
          {
            "comment": {
              "value": "создаем имя локализации"
            }
          },
          {
            "comment": {
              "value": "создаем имя переменной для хранения имени зоны"
            }
          },
          {
            "comment": {
              "value": "проверяем аэродром"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_damage_t2_cur_field_idx"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_damage_t2_airfield_var_name"
            }
          },
          {
            "varSetString": {
              "value": "missions/airfield_spawn",
              "var": "ft_damage_t2_loc_name"
            }
          },
          {
            "varSetString": {
              "value": "ft_t2_airfield_",
              "var": "ft_damage_t2_zone_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_damage_t2_cur_field_idx",
              "digits": 2,
              "var": "ft_damage_t2_airfield_var_name"
            }
          },
          {
            "varAddString": {
              "value": "_name",
              "digits": 0,
              "var": "ft_damage_t2_airfield_var_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_damage_t2_cur_field_idx",
              "digits": 0,
              "var": "ft_damage_t2_loc_name"
            }
          },
          {
            "varAddString": {
              "value": "@ft_damage_t2_cur_field_idx",
              "digits": 2,
              "var": "ft_damage_t2_zone_name"
            }
          },
          {
            "varAddString": {
              "value": "_bomb_zone",
              "digits": 0,
              "var": "ft_damage_t2_zone_name"
            }
          },
          {
            "varGetStringValue": {
              "from_var_name": "@ft_damage_t2_airfield_var_name",
              "var": "ft_damage_t2_airfield_name"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t2_check_airfield"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "индекс филда вышел за диапазон"
          },
          "triggerEnable": {
            "target": "ft_damage_t2_rotator_restart"
          }
        }
      },
      "ft_damage_t2_rotator_restart": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [],
        "actions": [
          {
            "comment": {
              "value": "убираем мусор за собой"
            }
          },
          {
            "comment": {
              "value": "обнуляем индекс и запускаем ротацию заново"
            }
          },
          {
            "triggerDisable": {
              "target": "ft_damage_t2_check_airfield"
            }
          },
          {
            "varSetInt": {
              "value": 0,
              "var": "ft_damage_t2_cur_field_idx"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t2_rotator"
            }
          }
        ],
        "else_actions": []
      },
      "ft_damage_t2_check_airfield": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "objectExists": {
            "target": "@ft_damage_t2_airfield_name",
            "type": "objectGroup"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "аэродром существует"
            }
          },
          {
            "comment": {
              "value": "проверяем его взлетную полосу"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t2_spawn_check"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "аэродром не существует"
          },
          "triggerEnable": {
            "target": "ft_damage_t2_rotator"
          }
        }
      },
      "ft_damage_t2_spawn_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "airfieldIsModuleHP": {
            "object": "@ft_damage_t2_airfield_name",
            "hp_check_mode": "equal",
            "module": "airfield",
            "hp_percent": 0.0
          }
        },
        "actions": [
          {
            "airfieldGetModuleHP": {
              "object": "@ft_damage_t2_airfield_name",
              "module": "airfield",
              "var": "ft_damage_t2_airfield_cur_hp"
            }
          },
          {
            "comment": {
              "value": "взлетка уничтожена, запрещаем спавн"
            }
          },
          {
            "comment": {
              "value": "проверяем склады ГСМ"
            }
          },
          {
            "missionMarkAsRespawnPoint": {
              "loc_name": "@ft_damage_t2_loc_name",
              "spawnEffect": false,
              "isStrictSpawn": false,
              "isAirfield": true,
              "isUnit": false,
              "radius": -1.0,
              "useExisting": true,
              "canSpawnOnNeutral": false,
              "removeAreas": false,
              "showOnMap": true,
              "isIndividual": false,
              "onlyOnePlayerPerSpawnPoint": false,
              "resetStrictSpawnIndex": false,
              "replaceAreas": true,
              "forceCreate": false,
              "ignoreTeamsOnReuse": false,
              "target": "@ft_damage_t2_airfield_name",
              "team": "B",
              "separate_fuel_time": true,
              "modular_airfield": true,
              "tags": {
                "none_can_spawn": true,
                "tank": false,
                "artillery": false,
                "aaa": false,
                "ship": false,
                "boat": false
              }
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t2_storage_check"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "взлетка жива. восстанавливаем спавн"
            }
          },
          {
            "comment": {
              "value": "проверяем склады ГСМ"
            }
          },
          {
            "missionMarkAsRespawnPoint": {
              "loc_name": "@ft_damage_t2_loc_name",
              "spawnEffect": false,
              "isStrictSpawn": false,
              "isAirfield": true,
              "isUnit": false,
              "radius": -1.0,
              "useExisting": true,
              "canSpawnOnNeutral": false,
              "removeAreas": false,
              "showOnMap": true,
              "isIndividual": false,
              "onlyOnePlayerPerSpawnPoint": false,
              "resetStrictSpawnIndex": false,
              "replaceAreas": true,
              "forceCreate": false,
              "ignoreTeamsOnReuse": false,
              "target": "@ft_damage_t2_airfield_name",
              "team": "B",
              "separate_fuel_time": true,
              "modular_airfield": true,
              "tags": {
                "none_can_spawn": false,
                "tank": false,
                "artillery": false,
                "aaa": false,
                "ship": false,
                "boat": false
              }
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t2_storage_check"
            }
          }
        ]
      },
      "ft_damage_t2_storage_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "airfieldIsModuleHP": {
            "object": "@ft_damage_t2_airfield_name",
            "hp_check_mode": "less",
            "module": "storage",
            "hp_percent": 100.0
          }
        },
        "actions": [
          {
            "comment": {
              "value": "склады повереждены выясняем насколько сильно"
            }
          },
          {
            "comment": {
              "value": "вычисляем процент"
            }
          },
          {
            "comment": {
              "value": "получаем итоговое замедление"
            }
          },
          {
            "comment": {
              "value": "проверяем величину замедления"
            }
          },
          {
            "airfieldGetModuleHP": {
              "object": "@ft_damage_t2_airfield_name",
              "module": "storage",
              "var": "ft_damage_t2_storage_hp"
            }
          },
          {
            "varSetReal": {
              "value": 1.0,
              "var": "ft_damage_t2_storage_hp_percent",
              "input_var": "ft_damage_t2_storage_hp"
            }
          },
          {
            "varSetReal": {
              "value": 1.0,
              "var": "ft_damage_t2_storage_slow",
              "input_var": "ft_damage_t2_storage_hp_percent"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_damage_t2_storage_hp_percent"
            }
          },
          {
            "varModify": {
              "operator": "mul",
              "value": 100.0,
              "var": "ft_damage_t2_storage_hp_percent"
            }
          },
          {
            "varModify": {
              "operator": "divAB",
              "value": 100.0,
              "var": "ft_damage_t2_storage_hp_percent",
              "use_variable": true,
              "var_value": "ft_airfield_module_hp"
            }
          },
          {
            "varModify": {
              "operator": "divBA",
              "value": 100.0,
              "var": "ft_damage_t2_storage_slow"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t2_storage_max_value_check"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "склады не поврежедны. проверяем парковку"
          },
          "triggerEnable": {
            "target": "ft_damage_t2_parking_check"
          }
        }
      },
      "ft_damage_t2_storage_max_value_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareReal": {
            "var_value": "ft_damage_t2_storage_slow",
            "value": 10.0,
            "comparasion_func": "more"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "slow multipliers is more than. set it to 10"
            }
          },
          {
            "comment": {
              "value": "назначаем замедление"
            }
          },
          {
            "comment": {
              "value": "проверяем парковку"
            }
          },
          {
            "varSetReal": {
              "value": 10.0,
              "var": "ft_damage_t2_storage_slow"
            }
          },
          {
            "airfieldSetProperties": {
              "object": "@ft_damage_t2_airfield_name",
              "fuelMulVar": "ft_damage_t2_storage_slow",
              "reloadMulVar": "ft_damage_t2_storage_slow"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t2_parking_check"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "назначаем замедление"
            }
          },
          {
            "comment": {
              "value": "проверяем парковку"
            }
          },
          {
            "airfieldSetProperties": {
              "object": "@ft_damage_t2_airfield_name",
              "fuelMulVar": "ft_damage_t2_storage_slow",
              "reloadMulVar": "ft_damage_t2_storage_slow"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t2_parking_check"
            }
          }
        ]
      },
      "ft_damage_t2_parking_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "airfieldIsModuleHP": {
            "object": "@ft_damage_t2_airfield_name",
            "hp_check_mode": "less",
            "module": "parking",
            "hp_percent": 100.0
          }
        },
        "actions": [
          {
            "comment": {
              "value": "парковка повреждена выясняем насколько сильно"
            }
          },
          {
            "comment": {
              "value": "вычисляем процент"
            }
          },
          {
            "comment": {
              "value": "получаем итоговое замедление"
            }
          },
          {
            "comment": {
              "value": "проверяем величину замедления"
            }
          },
          {
            "airfieldGetModuleHP": {
              "object": "@ft_damage_t2_airfield_name",
              "module": "parking",
              "var": "ft_damage_t2_parking_hp"
            }
          },
          {
            "varSetReal": {
              "value": 1.0,
              "var": "ft_damage_t2_parking_hp_percent",
              "input_var": "ft_damage_t2_parking_hp"
            }
          },
          {
            "varSetReal": {
              "value": 1.0,
              "var": "ft_damage_t2_parking_slow",
              "input_var": "ft_damage_t2_parking_hp_percent"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_damage_t2_parking_hp_percent"
            }
          },
          {
            "varModify": {
              "operator": "mul",
              "value": 100.0,
              "var": "ft_damage_t2_parking_hp_percent"
            }
          },
          {
            "varModify": {
              "operator": "divAB",
              "value": 100.0,
              "var": "ft_damage_t2_parking_hp_percent",
              "use_variable": true,
              "var_value": "ft_airfield_module_hp"
            }
          },
          {
            "varModify": {
              "operator": "divBA",
              "value": 100.0,
              "var": "ft_damage_t2_parking_slow"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t2_parking_max_value_check"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "проверяем жилую зону"
          },
          "triggerEnable": {
            "target": "ft_damage_t2_dwelling_check"
          }
        }
      },
      "ft_damage_t2_parking_max_value_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareReal": {
            "var_value": "ft_damage_t2_parking_slow",
            "value": 10.0,
            "comparasion_func": "more"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "slow multipliers is more than. set it to 10"
            }
          },
          {
            "comment": {
              "value": "назначаем замедление"
            }
          },
          {
            "comment": {
              "value": "проверяем жилую зону"
            }
          },
          {
            "varSetReal": {
              "value": 10.0,
              "var": "ft_damage_t2_parking_slow"
            }
          },
          {
            "airfieldSetProperties": {
              "object": "@ft_damage_t2_airfield_name",
              "repairMulVar": "ft_damage_t2_parking_slow"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t2_dwelling_check"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "назначаем замедление"
            }
          },
          {
            "comment": {
              "value": "проверяем жилую зону"
            }
          },
          {
            "airfieldSetProperties": {
              "object": "@ft_damage_t2_airfield_name",
              "repairMulVar": "ft_damage_t2_parking_slow"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t2_dwelling_check"
            }
          }
        ]
      },
      "ft_damage_t2_dwelling_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": [
          {
            "airfieldIsModuleHP": {
              "object": "@ft_damage_t2_airfield_name",
              "hp_check_mode": "less",
              "module": "dwelling",
              "hp_percent": 100.0
            }
          },
          {
            "airfieldIsModuleHP": {
              "object": "@ft_damage_t2_airfield_name",
              "hp_check_mode": "more",
              "module": "dwelling",
              "hp_percent": 0.0
            }
          }
        ],
        "actions": [
          {
            "comment": {
              "value": "жилая зона повереждена но не убита выясняем насколько сильно"
            }
          },
          {
            "comment": {
              "value": "вычисляем процент"
            }
          },
          {
            "comment": {
              "value": "получаем итоговое замедление"
            }
          },
          {
            "comment": {
              "value": "проверяем величину замедления"
            }
          },
          {
            "airfieldGetModuleHP": {
              "object": "@ft_damage_t2_airfield_name",
              "module": "dwelling",
              "var": "ft_damage_t2_dwelling_hp"
            }
          },
          {
            "varSetReal": {
              "value": 1.0,
              "var": "ft_damage_t2_dwelling_hp_percent",
              "input_var": "ft_damage_t2_dwelling_hp"
            }
          },
          {
            "varSetReal": {
              "value": 1.0,
              "var": "ft_damage_t2_dwelling_slow",
              "input_var": "ft_damage_t2_dwelling_hp_percent"
            }
          },
          {
            "varModify": {
              "operator": "add",
              "value": 1.0,
              "var": "ft_damage_t2_dwelling_hp_percent"
            }
          },
          {
            "varModify": {
              "operator": "mul",
              "value": 100.0,
              "var": "ft_damage_t2_dwelling_hp_percent"
            }
          },
          {
            "varModify": {
              "operator": "divAB",
              "value": 100.0,
              "var": "ft_damage_t2_dwelling_hp_percent",
              "use_variable": true,
              "var_value": "ft_airfield_module_hp"
            }
          },
          {
            "varModify": {
              "operator": "divBA",
              "value": 100.0,
              "var": "ft_damage_t2_dwelling_slow"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t2_dwelling_max_value_check"
            }
          }
        ],
        "else_actions": {
          "comment": {
            "value": "идем дальше по циклу"
          },
          "triggerEnable": {
            "target": "ft_damage_t2_rotator"
          }
        }
      },
      "ft_damage_t2_dwelling_max_value_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 0.0
          }
        },
        "conditions": {
          "varCompareReal": {
            "var_value": "ft_damage_t2_dwelling_slow",
            "value": 10.0,
            "comparasion_func": "more"
          }
        },
        "actions": [
          {
            "comment": {
              "value": "slow multipliers is more than. set it to 10"
            }
          },
          {
            "comment": {
              "value": "восстанавливаем HP всем модулям"
            }
          },
          {
            "comment": {
              "value": "идем дальше по циклу"
            }
          },
          {
            "varSetReal": {
              "value": 10.0,
              "var": "ft_damage_t2_dwelling_slow"
            }
          },
          {
            "varSetReal": {
              "value": 0.0,
              "var": "ft_damage_t2_restore_hp",
              "input_var": "ft_damage_restore_base_hp"
            }
          },
          {
            "varModify": {
              "operator": "divAB",
              "value": 1.0,
              "var": "ft_damage_t2_restore_hp",
              "use_variable": true,
              "var_value": "ft_damage_t2_dwelling_slow"
            }
          },
          {
            "airfieldAddModuleHP": {
              "object": "@ft_damage_t2_airfield_name",
              "module": "airfield",
              "hp_var": "ft_damage_t2_restore_hp"
            }
          },
          {
            "airfieldAddModuleHP": {
              "object": "@ft_damage_t2_airfield_name",
              "module": "storage",
              "hp_var": "ft_damage_t2_restore_hp"
            }
          },
          {
            "airfieldAddModuleHP": {
              "object": "@ft_damage_t2_airfield_name",
              "module": "parking",
              "hp_var": "ft_damage_t2_restore_hp"
            }
          },
          {
            "airfieldAddModuleHP": {
              "object": "@ft_damage_t2_airfield_name",
              "module": "dwelling",
              "hp_var": "ft_damage_t2_restore_hp"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t1_rotator"
            }
          }
        ],
        "else_actions": [
          {
            "comment": {
              "value": "восстанавливаем HP всем модулям"
            }
          },
          {
            "comment": {
              "value": "идем дальше по циклу"
            }
          },
          {
            "varSetReal": {
              "value": 0.0,
              "var": "ft_damage_t2_restore_hp",
              "input_var": "ft_damage_restore_base_hp"
            }
          },
          {
            "varModify": {
              "operator": "divAB",
              "value": 1.0,
              "var": "ft_damage_t2_restore_hp",
              "use_variable": true,
              "var_value": "ft_damage_t2_dwelling_slow"
            }
          },
          {
            "airfieldAddModuleHP": {
              "object": "@ft_damage_t2_airfield_name",
              "module": "airfield",
              "hp_var": "ft_damage_t2_restore_hp"
            }
          },
          {
            "airfieldAddModuleHP": {
              "object": "@ft_damage_t2_airfield_name",
              "module": "storage",
              "hp_var": "ft_damage_t2_restore_hp"
            }
          },
          {
            "airfieldAddModuleHP": {
              "object": "@ft_damage_t2_airfield_name",
              "module": "parking",
              "hp_var": "ft_damage_t2_restore_hp"
            }
          },
          {
            "airfieldAddModuleHP": {
              "object": "@ft_damage_t2_airfield_name",
              "module": "dwelling",
              "hp_var": "ft_damage_t2_restore_hp"
            }
          },
          {
            "triggerEnable": {
              "target": "ft_damage_t2_rotator"
            }
          }
        ]
      }
    },
    "ft_aaa_teamate_destroy_routine": {
      "isCategory": true,
      "is_enabled": true,
      "ft_aaa_teamate_destroy_check_start": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": false
        },
        "events": {
          "periodicEvent": {
            "time": 1.0
          }
        },
        "conditions": [],
        "actions": {
          "triggerEnable": [
            {
              "target": "ft_aaa_t1_by_t1_destroy_check"
            },
            {
              "target": "ft_aaa_t2_by_t2_destroy_check"
            }
          ]
        },
        "else_actions": []
      },
      "ft_aaa_t1_by_t1_destroy_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": true
        },
        "events": {
          "periodicEvent": {
            "time": 10.0
          }
        },
        "conditions": {
          "unitWhenCountMatches": {
            "object_type": "killedBy",
            "object_marking": 0,
            "object_var_name": "",
            "object_var_comp_op": "equal",
            "func": "more",
            "value": 0,
            "object": "ft_t1_aaa_squad",
            "killedByObject": "t1_players_squad"
          }
        },
        "actions": {
          "unitRestore": {
            "target_marking": 0,
            "ressurectIfDead": true,
            "fullRestore": true,
            "target": "ft_t1_aaa_squad",
            "useForTriggerFiltered": true
          }
        },
        "else_actions": []
      },
      "ft_aaa_t2_by_t2_destroy_check": {
        "is_enabled": false,
        "comments": "",
        "props": {
          "actionsType": "PERFORM_ONE_BY_ONE",
          "conditionsType": "ALL",
          "enableAfterComplete": true
        },
        "events": {
          "periodicEvent": {
            "time": 10.0
          }
        },
        "conditions": {
          "unitWhenCountMatches": {
            "object_type": "killedBy",
            "object_marking": 0,
            "object_var_name": "",
            "object_var_comp_op": "equal",
            "func": "more",
            "value": 0,
            "object": "ft_t2_aaa_squad",
            "killedByObject": "t2_players_squad"
          }
        },
        "actions": {
          "unitRestore": {
            "target_marking": 0,
            "ressurectIfDead": true,
            "fullRestore": true,
            "target": "ft_t2_aaa_squad",
            "useForTriggerFiltered": true
          }
        },
        "else_actions": []
      }
    }
  },
  "mission_objectives": {
    "isCategory": true,
    "is_enabled": true,
    "ft_t1_destroy_enemy_airfield_01": {
      "is_enabled": false,
      "comments": "",
      "type": "abstractMissionObjective",
      "props": {
        "isPrimary": true,
        "timeLimit": 18000,
        "scoreConst": 100,
        "scoreTime": 400,
        "team": "A"
      },
      "onSuccess": [],
      "onFailed": []
    },
    "ft_t1_destroy_enemy_airfield_02": {
      "is_enabled": false,
      "comments": "",
      "type": "abstractMissionObjective",
      "props": {
        "isPrimary": true,
        "timeLimit": 18000,
        "scoreConst": 100,
        "scoreTime": 400,
        "team": "A"
      },
      "onSuccess": [],
      "onFailed": []
    },
    "ft_t1_destroy_enemy_airfield_03": {
      "is_enabled": false,
      "comments": "",
      "type": "abstractMissionObjective",
      "props": {
        "isPrimary": true,
        "timeLimit": 18000,
        "scoreConst": 100,
        "scoreTime": 400,
        "team": "A"
      },
      "onSuccess": [],
      "onFailed": []
    },
    "ft_t2_destroy_enemy_airfield_01": {
      "is_enabled": false,
      "comments": "",
      "type": "abstractMissionObjective",
      "props": {
        "isPrimary": true,
        "timeLimit": 18000,
        "scoreConst": 100,
        "scoreTime": 400,
        "team": "B"
      },
      "onSuccess": [],
      "onFailed": []
    },
    "ft_t2_destroy_enemy_airfield_02": {
      "is_enabled": false,
      "comments": "",
      "type": "abstractMissionObjective",
      "props": {
        "isPrimary": true,
        "timeLimit": 18000,
        "scoreConst": 100,
        "scoreTime": 400,
        "team": "B"
      },
      "onSuccess": [],
      "onFailed": []
    },
    "ft_t2_destroy_enemy_airfield_03": {
      "is_enabled": false,
      "comments": "",
      "type": "abstractMissionObjective",
      "props": {
        "isPrimary": true,
        "timeLimit": 18000,
        "scoreConst": 100,
        "scoreTime": 400,
        "team": "B"
      },
      "onSuccess": [],
      "onFailed": []
    },
    "ft_t1_find_enemy_airfield": {
      "is_enabled": false,
      "comments": "",
      "type": "abstractMissionObjective",
      "props": {
        "isPrimary": true,
        "timeLimit": 18000,
        "scoreConst": 100,
        "scoreTime": 400,
        "team": "A"
      },
      "onSuccess": [],
      "onFailed": []
    },
    "ft_t2_find_enemy_airfield": {
      "is_enabled": false,
      "comments": "",
      "type": "abstractMissionObjective",
      "props": {
        "isPrimary": true,
        "timeLimit": 18000,
        "scoreConst": 100,
        "scoreTime": 400,
        "team": "B"
      },
      "onSuccess": [],
      "onFailed": []
    }
  },
  "variables": {
    "ft_t1_max_airfields_count": 6,
    "ft_t2_max_airfields_count": 6,
    "ft_generate_t1_idx": 0,
    "ft_generate_t2_idx": 0,
    "ft_distance_check_t1_check_idx": 0,
    "ft_distance_check_t2_check_idx": 0,
    "ft_generate_t1_randomizer": 0,
    "ft_generate_t2_randomizer": 0,
    "ft_generate_t1_cur_idx": 0,
    "ft_generate_t2_cur_idx": 0,
    "ft_generate_t1_var_name": "",
    "ft_generate_t2_var_name": "",
    "ft_generate_t1_airfield_name": "",
    "ft_generate_t2_airfield_name": "",
    "ft_generate_t1_area_name": "",
    "ft_generate_t2_area_name": "",
    "ft_generate_t1_loc_name": "",
    "ft_generate_t2_loc_name": "",
    "ft_generate_t1_target_name": "",
    "ft_generate_t2_target_name": "",
    "ft_generate_t1_aaa_idx": 0,
    "ft_generate_t2_aaa_idx": 0,
    "ft_generate_t1_aaa_name": "",
    "ft_generate_t2_aaa_name": "",
    "ft_t1_airfield_01_name": "",
    "ft_t1_airfield_02_name": "",
    "ft_t1_airfield_03_name": "",
    "ft_t1_airfield_04_name": "",
    "ft_t1_airfield_05_name": "",
    "ft_t1_airfield_06_name": "",
    "ft_t1_airfield_07_name": "",
    "ft_t1_airfield_08_name": "",
    "ft_t1_airfield_09_name": "",
    "ft_t2_airfield_01_name": "",
    "ft_t2_airfield_02_name": "",
    "ft_t2_airfield_03_name": "",
    "ft_t2_airfield_04_name": "",
    "ft_t2_airfield_05_name": "",
    "ft_t2_airfield_06_name": "",
    "ft_t2_airfield_07_name": "",
    "ft_t2_airfield_08_name": "",
    "ft_t2_airfield_09_name": "",
    "ft_t1_airfield_01_bomb_zone": "",
    "ft_t1_airfield_02_bomb_zone": "",
    "ft_t1_airfield_03_bomb_zone": "",
    "ft_t1_airfield_04_bomb_zone": "",
    "ft_t1_airfield_05_bomb_zone": "",
    "ft_t1_airfield_06_bomb_zone": "",
    "ft_t1_airfield_07_bomb_zone": "",
    "ft_t1_airfield_08_bomb_zone": "",
    "ft_t1_airfield_09_bomb_zone": "",
    "ft_t2_airfield_01_bomb_zone": "",
    "ft_t2_airfield_02_bomb_zone": "",
    "ft_t2_airfield_03_bomb_zone": "",
    "ft_t2_airfield_04_bomb_zone": "",
    "ft_t2_airfield_05_bomb_zone": "",
    "ft_t2_airfield_06_bomb_zone": "",
    "ft_t2_airfield_07_bomb_zone": "",
    "ft_t2_airfield_08_bomb_zone": "",
    "ft_t2_airfield_09_bomb_zone": "",
    "ft_t1_airfield_01_found": false,
    "ft_t1_airfield_02_found": false,
    "ft_t1_airfield_03_found": false,
    "ft_t1_airfield_04_found": false,
    "ft_t1_airfield_05_found": false,
    "ft_t1_airfield_06_found": false,
    "ft_t1_airfield_07_found": false,
    "ft_t1_airfield_08_found": false,
    "ft_t1_airfield_09_found": false,
    "ft_t2_airfield_01_found": false,
    "ft_t2_airfield_02_found": false,
    "ft_t2_airfield_03_found": false,
    "ft_t2_airfield_04_found": false,
    "ft_t2_airfield_05_found": false,
    "ft_t2_airfield_06_found": false,
    "ft_t2_airfield_07_found": false,
    "ft_t2_airfield_08_found": false,
    "ft_t2_airfield_09_found": false,
    "ft_t1_airfield_01_bomb_target": "",
    "ft_t1_airfield_02_bomb_target": "",
    "ft_t1_airfield_03_bomb_target": "",
    "ft_t1_airfield_04_bomb_target": "",
    "ft_t1_airfield_05_bomb_target": "",
    "ft_t1_airfield_06_bomb_target": "",
    "ft_t1_airfield_07_bomb_target": "",
    "ft_t1_airfield_08_bomb_target": "",
    "ft_t1_airfield_09_bomb_target": "",
    "ft_t2_airfield_01_bomb_target": "",
    "ft_t2_airfield_02_bomb_target": "",
    "ft_t2_airfield_03_bomb_target": "",
    "ft_t2_airfield_04_bomb_target": "",
    "ft_t2_airfield_05_bomb_target": "",
    "ft_t2_airfield_06_bomb_target": "",
    "ft_t2_airfield_07_bomb_target": "",
    "ft_t2_airfield_08_bomb_target": "",
    "ft_t2_airfield_09_bomb_target": "",
    "ft_t1_airfield_01_destroyed": false,
    "ft_t1_airfield_02_destroyed": false,
    "ft_t1_airfield_03_destroyed": false,
    "ft_t1_airfield_04_destroyed": false,
    "ft_t1_airfield_05_destroyed": false,
    "ft_t1_airfield_06_destroyed": false,
    "ft_t1_airfield_07_destroyed": false,
    "ft_t1_airfield_08_destroyed": false,
    "ft_t1_airfield_09_destroyed": false,
    "ft_t2_airfield_01_destroyed": false,
    "ft_t2_airfield_02_destroyed": false,
    "ft_t2_airfield_03_destroyed": false,
    "ft_t2_airfield_04_destroyed": false,
    "ft_t2_airfield_05_destroyed": false,
    "ft_t2_airfield_06_destroyed": false,
    "ft_t2_airfield_07_destroyed": false,
    "ft_t2_airfield_08_destroyed": false,
    "ft_t2_airfield_09_destroyed": false,
    "ft_t1_airfield_01_active": false,
    "ft_t1_airfield_02_active": false,
    "ft_t1_airfield_03_active": false,
    "ft_t1_airfield_04_active": false,
    "ft_t1_airfield_05_active": false,
    "ft_t1_airfield_06_active": false,
    "ft_t1_airfield_07_active": false,
    "ft_t1_airfield_08_active": false,
    "ft_t1_airfield_09_active": false,
    "ft_t2_airfield_01_active": false,
    "ft_t2_airfield_02_active": false,
    "ft_t2_airfield_03_active": false,
    "ft_t2_airfield_04_active": false,
    "ft_t2_airfield_05_active": false,
    "ft_t2_airfield_06_active": false,
    "ft_t2_airfield_07_active": false,
    "ft_t2_airfield_08_active": false,
    "ft_t2_airfield_09_active": false,
    "ft_is_detect_on": false,
    "ft_base_detection_range": 4500.0,
    "ft_t1_detection_range": 4500.0,
    "ft_t2_detection_range": 4500.0,
    "ft_t1_num_airfields_detected": 0,
    "ft_t2_num_airfields_detected": 0,
    "ft_is_big_reward": false,
    "ft_t1_delete_objective_in_progress": false,
    "ft_t2_delete_objective_in_progress": false,
    "ft_balance_level": 0,
    "ft_airfield_module_hp": 8000.0,
    "ft_airfield_module_spawn_hp": 16000.0,
    "ft_t1_num_destroyed_fields": 0,
    "ft_t2_num_destroyed_fields": 0,
    "ft_is_hidden_objectives": false,
    "ft_add_objective_t1_zone_name": "",
    "ft_add_objective_t1_idx": 0,
    "ft_add_objective_t1_objective_name": "",
    "ft_add_objective_t2_zone_name": "",
    "ft_add_objective_t2_idx": 0,
    "ft_add_objective_t2_objective_name": "",
    "ft_complete_objective_t1_zone_name": "",
    "ft_complete_objective_t1_idx": 0,
    "ft_complete_objective_t1_objective_name": "",
    "ft_complete_objective_t2_zone_name": "",
    "ft_complete_objective_t2_idx": 0,
    "ft_complete_objective_t2_objective_name": "",
    "ft_destroy_t1_cur_field_idx": 0,
    "ft_destroy_t2_cur_field_idx": 0,
    "ft_destroy_t1_airfield_name": "",
    "ft_destroy_t1_zone_name": "",
    "ft_destroy_t1_found_name": "",
    "ft_destroy_t1_destroyed_name": "",
    "ft_destroy_t1_aaa_name": "",
    "ft_destroy_t1_timer_name": "",
    "ft_destroy_t1_active_name": "",
    "ft_destroy_t2_airfield_name": "",
    "ft_destroy_t2_zone_name": "",
    "ft_destroy_t2_found_name": "",
    "ft_destroy_t2_destroyed_name": "",
    "ft_destroy_t2_aaa_name": "",
    "ft_destroy_t2_timer_name": "",
    "ft_destroy_t2_active_name": "",
    "ft_detect_t1_cur_field_idx": 0,
    "ft_detect_t2_cur_field_idx": 0,
    "ft_detect_t1_airfield_name": "",
    "ft_detect_t1_bomb_target_name": "",
    "ft_detect_t1_found_name": "",
    "ft_detect_t1_destroyed_name": "",
    "ft_detect_t1_active_name": "",
    "ft_detect_t1_zone_name": "",
    "ft_detect_t2_airfield_name": "",
    "ft_detect_t2_bomb_target_name": "",
    "ft_detect_t2_found_name": "",
    "ft_detect_t2_destroyed_name": "",
    "ft_detect_t2_active_name": "",
    "ft_detect_t2_zone_name": "",
    "ft_t1_bombers_field_target": "",
    "ft_t1_bombers_field_idx": 0,
    "ft_t1_bombers_field_detect_name": "",
    "ft_t1_bombers_searching": false,
    "ft_t2_bombers_field_target": "",
    "ft_t2_bombers_field_idx": 0,
    "ft_t2_bombers_field_detect_name": "",
    "ft_t2_bombers_searching": false,
    "ft_capture_t1_airfield_idx": 0,
    "ft_capture_t2_airfield_idx": 0,
    "ft_capture_t1_airfield_name": "",
    "ft_capture_t2_airfield_name": "",
    "ft_capture_t1_airfield_target_name": "",
    "ft_capture_t2_airfield_target_name": "",
    "ft_capture_t1_frontline_name": "",
    "ft_capture_t2_frontline_name": "",
    "ft_capture_t1_bomb_zone_name": "",
    "ft_capture_t2_bomb_zone_name": "",
    "ft_generate_t1_aaa_field_idx": 0,
    "ft_generate_t2_aaa_field_idx": 0,
    "ft_generate_t1_aaa_field_name": "",
    "ft_generate_t2_aaa_field_name": "",
    "ft_generate_t1_aaa_squad_name": "",
    "ft_generate_t2_aaa_squad_name": "",
    "ft_distance_check_t1_airfield_var_name": "",
    "ft_distance_check_t1_airfield_name": "",
    "ft_distance_check_t2_airfield_var_name": "",
    "ft_distance_check_t2_airfield_name": "",
    "ft_generate_t1_distance_check_fail": false,
    "ft_generate_t2_distance_check_fail": false,
    "st_is_launch_alowed": false,
    "st_t1_generate_idx": 0,
    "st_t2_generate_idx": 0,
    "st_t1_generate_name": "",
    "st_t2_generate_name": "",
    "st_t1_generate_field_var_name": "",
    "st_t2_generate_field_var_name": "",
    "st_t1_generate_field_name": "",
    "st_t2_generate_field_name": "",
    "st_t1_generate_target_name": "",
    "st_t2_generate_target_name": "",
    "st_t1_despawn_name": "",
    "st_t2_despawn_name": "",
    "ft_land_enemy_t1_airfield_name": "",
    "ft_land_enemy_t2_airfield_name": "",
    "ft_land_enemy_t1_airfield_idx": 0,
    "ft_land_enemy_t2_airfield_idx": 0,
    "ft_capture_t1_prev_frontline_name": "",
    "ft_capture_t2_prev_frontline_name": "",
    "ft_t1_bombers_field_zone": "",
    "ft_t2_bombers_field_zone": "",
    "ft_max_airfield_idx_to_generate": 6,
    "ft_destroy_quest_is_on": false,
    "st_fuel_t1_sentinell_name": "",
    "st_fuel_t2_sentinell_name": "",
    "st_fuel_t1_sentinell_idx": 0,
    "st_fuel_t2_sentinell_idx": 0,
    "st_fuel_t1_airfield_idx": 0,
    "st_fuel_t2_airfield_idx": 0,
    "st_fuel_t1_airfield_name": "",
    "st_fuel_t2_airfield_name": "",
    "st_fuel_t1_airfield_var_name": "",
    "st_fuel_t2_airfield_var_name": "",
    "st_rearm_t1_sentinell_name": "",
    "st_rearm_t2_sentinell_name": "",
    "st_rearm_t1_sentinell_idx": 0,
    "st_rearm_t2_sentinell_idx": 0,
    "st_rearm_t1_airfield_idx": 0,
    "st_rearm_t2_airfield_idx": 0,
    "st_rearm_t1_airfield_name": "",
    "st_rearm_t2_airfield_name": "",
    "st_rearm_t1_airfield_target_name": "",
    "st_rearm_t2_airfield_target_name": "",
    "st_rearm_t1_airfield_var_name": "",
    "st_rearm_t2_airfield_var_name": "",
    "st_is_landing_alowed": true,
    "ft_capture_t1_own_area_name": "",
    "ft_capture_t2_own_area_name": "",
    "ft_capture_t1_own_state_name": "",
    "ft_capture_t2_own_state_name": "",
    "ft_capture_t1_own_state_idx": 0,
    "ft_capture_t2_own_state_idx": 0,
    "ft_generate_t1_own_area_name": "",
    "ft_generate_t2_own_area_name": "",
    "ft_generate_t1_own_state_name": "",
    "ft_generate_t2_own_state_name": "",
    "ft_generate_t1_own_state_idx": 0,
    "ft_generate_t2_own_state_idx": 0,
    "ft_damage_t1_cur_field_idx": 0,
    "ft_damage_t2_cur_field_idx": 0,
    "ft_damage_t1_airfield_var_name": "",
    "ft_damage_t2_airfield_var_name": "",
    "ft_damage_t1_airfield_name": "",
    "ft_damage_t2_airfield_name": "",
    "ft_damage_t1_storage_hp": 0.0,
    "ft_damage_t2_storage_hp": 0.0,
    "ft_damage_t1_storage_hp_percent": 0.0,
    "ft_damage_t2_storage_hp_percent": 0.0,
    "ft_damage_t1_parking_hp": 0.0,
    "ft_damage_t2_parking_hp": 0.0,
    "ft_damage_t1_parking_hp_percent": 0.0,
    "ft_damage_t2_parking_hp_percent": 0.0,
    "ft_damage_t1_dwelling_hp": 0.0,
    "ft_damage_t2_dwelling_hp": 0.0,
    "ft_damage_t1_dwelling_hp_percent": 0.0,
    "ft_damage_t2_dwelling_hp_percent": 0.0,
    "ft_damage_t1_restore_hp": 100.0,
    "ft_damage_t2_restore_hp": 100.0,
    "ft_damage_restore_base_hp": 100.0,
    "ft_damage_t1_loc_name": "",
    "ft_damage_t2_loc_name": "",
    "ft_damage_t1_zone_name": "",
    "ft_damage_t2_zone_name": "",
    "ft_damage_t1_storage_slow": 0.0,
    "ft_damage_t1_parking_slow": 0.0,
    "ft_damage_t1_dwelling_slow": 0.0,
    "ft_damage_t2_storage_slow": 0.0,
    "ft_damage_t2_parking_slow": 0.0,
    "ft_damage_t2_dwelling_slow": 0.0,
    "ft_generate_t1_add_idx": 0,
    "ft_generate_t2_add_idx": 0,
    "ft_generate_t1_try_count": 0,
    "ft_generate_t2_try_count": 0,
    "log_var": "",
    "ft_t1_max_near_airfields_count": 3,
    "ft_t2_max_near_airfields_count": 3,
    "ft_t1_max_mid_airfields_count": 3,
    "ft_t2_max_mid_airfields_count": 3,
    "ft_t1_max_far_airfields_count": 3,
    "ft_t2_max_far_airfields_count": 3,
    "ft_t1_cur_near_airfields_count": 0,
    "ft_t2_cur_near_airfields_count": 0,
    "ft_t1_cur_mid_airfields_count": 0,
    "ft_t2_cur_mid_airfields_count": 0,
    "ft_t1_cur_far_airfields_count": 0,
    "ft_t2_cur_far_airfields_count": 0,
    "ft_generate_t1_prev_value": 0,
    "ft_generate_t2_prev_value": 0,
    "ft_generate_t1_cur_idx_var_name": "",
    "ft_generate_t2_cur_idx_var_name": "",
    "ft_generate_t1_aaa_field_var_name": "",
    "ft_generate_t2_aaa_field_var_name": "",
    "ft_generate_t1_target_var_name": "",
    "ft_generate_t2_target_var_name": "",
    "ft_generate_t1_area_var_name": "",
    "ft_generate_t2_area_var_name": "",
    "ft_generate_distance_between": 10000.0,
    "ft_balance_level_forced": 0,
    "ft_damage_t1_airfield_cur_hp": 0.0,
    "ft_damage_t2_airfield_cur_hp": 0.0,
    "ft_generate_t1_aaa_far_idx": 0,
    "ft_generate_t1_aaa_mid_idx": 0,
    "ft_generate_t1_aaa_near_idx": 0,
    "ft_generate_t2_aaa_far_idx": 0,
    "ft_generate_t2_aaa_mid_idx": 0,
    "ft_generate_t2_aaa_near_idx": 0,
    "ft_generate_t1_aaa_cur_sub_idx": 0,
    "ft_generate_t2_aaa_cur_sub_idx": 0,
    "ft_generate_t1_aaa_cur_field_idx": 0,
    "ft_generate_t2_aaa_cur_field_idx": 0,
    "ft_generate_t1_aaa_next_trigger_name": "",
    "ft_generate_t2_aaa_next_trigger_name": "",
    "ft_helicopters_pad_exclusive": false
  },
  "dialogs": [],
  "airfields": [],
  "effects": [],
  "units": [],
  "areas": [],
  "objLayers": [
    {
      "layer": {
        "enabled": true
      }
    },
    {
      "layer": {
        "enabled": true
      }
    },
    {
      "layer": {
        "enabled": true
      }
    },
    {
      "layer": {
        "enabled": true
      }
    }
  ],
  "wayPoints": []
}